{"challenge":{"announcements":[],"are_results_final":true,"early_period_ms":10800000,"end_ms":1651350600000,"hide_scoreboard":false,"hide_scoreboard_config":{},"id":"00000000008cacc6","is_practice_available":true,"my_user_type":1,"my_user_type__str":"SPECTATOR","registration_gives_participant":false,"result_status":30,"result_status__str":"FINALIZED","start_ms":1651336200000,"tasks":[{"id":"0000000000aff4a0","statement":"<!--\n  All styles must be keyed by id/class because inline styles are global.\n  Prefix them with 'hashcode-' to avoid name collisions.\n -->\n<style>\n  .hashcode h3 {\n    font-weight: 600 !important;\n    font-size: 1.5rem !important;\n  }\n\n  .hashcode h4 {\n    font-weight: 600 !important;\n    font-size: 1.25rem !important;\n  }\n\n  .hashcode ul {\n    margin-left: 10px;\n  }\n\n  .hashcode ol {\n    margin-left: 10px;\n  }\n\n  .hashcode-warning-box {\n    outline: 1px solid black !important;\n    margin-top: 10px;\n    padding: 5px 5px 5px 5px;\n    background-color: lightblue;\n  }\n\n  .hashcode-example-box {\n    outline: 1px solid black !important;\n    margin-top: 10px;\n    padding: 5px 5px 5px 5px;\n  }\n\n  .hashcode-no-style-list li {\n    list-style-type: none;\n  }\n\n  .hashcode-cross-style-list li {\n    list-style-type: \"‚ùå\";\n  }\n\n  .hashcode-warning-style-list li {\n    list-style-type: \"‚ö†Ô∏è\";\n  }\n\n  .hashcode-file td {\n    vertical-align: top;\n  }\n\n  .hashcode-file code {\n    overflow: scroll;\n    white-space: nowrap;\n  }\n\n  .hashcode img {\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n\n    min-width: 150px;\n  }\n\n  img.hashcode-big-img {\n    max-width: 800px;\n    width: 100%;\n  }\n\n  img.hashcode-medium-img {\n    max-width: 600px;\n    width: 75%;\n  }\n\n  img.hashcode-small-img {\n    max-width: 300px;\n    width: 100%;\n  }\n</style>\n\n<div class=\"hashcode\">\n  <img\n    alt=\"Santa says hi to the Hash Code World Finalists\"\n    src=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U0D-AkCMo56XB8BXMqo8jnrcjX7Jb8BqusKRPqkKSHiGqVYbFavNh6lWLstNIxQZb6aq6mx37A/santa_hi.png\"\n    title=\"Santa\"\n    class=\"hashcode-big-img\"\n  />\n\n  <h3>Introduction</h3>\n\n  <p>\n    Every year since 2004, the\n    <a href=\"https://santatracker.google.com/\">Google Santa Tracker</a>\n    project has helped visualize the route taken by the legendary character\n    Santa Claus each December to distribute gifts to kids around the world.\n  </p>\n  <p>\n    Though December is months away, preparations are in full swing at Santa's\n    home in Lapland. The Google Santa Tracker is also getting ready, and rumors\n    are that this year is going to be especially interesting. A secret team of\n    Engineers in Light-speed Flights (ELF), in collaboration with the Gnome\n    Institute of Generous Gift Logistics Engineering (GIGGLE) in Lapland, is\n    working to develop new experimental optimization algorithms that help Santa\n    deliver gifts more effectively.\n  </p>\n  <p>\n    The early results are promising, but Santa thinks they can be improved. When\n    Santa learned about the famous optimization skills of Hash Code\n    participants, he asked if Hash Code World Finalists would be able to help\n    out. <strong>Are you up for the challenge?</strong>\n  </p>\n\n  <h3>Task</h3>\n\n  <p>\n    Santa is delivering gifts on a frictionless 2D plane, using a\n    reindeer-powered sleigh that accelerates using‚Ä¶ carrots ü•ï.\n  </p>\n\n  <p>\n    Your task is to plan actions for the sleigh to make gift deliveries and\n    maximize the total score.\n  </p>\n\n  <h3>Problem description</h3>\n\n  <h4>The world</h4>\n\n  <p>\n    The world is a 2D grid with integer coordinates. We refer to a cell at\n    column $$$c$$$ and row $$$r$$$ as $$$(c, r)$$$ $$$(-10^9 \\leq c, r \\leq\n    10^9)$$$.\n  </p>\n\n  <p>\n    The <strong>distance</strong> between two cells $$$(c_a, r_a)$$$ and\n    $$$(c_b, r_b)$$$ is calculated as $$$\\sqrt{|c_a - c_b|^2 + |r_a - r_b|^2}$$$\n    (Euclidean distance).\n  </p>\n\n  <p>Santa starts at Lapland $$$(0,0)$$$ where all the gifts are stored.</p>\n\n  <br />\n  <img\n    alt=\"Lapland is at (0,0), all gifts are stored there.\"\n    src=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U0tu7KtoEmXg72k8fi97TLeTsKAEnAuLd15Oc6qtce0wQdm2UkOY2oa1bEG1OQFnj3qWB8GYg/lapland.png\"\n    title=\"Lapland\"\n    class=\"hashcode-medium-img\"\n  />\n  <br />\n\n  <p>Santa only has $$$T$$$ seconds to deliver the gifts, so hurry up!</p>\n\n  <h4>Gifts and carrots</h4>\n\n  <p>\n    There are two types of things Santa can load onto his sleigh: gifts and\n    carrots.\n  </p>\n\n  <p>\n    <strong>Gifts</strong> need to be delivered to children around the world.\n    You are given the list of $$$G$$$ gifts, for each of which you know:\n  </p>\n  <ul>\n    <li>the name of the child that should receive it,</li>\n    <li>the score awarded for delivering this gift,</li>\n    <li>the weight of the gift in kilograms (kg),</li>\n    <li>the coordinates $$$(c, r)$$$ where it needs to be delivered.</li>\n  </ul>\n\n  <p>\n    <strong>Carrots</strong> are food for Santa's magic reindeer who need to eat\n    them to accelerate. Each carrot weighs <strong>1 kg</strong> (yes, we know\n    they are heavy‚Ä¶ but they really are magic!).\n  </p>\n\n  <p>\n    Thanks to a very effective team of helper gnomes, gift delivery happens\n    instantaneously at the beginning of the second. Similarly, gift/carrots pick\n    up happens instantaneously at the beginning of the second.\n  </p>\n\n  <h4>Range</h4>\n\n  <p>\n    Santa can deliver gifts to all children within a maximum distance of $$$D$$$\n    (inclusive) from his sleigh. Similarly, Santa can pick up gifts and carrots\n    whenever the sleigh is within a maximum distance of $$$D$$$ (inclusive) from\n    his base at $$$(0, 0)$$$. We call this maximum distance of $$$D$$$ \"range\".\n  </p>\n\n  <div class=\"hashcode-example-box\">\n    <p>For example, for the range $$$D = 3$$$ and the sleigh at $$$(c,r)$$$:</p>\n    <ul>\n      <li>\n        The cell $$$(c-2, r-2)$$$ is within the range from $$$(c, r)$$$, because\n        the Euclidean distance is $$$\\sqrt{|(c - 2) - c|^2 + |(r - 2) - r|^2} =\n        \\sqrt{8}$$$ and $$$\\sqrt{8} \\le 3$$$.\n      </li>\n      <li>\n        The cell $$$(c+1, r+3)$$$ (marked in black in the figure below) is\n        <strong>not</strong> within the range from $$$(c, r)$$$, because the\n        Euclidean distance is $$$\\sqrt{|(c + 1) - c|^2 + |(r + 3) - r|^2} =\n        \\sqrt{10}$$$ and $$$\\sqrt{10} \\gt 3$$$.\n      </li>\n    </ul>\n\n    <img\n      alt=\"Example of Santa's reach range on a grid.\"\n      src=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U0kTNZ5ur_rueqB_-21sYpbn_VhVzVoq32dOoV48Vli36ddPhFvZ-Eardlaz7av9gCF71ayPmM/distance.png\"\n      title=\"Santa's reach range.\"\n      class=\"hashcode-small-img\"\n    />\n  </div>\n\n  <h4>Navigation</h4>\n\n  <p>Santa moves around the world on his magic sleigh.</p>\n\n  <p>\n    Thanks to the magic coating on his sleigh, Santa encounters no friction and\n    conserves speed indefinitely. At any point the movement of the sleigh can be\n    described as its velocity $$$[s_c, s_r]$$$, denoting how fast the sleigh\n    moves in each direction within one second.\n  </p>\n\n  <p>Santa starts with the velocity of $$$[0, 0]$$$ (not moving).</p>\n\n  <div class=\"hashcode-example-box\">\n    <p>\n      For example, in the figure below the sleigh is initially at position\n      $$$(c, r)$$$ and its velocity is $$$[1, 2]$$$.\n    </p>\n\n    <p>\n      As long as the velocity remains constant, after each second the sleigh\n      will move $$$1$$$ position to the right and $$$2$$$ positions upwards.\n    </p>\n\n    <img\n      alt=\"Example of Santa's movement.\"\n      src=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U36N45lm_nUc5lzOIYHeiXGy8wE8l3Ke-xTcAeD8BM6rA6O0s9jDZrZIT2RDxprXIX9YrqE0CzUHFjbGg/example_speed.png\"\n      title=\"Santa's move example.\"\n      class=\"hashcode-big-img\"\n    />\n  </div>\n\n  <h4>Maneuvering</h4>\n  <p>\n    Each second, Santa can choose to feed one carrot (previously loaded to the\n    sleigh) to the reindeer to accelerate by a chosen value in one of four\n    directions: up, down, left, right. ‚ÄúAcceleration‚Äù means changing the\n    velocity. If the velocity is initially $$$[s_c, s_r]$$$ and Santa\n    accelerates, then:\n  </p>\n  <ul>\n    <li>\n      ‚Äúaccelerating up‚Äù by $$$a$$$ means changing the velocity to $$$[s_c, s_r +\n      a]$$$\n    </li>\n    <li>\n      ‚Äúaccelerating down‚Äù by $$$a$$$ means changing the velocity to $$$[s_c, s_r\n      - a]$$$\n    </li>\n    <li>\n      ‚Äúaccelerating right‚Äù by $$$a$$$ means changing the velocity to $$$[s_c +\n      a, s_r]$$$\n    </li>\n    <li>\n      ‚Äúaccelerating left‚Äù by $$$a$$$ means changing the velocity to $$$[s_c - a,\n      s_r]$$$\n    </li>\n  </ul>\n\n  <p>\n    Note that the concept of ‚Äúacceleration‚Äù (defined above) allows Santa to\n    ‚Äúdecelerate‚Äù (slow down) as well. For example, if accelerating\n    <strong>up</strong> by 2 makes Santa's sleigh go faster, then a subsequent\n    ‚Äúacceleration‚Äù <strong>down</strong> by 2 will make them go slower.\n  </p>\n  <p>\n    Santa can choose to accelerate, but even magic sleighs have their\n    limitations! The maximum acceleration that Santa's reindeers can provide at\n    a given moment depends on the current weight of the sleigh. The heavier the\n    sleigh, the slower the maximum acceleration!\n  </p>\n\n  <p>The weight of the sleigh is a sum of:</p>\n  <ul>\n    <li>the weight of the gifts loaded on the sleigh</li>\n    <li>the weight of the carrots loaded on the sleigh</li>\n  </ul>\n\n  <p>\n    Each input data set specifies the\n    <strong>maximum acceleration</strong> in given ranges of\n    <strong>sleigh weights</strong>. Maximum acceleration of $$$a_i$$$ for\n    sleigh weight range $$$(l_{i-1}, l_i]$$$ means that the maximum acceleration\n    is equal to $$$a_i$$$ (inclusive) for all sleigh weights of $$$w$$$ that\n    meet the constraints of $$$l_{i-1} \\lt w \\leq l_i$$$.\n  </p>\n\n  <p>\n    This sleigh weight above includes the carrot just about to be eaten by the\n    reindeer. However, right after the acceleration, the carrot is eaten and\n    converted into reindeer energy, instantenously reducing the weight of the\n    sleigh by 1 kg.\n  </p>\n\n  <p>\n    If reindeer can't handle the weight of the sleigh ($$$ w $$$ is above\n    maximum $$$ l_i $$$) <strong>they can't accelerate at all</strong> (max\n    acceleration = 0). The sleigh keeps its speed and continues floating until\n    acceleration becomes possible again (e.g. gifts are delivered) or the time\n    runs out. Also if there are no carrots on the sleigh, acceleration is not\n    possible!\n  </p>\n\n  <p>\n    The acceleration is instantaneous and happens in the beginning of the\n    second. Santa's sleigh can only accelerate once per second (it must float\n    for at least one second before another acceleration is possible).\n  </p>\n\n  <div class=\"hashcode-example-box\">\n    <p>\n      Consider the example represented in the description and the figure below.\n    </p>\n    <p>\n      The acceleration ranges are as follows, for the sleigh weight denoted as\n      $$$w$$$:\n    </p>\n    <ul>\n      <li>\n        if $$$ 0 \\lt w \\le 30 kg $$$, the sleigh can accelerate by up to 4\n      </li>\n      <li>\n        if $$$ 30 kg \\lt w \\leq 500 kg $$$, the sleigh can accelerate by up to 2\n      </li>\n      <li>\n        if the weight is higher than 500 kg the sleigh can't accelerate at all\n      </li>\n    </ul>\n    <p>\n      The initial weight of the sleigh consists of 20 kg of presents and 11 kg\n      of carrots. So the total weight is 31 kg which means the maximum\n      acceleration is 2. The initial velocity at $$$t$$$ seconds is $$$[2,\n      2]$$$.\n    </p>\n    <ul>\n      <li>\n        At $$$t$$$ seconds: the sleigh is at $$$(c, r)$$$. The sleigh\n        accelerates up by $$$2$$$ (which is the maximum allowed acceleration for\n        the sleigh weight of 31 kg). Since acceleration occurs instantaneously\n        at the beginning of the second, the new velocity at the beginning of\n        $$$t$$$ seconds is $$$[2, 4]$$$. The weight of the sleigh becomes 30 kg\n        because one carrot is used. Then the sleigh floats for 1 second.\n      </li>\n      <li>\n        At $$$t + 1$$$ seconds: the sleigh is at $$$(c+2, r+4)$$$. The sleigh\n        accelerates down by $$$3$$$ (which is now allowed since in the previous\n        second the weight decreased to 30kg, increasing the maximum acceleration\n        to $$$4$$$). The new velocity at the beginning of $$$t+1$$$ seconds is\n        $$$[2, 1]$$$. Then the sleigh floats for 1 second.\n      </li>\n      <li>\n        At $$$t + 2$$$ seconds: the sleigh is at $$$(c+4, r+5)$$$. The sleigh\n        doesn't accelerate (the velocity remains at $$$[2, 1]$$$) and just\n        floats for another second.\n      </li>\n      <li>At $$$t + 3$$$ seconds: the sleigh is at $$$(c+6, r+6)$$$</li>\n    </ul>\n    <img\n      alt=\"Example of Santa's acceleration.\"\n      src=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U0AVL7pd-eTVZGp268Wb-1lsqlwCRPYw7AUMCVyDYUUuGwqCgVUFb4odDO1EDM8feh-mJSYjWY6rcUZELi4g-PZ-Kw/example_acceleration.png\"\n      title=\"Santa's acceleration example.\"\n      class=\"hashcode-big-img\"\n    />\n  </div>\n  <br />\n\n  <p>\n    Note that the weight of the sleigh is also updated when gifts are delivered\n    to children.\n  </p>\n\n  <div class=\"hashcode-example-box\">\n    <p>\n      Consider the example below. The sleigh movement is the same as in the\n      figure above, but we add gift deliveries. The range is $$$D = 1$$$.\n    </p>\n    <ul>\n      <li>\n        At $$$t + 1$$$ seconds: the sleigh is at $$$(c+2, r+4)$$$. We deliver a\n        gift to cell $$$(c+1, r+4)$$$, reducing the weight of the sleigh by 5kg.\n      </li>\n      <li>\n        At $$$t + 2$$$ seconds: the sleigh is at $$$(c+4, r+5)$$$. We deliver a\n        gift to cell $$$(c+4, r+5)$$$ (the same cell in which the sleigh is\n        located), reducing the weight of the sleigh by another 5kg.\n      </li>\n    </ul>\n    <p>\n      Observe that, even though between $$$t$$$ and $$$t+1$$$ the sleigh passes\n      close to the gift delivery location at $$$(c, r+2)$$$, it is not possible\n      to deliver it. This is because gift deliveries must happen at the\n      beginning of a second, not while the sleigh is floating.\n    </p>\n    <img\n      alt=\"Example of Santa's acceleration with gifts delivery.\"\n      src=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U0_fxH8CfXmaoJrwLDdLOLrDZJ8a8SzkEVeayAKypAFSDOC16XQZMP7mTppj30RV26jAFFuqBWHIIJW2EXvvpBko6ZdO7yPyY4/example_acceleration_gifts.png\"\n      title=\"Santa's acceleration example with gifts delivery.\"\n      class=\"hashcode-big-img\"\n    />\n  </div>\n\n  <h4>Actions</h4>\n  <p>\n    The sleigh can perform the following actions. All actions apart from ‚ÄúFloat‚Äù\n    are instantaneous (take 0 seconds). All actions can be performed regardless\n    of whether the sleigh is moving (no need to stop to make deliveries or load\n    the sleigh).\n  </p>\n  <ul>\n    <li>\n      <p>\n        <strong>Accelerate</strong> in one of four directions (up, down, left or\n        right) by a given acceleration (not more than the maximum acceleration\n        for the current weight of the sleigh). The sleigh has to take the float\n        action at least once between two consecutive accelerations.\n      </p>\n    </li>\n    <li>\n      <p>\n        <strong>Float</strong> for a number of seconds. The velocity of the\n        sleigh remains constant during the float action.\n      </p>\n    </li>\n    <li>\n      <p>\n        <strong>Load a number of carrots</strong>. The sleigh needs to be within\n        a distance $$$D$$$ from the initial position $$$(0, 0)$$$.\n      </p>\n    </li>\n    <li>\n      <p>\n        <strong>Load a given gift</strong>. The sleigh needs to be within a\n        distance $$$D$$$ from the initial position $$$(0, 0)$$$.\n      </p>\n    </li>\n    <li>\n      <p>\n        <strong>Deliver a given gift</strong>. The delivery location of the\n        given gift has to be within a distance $$$D$$$ from the sleigh's\n        position.\n      </p>\n    </li>\n  </ul>\n\n  <div class=\"hashcode-example-box\">\n    <p>For instance, the following 3 sequences of actions are valid:</p>\n    <ol>\n      <li>Accelerate up ‚Üí Float ‚Üí Accelerate down ‚Üí Float</li>\n      <li>\n        Accelerate up ‚Üí Give Gift ‚Üí Float ‚Üí Load Carrots ‚Üí Float ‚Üí Accelerate\n        left‚Üí Float\n      </li>\n      <li>Float ‚Üí Accelerate up</li>\n    </ol>\n    <p>\n      Observe that in (3) the last \"Accelerate up\" action is not affecting the\n      final position of the sleigh: the velocity is updated, but the sleigh\n      doesn't move at the updated velocity until a \"Float\" command is issued.\n    </p>\n    <p>\n      The following 2 sequences of actions are invalid because there are two\n      acceleration actions without any float action between them:\n    </p>\n    <ul class=\"hashcode-cross-style-list\">\n      <li>Accelerate left ‚Üí Accelerate down ‚Üí Float</li>\n      <li>Float ‚Üí Accelerate up ‚Üí Load Carrots ‚Üí Accelerate down</li>\n    </ul>\n  </div>\n  <h3>Input data sets</h3>\n\n  \n  <a name=\"inputDataDownloadBox\"></a>\n  <div class=\"test-data-download-wrapper\" style=\"min-width: 100%;\">\n    <div class=\"test-data-download-header\">\n      <div class=\"test-data-download-header-text\">Input Data</div>\n    </div>\n    <div class=\"test-data-download-content\">\n      <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U37NYlbadWd26bCltrPhmpsBFTcD9sWUgO_QOEgz39eK63DTJN6AC15MeuI70G5vQdUA9ivN6rdNQ/input_data.zip?dl=1\" target=\"_blank\">\n        <span class=\"material-icons\" style=\"vertical-align: middle;\">save_alt</span>\n        <span style=\"vertical-align: middle;\">Full input (zipped)</span>\n      </a>\n      <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U18N3wcBG8mjtFVnWK43gh0IxErPzltr8VKnKpoe6fdz46b4Bi_IG3zAUPIsNdPG8j3kMHhM2Kt9G5ny1dT/a_an_example.in.txt?dl=1\" target=\"_blank\">\n        <span class=\"material-icons\" style=\"vertical-align: middle;\">save_alt</span>\n        <span style=\"vertical-align: middle;\">A ‚Äì An example</span>\n      </a>\n      <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U1kugwCBQfUNmeVCL72jWazqZ9C5xt7aX2TrwB4U0AYff6tY4pFLyj8wOlmZ7AUOHpkd5AFpC-llPssDPBGscc/b_better_hurry.in.txt?dl=1\" target=\"_blank\">\n        <span class=\"material-icons\" style=\"vertical-align: middle;\">save_alt</span>\n        <span style=\"vertical-align: middle;\">B ‚Äì Better hurry</span>\n      </a>\n      <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U2qJUS_J3wJshskFbDBfUx6UDjx8e45gEx_Sa17BYVJIuW-Grxtj8qqM4VGq0IaqvymcsdEvUt-HPpGzw/c_carousel.in.txt?dl=1\" target=\"_blank\">\n        <span class=\"material-icons\" style=\"vertical-align: middle;\">save_alt</span>\n        <span style=\"vertical-align: middle;\">C ‚Äì Carousel</span>\n      </a>\n      <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U3DF-CwvRCdOtMZzQ4fJLffkJ8gq5SRse-g5lODXusdm4rDypX4TgUamgjhIsdDq8nKtsh-MmGzYP7i7hg3t5k0XKcH/d_decorated_houses.in.txt?dl=1\" target=\"_blank\">\n        <span class=\"material-icons\" style=\"vertical-align: middle;\">save_alt</span>\n        <span style=\"vertical-align: middle;\">D ‚Äì Decorated houses</span>\n      </a>\n      <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U2Kuli5nmtcDYDzwoAETu5nJYMjHMJDrpESAYKGSuP7MSiQuwu7Tt1zLwvR1Sb5yva23-zXZ3C4wdiQOVZy5LIaVr49BQ/e_excellent_weather.in.txt?dl=1\" target=\"_blank\">\n        <span class=\"material-icons\" style=\"vertical-align: middle;\">save_alt</span>\n        <span style=\"vertical-align: middle;\">E ‚Äì Excellent weather</span>\n      </a>\n      <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U3vLqmc_S7HgFslr4d2xvIWNnTSEmwMr92_2mo3S7laMXZK8f0IVVcUrt-UErdg-1wQS4ew3XPDdyIKPWtnr-Q_E4w/f_festive_flyover.in.txt?dl=1\" target=\"_blank\">\n        <span class=\"material-icons\" style=\"vertical-align: middle;\">save_alt</span>\n        <span style=\"vertical-align: middle;\">F ‚Äì Festive flyover</span>\n      </a>\n    </div>\n  </div>\n\n\n  <h4>File format</h4>\n\n  <p>\n    Each input data set is provided in a plain text file. The file contains only\n    ASCII characters with lines ending with a single '\\n' character (also called\n    ‚ÄúUNIX-style‚Äù line endings). When multiple strings and numbers are given in\n    one line, they are separated by a single space between each two elements.\n  </p>\n\n  <p>The first line of the input file contains:</p>\n\n  <ul>\n    <li>$$$T$$$ - the time limit in seconds, ($$$1 \\leq T \\leq 10,000$$$)</li>\n\n    <li>\n      $$$D$$$ - the reach range ($$$0 \\leq D \\leq 100$$$), that is maximum\n      distance from sleigh for gift delivery and gift/carrot pick up\n    </li>\n    <li>\n      $$$W$$$ - the number of acceleration ranges sleigh has ($$$1 \\leq W \\leq\n      10$$$).\n    </li>\n    <li>\n      $$$G$$$ - the number of gifts in the dataset, ($$$1 \\leq G \\leq 10,000$$$)\n    </li>\n  </ul>\n  <p>\n    The subsequent $$$W$$$ lines contain the acceleration ranges description -\n    two integer numbers separated by a single space:\n  </p>\n  <ul>\n    <li>\n      $$$l_i$$$ - an integer number, the maximum weight of the sleigh to use the\n      following acceleration ($$$1 \\leq l_i \\leq 10^6$$$).\n    </li>\n    <li>\n      $$$a_i$$$ - an integer number, the max acceleration for this acceleration\n      range ($$$1 \\leq a_i \\leq 100$$$)\n    </li>\n  </ul>\n\n  <p>\n    Note that the weight range of the sleigh for max acceleration $$$ a_i $$$ is\n    $$$ [l_{i-1}, l_i] $$$ where $$$l_0 = 0$$$. It is guaranteed that $$$\n    l_{i-1} \\lt l_i $$$ and $$$ a_{i-1} \\gt a_i $$$\n  </p>\n\n  <p>\n    The subsequent $$$G$$$ lines contain gift descriptions - strings and integer\n    numbers separated by single spaces:\n  </p>\n  <ul>\n    <li>\n      $$$name_i$$$ - the name of the child (a unique string of a-z, A-Z, 0-9\n      characters up to 30 characters long)\n    </li>\n    <li>\n      $$$s_i$$$ - an integer number, the score for delivering the gift ($$$1\n      \\leq s_i \\leq 10,000$$$)\n    </li>\n    <li>\n      $$$w_i$$$ - an integer number, the weight of the gift in kilograms ($$$1\n      \\leq w_i \\leq 1,000$$$)\n    </li>\n    <li>\n      $$$c_i$$$ - the column of the location of the child ($$$-10^9 \\leq c_i\n      \\leq 10^9$$$)\n    </li>\n    <li>\n      $$$r_i$$$ - the row of the location of the child ($$$-10^9 \\leq r_i \\leq\n      10^9$$$)\n    </li>\n  </ul>\n  <p>\n    Every position $$$(c_i, r_i)$$$ in the datasets is guaranteed to have at\n    most 1 gift recipient and Lapland at $$$(0,0)$$$ is guaranteed to have none.\n  </p>\n\n  <h4>Example</h4>\n\n  <table class=\"hashcode-example-box hashcode-file\">\n    <tr>\n      <td>Input file</td>\n      <td>Description</td>\n    </tr>\n    <tr>\n      <td>\n        <code>\n          15 3 4 4 <br />\n          15 8<br />\n          30 6<br />\n          45 4<br />\n          60 2<br />\n          <br />\n          Olivia 1 10 5 1 <br />\n          Emma 2 10 -10 1<br />\n          Liam 5 10 8 4<br />\n          Bob 10 15 0 -100<br />\n        </code>\n      </td>\n\n      <td>\n        <code>\n          15 seconds, delivery distance of 3, 4 acceleration ranges and 4\n          gifts<br />\n          For weights from 0 to 15, max acceleration is 8<br />\n          For weights from 16 to 30, max acceleration is 6<br />\n          For weights from 31 to 45, max acceleration is 4<br />\n          For weights from 46 to 60, max acceleration is 2<br />\n          (For weights bigger than 60 kg, max acceleration is 0)<br />\n          Gift for Olivia, score 1, 10 kg, at (5, 1)<br />\n          Gift for Emma, score 2, 10 kg, at (-10, 1)<br />\n          Gift for Liam, score 5, 10 kg, at (8, 4)<br />\n          Gift for Bob, score 10, 15 kg, at (0, -100)<br />\n        </code>\n      </td>\n    </tr>\n  </table>\n  <p>\n    <i>\n      Note that the input file\n      <strong>does not contain any blank lines</strong>. Blank lines and line\n      wrapping in the example above are added for clarity.</i\n    >\n  </p>\n\n  <h3>Submissions</h3>\n\n  <p>You need to specify the actions for Santa.</p>\n\n  <h4>File Format</h4>\n  <p>\n    The submission file must be a plain text file containing exclusively ASCII\n    character lines terminated with a single '\\n' character (‚ÄúUNIX-style‚Äù line\n    endings).\n  </p>\n  <p>\n    The first line must contain a single integer $$$C$$$ ($$$0 \\leq C \\leq\n    10^6$$$): the number of actions for Santa.\n  </p>\n  <p>\n    Each of the following lines must contain a valid action for the sleigh. Each\n    action description must contain the action name and the action argument,\n    separated by a space. The possible actions are:\n  </p>\n  <ul>\n    <li>\n      <code>AccUp &langle;a&rangle;</code> - Accelerates in the ‚Äúup‚Äù direction\n      by integer $$$a$$$ ($$$ 0 \\leq a \\leq a_i $$$, where $$$a_i$$$ is the\n      applicable maximum acceleration for the current weight of the sleigh)\n    </li>\n    <li>\n      <code>AccDown &langle;a&rangle;</code> - Accelerates in the ‚Äúdown‚Äù\n      direction by integer $$$a$$$ ($$$ 0 \\leq a \\leq a_i $$$, where $$$a_i$$$\n      is the applicable maximum acceleration for the current weight of the\n      sleigh)\n    </li>\n    <li>\n      <code>AccLeft &langle;a&rangle;</code> - Accelerates in the ‚Äúleft‚Äù\n      direction by integer $$$a$$$ ($$$ 0 \\leq a \\leq a_i $$$, where $$$a_i$$$\n      is the applicable maximum acceleration for the current weight of the\n      sleighh)\n    </li>\n    <li>\n      <code>AccRight &langle;a&rangle;</code> - Accelerates in the ‚Äúright‚Äù\n      direction by integer $$$a$$$ ($$$ 0 \\leq a \\leq a_i $$$, where $$$a_i$$$\n      is the applicable maximum acceleration for the current weight of the\n      sleigh)\n    </li>\n    <li>\n      <code>Float &langle;t&rangle;</code> - Advances the time by integer\n      $$$t$$$ seconds ($$$1 \\leq t \\leq T$$$). In each second the position of\n      the sleigh advances by the current velocity.\n    </li>\n    <li>\n      <code>LoadCarrots &langle;N&rangle;</code> - Loads integer N carrots onto\n      the sleigh ($$$1\\leq N \\leq 1,000,000$$$), only valid within a distance\n      $$$D$$$ inclusive from $$$(0, 0)$$$.\n    </li>\n    <li>\n      <code>LoadGift &langle;ChildName&rangle;</code> - Loads a gift for the\n      given child, only valid within a distance $$$D$$$ inclusive from (0, 0).\n    </li>\n    <li>\n      <code>DeliverGift &langle;ChildName&rangle;</code> - Delivers the gift for\n      the given child, only valid within a distance $$$D$$$ inclusive from the\n      child.\n    </li>\n  </ul>\n\n  <h4>Example</h4>\n\n  <table class=\"hashcode-example-box hashcode-file\">\n    <tr>\n      <td>Submission file</td>\n      <td>Description</td>\n    </tr>\n    <tr>\n      <td>\n        <code>\n          23 <br />\n          LoadCarrots 10<br />\n          LoadGift Olivia<br />\n          LoadGift Liam<br />\n          AccRight 4<br />\n          Float 1<br />\n          DeliverGift Olivia<br />\n          AccUp 2<br />\n          Float 1<br />\n          DeliverGift Liam<br />\n          AccLeft 8<br />\n          Float 1<br />\n          AccDown 4<br />\n          Float 1<br />\n          LoadGift Bob<br />\n          AccRight 4<br />\n          Float 1<br />\n          AccDown 6<br />\n          Float 1<br />\n          AccDown 6<br />\n          Float 1<br />\n          AccDown 6<br />\n          Float 4<br />\n          DeliverGift Bob<br />\n        </code>\n      </td>\n\n      <td>\n        <code>\n          The file describes 23 actions<br />\n          Load 10 carrots, increasing the weight to 10 kg<br />\n          Load Olivia's gift, increasing the weight to 20 kg<br />\n          Load Liam's gift, increasing the weight to 30 kg. Max acceleration is\n          now 6<br />\n          Accelerate, changing velocity to [4,0] and weight to 29 kg<br />\n          Let 1 second pass. Santa moves to (4,0)<br />\n          Deliver Gift to Olivia, reducing weight to 19 kg<br />\n          Accelerate, changing velocity to [4,2] and weight to 18 kg<br />\n          Let 1 second pass. Santa moves (8,2)<br />\n          Deliver Gift to Liam, reducting weight to 8 kg. Max acceleration is\n          now 8<br />\n          Accelerate, changing velocity to [-4,2] and weight to 7 kg<br />\n          Let 1 second pass. Santa moves to (4,4)<br />\n          Accelerate, changing velocity to [-4,-2] and weight to 6 kg<br />\n          Let 1 second pass. Santa moves to (0,2)<br />\n          Load Bob's gift, increasing the weight to 21 kg. Max acceleration is\n          now 6<br />\n          Accelerate, changing velocity to [0,-2] and weight to 20 kg<br />\n          Let 1 second pass. Santa moves to (0,0)<br />\n          Accelerate, changing velocity to [0,-8] and weight to 19 kg<br />\n          Let 1 second pass. Santa moves to (0,-8)<br />\n          Accelerate, changing velocity to [0,-14] and weight to 18 kg<br />\n          Let 1 second pass. Santa moves to (0,-22)<br />\n          Accelerate, changing velocity to [0,-20] and weight to 17 kg<br />\n          Let 4 seconds pass. Santa moves to (0,-102)<br />\n          Deliver Gift to Bob, reducing weight to 2 kg\n        </code>\n      </td>\n    </tr>\n  </table>\n  <p>\n    <i>\n      Note that the submission file\n      <strong>should not contain any blank lines</strong>. Blank lines and line\n      wrapping in the example above are added for clarity.</i\n    >\n  </p>\n  <h4>Validation</h4>\n  In order for the submission to be accepted, it must fulfill the following\n  conditions:\n\n  <ul class=\"hashcode-warning-style-list\">\n    <li>\n      The submission file must have exactly $$$C + 1$$$ lines in the format\n      described above.\n    </li>\n    <li>\n      Santa must not attempt loading gifts or carrots onto the sleigh when he's\n      further than $$$D$$$ from $$$(0,0)$$$.\n    </li>\n    <li>\n      Santa must not attempt delivering a gift when he's further than $$$D$$$\n      from the destination.\n    </li>\n    <li>\n      Santa can only deliver each gift once, and only if it was loaded to the\n      sleigh previously.\n    </li>\n    <li>\n      Santa can only load each gift once. (After a gift is loaded, it is either\n      delivered, or it stays on the sleigh until the end of the simulation.)\n    </li>\n    <li>\n      Santa must not attempt to accelerate more than what is permitted given the\n      current weight of the sleigh.\n    </li>\n    <li>\n      Santa must not attempt to accelerate more than once in a second (without a\n      <code>Float</code> action in between).\n    </li>\n    <li>\n      Santa must not attempt the <code>Float</code> action after the time of\n      simulation ran out.\n    </li>\n  </ul>\n  <h4>Scoring</h4>\n  <p>\n    The score of your solution is the sum of the scores awarded for each gift\n    that have been delivered.\n  </p>\n  <div class=\"hashcode-example-box\">\n    <p>\n      For example, the sample solution scores <strong>16</strong> points:\n      <strong>1</strong> for Olivia's gift, <strong>5</strong> for Liam's gift,\n      and <strong>10</strong> for Bob's gift.\n    </p>\n  </div>\n\n  <p>\n    <strong>\n      Note that there are multiple data sets representing separate instances of\n      the problem. The final score for your team will be the sum of your best\n      scores on the individual data sets.\n    </strong>\n  </p>\n</div>\n","task_type":2,"task_type__str":"HASH_CODE","tests":[{"name":"A ‚Äì An example"},{"name":"B ‚Äì Better hurry"},{"name":"C ‚Äì Carousel"},{"name":"D ‚Äì Decorated houses"},{"name":"E ‚Äì Excellent weather"},{"name":"F ‚Äì Festive flyover"}],"title":"Santa Tracker"}],"team_registration_config":{"max_team_size":4,"min_team_size":2},"ticket":{"challenge_id":"00000000008cacc6","type":1,"type__str":"SPECTATOR"},"title":"World Finals","ui_appearance":0,"ui_appearance__str":"APPEARANCE_TYPE_DEFAULT"},"languages":[{"id":1,"id__str":"BASH","name":"Bash"},{"id":2,"id__str":"C","name":"C (GCC)"},{"id":11,"id__str":"CSHARP","name":"C# (Mono)"},{"id":3,"id__str":"CPP","name":"C++17 (G++)"},{"id":19,"id__str":"CLOJURE","name":"Clojure"},{"id":24,"id__str":"D","name":"D (GDC)"},{"id":32,"id__str":"DART","name":"Dart"},{"id":28,"id__str":"FSHARP","name":"F# (Mono)"},{"id":6,"id__str":"GO","name":"Go 1.11.6"},{"id":20,"id__str":"GROOVY","name":"Groovy"},{"id":12,"id__str":"HASKELL","name":"Haskell (GHC)"},{"helper_text":"Please name your main class \"Solution\" (uppercase S) and do not declare a package.","id":4,"id__str":"JAVA","name":"Java 11 (OpenJDK)"},{"id":10,"id__str":"JAVASCRIPT","name":"JavaScript (Node.js)"},{"id":29,"id__str":"JULIA","name":"Julia"},{"id":22,"id__str":"KOTLIN","name":"Kotlin"},{"id":23,"id__str":"LISP","name":"Lisp (SBCL)"},{"id":30,"id__str":"LUA","name":"Lua"},{"id":18,"id__str":"OCAML","name":"OCaml"},{"id":31,"id__str":"OBJECTIVEC","name":"Objective-C (GNU)"},{"id":15,"id__str":"OCTAVE","name":"Octave"},{"id":9,"id__str":"PHP","name":"PHP"},{"id":21,"id__str":"PASCAL","name":"Pascal (FPC)"},{"id":14,"id__str":"PERL","name":"Perl"},{"id":34,"id__str":"PYPY3","name":"PyPy 3"},{"id":7,"id__str":"PYTHON3","name":"Python 3.7"},{"id":25,"id__str":"R","name":"R"},{"id":8,"id__str":"RUBY","name":"Ruby"},{"id":17,"id__str":"RUST","name":"Rust"},{"helper_text":"Please name your main class \"Solution\" (uppercase S).","id":13,"id__str":"SCALA","name":"Scala"},{"id":16,"id__str":"SWIFT","name":"Swift"},{"id":33,"id__str":"TYPESCRIPT","name":"TypeScript (Node.js)"},{"id":27,"id__str":"VISUALBASIC","name":"Visual Basic (Mono)"}]}
