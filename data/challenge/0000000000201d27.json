{"challenge":{"announcements":[],"are_results_final":true,"end_ms":1494144000000,"hide_scoreboard":false,"hide_scoreboard_config":{},"id":"0000000000201d27","is_practice_available":true,"my_user_type":1,"my_user_type__str":"SPECTATOR","recap":"","registration_gives_participant":false,"result_status":30,"result_status__str":"FINALIZED","start_ms":1494133200000,"tasks":[{"analysis":"\n  <div class=\"test-data-download-wrapper\">\n    <div class=\"test-data-download-header\">\n      <div class=\"test-data-download-header-text\">Test Data</div>\n      <div class=\"test-data-download-header-download-button\">\n        <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U0aI8BpYe2o_F9CaRgCocF98Ez3iUb1hvlvf-pEaSoaJK-4eriMMXY5gSnZemejIpe39nQtP5JP/test_data.zip?dl=1\" target=\"_blank\">\n          <i class=\"material-icons grey\">save_alt</i>\n        </a>\n      </div>\n    </div>\n    <div class=\"test-data-download-content\">\n      <div class=\"test-data-download-warning\">\n        <span class=\"material-icons\" style=\"color: grey; vertical-align: middle;\">info</span>\n        <span style=\"vertical-align: middle;\">We recommend that you practice debugging solutions without looking at the test data.</span>\n      </div>\n    </div>\n  </div>\n\n","id":"0000000000201b7b","statement":"<h3>Problem</h3>\n<p>\n  Professor Math is working on a secret project and is facing a challenge where\n  a list of numbers need to be encoded into a single number in the most\n  efficient manner. After much research, Professor Math finds a 3 step\n  process that can best encode the numbers:\n  <ol>\n  <li>The first step is to find all possible non-empty subsets of the list of\n  numbers and then, for each subset, find the difference between the largest and\n  smallest numbers (that is, the largest minus the smallest) in that subset.\n  Note that if there is only one number in a subset, it is both the largest and\n  the smallest number in that subset. The complete set itself is also \n  considered a subset.\n  </li>\n  <li>Then add up all the differences to get the final encoded number.</li>\n  <li>As the number may be large, output the number modulo 10<sup>9</sup> + 7\n  (1000000007).</li> </ol>\n</p>\n<p>The professor has shared an example and its explanation below. Given a list\n  of numbers, can you help the professor build an efficient function to compute\n  the final encoded number?</p>\n\n<h3>Input</h3>\n<p>\n  The first line of the input gives the number of test cases, <b>T</b>. This is\n  followed by T test cases where each test case is defined by 2 lines:\n  <ol> \n  <li>The first line gives a positive number <b>N</b>: the number of numbers in\n  the list and</li> \n  <li>The second line contains a list of <b>N</b> positive integers\n  <b>K<sub>i</sub></b>, sorted in non-decreasing order.</li>\n  </ol>\n</p>\n\n<h3>Output</h3>\n<p>\n  For each test case, output one line containing \n  <code>Case #x: y</code>, \n  where <code>x</code> is the test case number (starting from 1) and\n  <code>y</code> is the final encoded number.\n</p>\n<p>\n  Since the output can be a really big number, we only ask you to output the\n  remainder of dividing the result by the prime 10<sup>9</sup> + 7 (1000000007).\n</p>\n\n\n<h3>Limits</h3>\n<p>\n  1 &le; <b>T</b> &le; 25. <br/>\n  Time limit: 20 seconds per test set.<br/>\n  Memory limit: 1GB.<br/>\n  1 &le; <b>K<sub>i</sub></b> &le; 10000, for all i.<br>\n  <b>K<sub>i</sub></b> &le; <b>K<sub>i+1</sub></b>, for all i &lt; <b>N</b> - 1.<br>\n</p>\n\n<h4>Small dataset (Test set 1 - Visible)</h4>\n<p>\n  1 &le; <b>N</b> &le; 10.\n</p>\n\n<h4>Large dataset (Test set 2 - Hidden)</h4>\n<p>\n  1 &le; <b>N</b> &le; 10000.\n</p>\n\n\n\n  <h3>Sample</h3>\n  <div class=\"problem-io-wrapper-new\">\n    <div class=\"sampleio-wrapper\">\n      <div class=\"sample-input\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Input</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U0VrW1VleWehWN1W0vHFnWDskxdZTbJa7TKvgqiqphAWFj6KXh8Nx-NJMn_6fWEhsLORWz4hcdHAu2HnpseV6MWgxEi9FSU84B5wx0/math_encoder_sample_ts1_input.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_input_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_input_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_input_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_input_0\">1\n4\n3 6 7 9\n</pre>\n        </div>\n      </div>\n      <div class=\"sample-output\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Output</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U0ciqszz2bEGUGJtqqw3b8wHjd9mEeST5aqIBvy7LMK8sylIjEKze3YNFZUNljpxwVU1uId7DYjV3_jB2wIZE7RWdgoK1pywSjdqiYw/math_encoder_sample_ts1_output.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_output_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_output_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_output_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_output_0\">Case #1: 44\n</pre>\n        </div>\n      </div>\n    </div>\n  </div>\n\n\n<p>\n  <b>Explanation for the sample input</b> <br />\n  <ol>  \n  <li> Find all subsets and get the difference between largest & smallest numbers:<br />\n  [3], largest-smallest = 3 - 3 = 0.<br />\n  [6], largest-smallest = 6 - 6 = 0.<br />\n  [7], largest-smallest = 7 - 7 = 0.<br />\n  [9], largest-smallest = 9 - 9 = 0.<br />\n  [3, 6], largest-smallest = 6 - 3 = 3.<br />\n  [3, 7], largest-smallest = 7 - 3 = 4.<br />\n  [3, 9], largest-smallest = 9 - 3 = 6.<br />\n  [6, 7], largest-smallest = 7 - 6 = 1.<br />\n  [6, 9], largest-smallest = 9 - 6 = 3.<br />\n  [7, 9], largest-smallest = 9 - 7 = 2.<br />\n  [3, 6, 7], largest-smallest = 7 - 3 = 4.<br />\n  [3, 6, 9], largest-smallest = 9 - 3 = 6.<br />\n  [3, 7, 9], largest-smallest = 9 - 3 = 6.<br />\n  [6, 7, 9], largest-smallest = 9 - 6 = 3.<br />\n  [3, 6, 7, 9], largest-smallest = 9 - 3 = 6.<br />\n  </li>\n  <li>Find the sum of the differences calculated in the previous step:<br /> \n  3+4+6+1+3+2+4+6+6+3+6<br /> = 44.<br /></li>\n  <li>Find the answer modulo 10<sup>9</sup> + 7 (1000000007):<br />\n  44 % 1000000007 = 44\n  </li>\n  </ol>\n</p>\n\n","task_type":1,"task_type__str":"CODE_JAM","tests":[{"type":1,"type__str":"VISIBLE","value":7},{"type":2,"type__str":"HIDDEN","value":16}],"title":"Math Encoder","trial_input_type":1,"trial_input_type__str":"TEXT_FILE"},{"analysis":"\n  <div class=\"test-data-download-wrapper\">\n    <div class=\"test-data-download-header\">\n      <div class=\"test-data-download-header-text\">Test Data</div>\n      <div class=\"test-data-download-header-download-button\">\n        <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U2aPyadSa0ERLhfdM-YDuFvzr6CQ0Hj2yh_od84mX-MejnCBRC0YiID8YEUMq-jdSagguWcIvTZ/test_data.zip?dl=1\" target=\"_blank\">\n          <i class=\"material-icons grey\">save_alt</i>\n        </a>\n      </div>\n    </div>\n    <div class=\"test-data-download-content\">\n      <div class=\"test-data-download-warning\">\n        <span class=\"material-icons\" style=\"color: grey; vertical-align: middle;\">info</span>\n        <span style=\"vertical-align: middle;\">We recommend that you practice debugging solutions without looking at the test data.</span>\n      </div>\n    </div>\n  </div>\n\n","id":"0000000000201c01","statement":"<h2>Problem</h2>\n\n<p>\n  There are <b>N</b> weighted points in a plane. Point <b>i</b> is at\n  (<b>X<sub>i</sub></b>, <b>Y<sub>i</sub></b>) and has weight <b>W<sub>i</sub></b>.\n</p>\n\n<p>\n  In this problem, we need to find a special center of these points. The center is a point\n  (<b>X</b>, <b>Y</b>) such that the sum of max(|<b>X</b>-<b>X<sub>i</sub></b>|,\n  |<b>Y</b>-<b>Y<sub>i</sub></b>|)*<b>W<sub>i</sub></b> is minimum.\n</p>\n\n<h3>Input</h3>\n\n<p>\n  The input starts with one line containing exactly one integer <b>T</b>, which is the number of\n  test cases. <b>T</b> test cases follow.\n</p>\n\n<p>\n  Each test case begins with one line containing one\n  integer <b>N</b>. <b>N</b> lines follow. Each line contains three space-separated real numbers\n  <b>X<sub>i</sub></b>, <b>Y<sub>i</sub></b>, and <b>W<sub>i</sub></b>.\n  <b>X<sub>i</sub></b>, <b>Y<sub>i</sub></b> and <b>W<sub>i</sub></b> have exactly 2 digits after\n  the decimal point.\n</p>\n\n<h3>Output</h3>\n\n<p>\n  For each test case, output one line containing <code>Case #x: y</code>, where <code>x</code> is\n  the test case number (starting from 1) and <code>y</code> is the sum of max(|<b>X</b>-<b>X<sub>i</sub></b>|,\n  |<b>Y</b>-<b>Y<sub>i</sub></b>|)*<b>W<sub>i</sub></b> for center (<b>X</b>, <b>Y</b>).\n</p>\n\n<p>\n<code>y</code> will be considered correct if it is within an absolute or relative error of 10<sup>-6</sup> of the correct answer.\nSee the <a href=\"https://codingcompetitions.withgoogle.com/kickstart/faq\" target=\"_blank\">FAQ</a> for an explanation of what that means, and what formats of real numbers we accept.\n</p>\n\n<h3>Limits</h3>\n1 &le; <b>T</b> &le; 10.<br>\nMemory limit: 1GB.<br/>\n-1000.00 &le; <b>X<sub>i</sub></b> &le; 1000.00.<br>\n-1000.00 &le; <b>Y<sub>i</sub></b> &le; 1000.00.\n\n\n<h4>Small dataset (Test set 1 - Visible)</h4>\nTime limit: 20 seconds.<br/>\n1 &le; <b>N</b> &le; 100;<br>\n<b>W<sub>i</sub></b> = 1.0, for all i.\n\n<h4>Large dataset (Test set 2 - Hidden)</h4>\nTime limit: 40 seconds.<br/>\n1 &le; <b>N</b> &le; 10000;<br>\n1.0 &le; <b>W<sub>i</sub></b> &le; 1000.0, for all i.\n\n\n  <h3>Sample</h3>\n  <div class=\"problem-io-wrapper-new\">\n    <div class=\"sampleio-wrapper\">\n      <div class=\"sample-input\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Input</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U3Vb7233SIHFCUvnOPXk4UgKOKRaSGV_djgj3wsMomm8Fp1Zo3PM56cC3Qc2AoBF5qrVhHL6yg6hZp3kBFXuruRscy182k/center_sample_ts1_input.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_input_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_input_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_input_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_input_0\">3\n2\n0.00 0.00 1.00\n1.00 0.00 1.00\n4\n1.00 1.00 1.00\n1.00 -1.00 1.00\n-1.00 1.00 1.00\n-1.00 -1.00 1.00\n2\n0.00 0.00 1.00\n1.00 0.00 2.00\n</pre>\n        </div>\n      </div>\n      <div class=\"sample-output\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Output</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U2eBMxYNtzj9mscPD99_z-NZWqhDbzcuzR19G2APXB1Ar_gxiK3lV0G6j1SQ0zmLl7a4GTaSsTPNymtD03nXkMaZMLfUHVJ/center_sample_ts1_output.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_output_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_output_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_output_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_output_0\">Case #1: 1.0\nCase #2: 4.0\nCase #3: 1.0\n</pre>\n        </div>\n      </div>\n    </div>\n  </div>\n\n","task_type":1,"task_type__str":"CODE_JAM","tests":[{"type":1,"type__str":"VISIBLE","value":13},{"type":2,"type__str":"HIDDEN","value":21}],"title":"Center","trial_input_type":1,"trial_input_type__str":"TEXT_FILE"},{"analysis":"\n  <div class=\"test-data-download-wrapper\">\n    <div class=\"test-data-download-header\">\n      <div class=\"test-data-download-header-text\">Test Data</div>\n      <div class=\"test-data-download-header-download-button\">\n        <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U2CmkhJWqoS5dlP7KtXgk4p0r6GJsfjNElU_w6uZFN6up84b0GFg8kOIA0mT-yGZ3J7zIh81OJu/test_data.zip?dl=1\" target=\"_blank\">\n          <i class=\"material-icons grey\">save_alt</i>\n        </a>\n      </div>\n    </div>\n    <div class=\"test-data-download-content\">\n      <div class=\"test-data-download-warning\">\n        <span class=\"material-icons\" style=\"color: grey; vertical-align: middle;\">info</span>\n        <span style=\"vertical-align: middle;\">We recommend that you practice debugging solutions without looking at the test data.</span>\n      </div>\n    </div>\n  </div>\n\n","id":"0000000000201c9a","statement":"<h3>Problem</h3>\n<p>\n  You are given a rectangular grid with <b>N</b> rows and <b>M</b> columns. Each cell of this grid is painted with one of two colors: green and white. Your task is to find the number of green cells in the largest Christmas tree in this grid.\n</p>\n<p>\n  To define a Christmas tree, first we define a <b>good triangle</b> as follows:\n</p>\n<p>\n  A good triangle with top point at row <b>R</b>, column <b>C</b> and height <b>h</b> is an isoceles triangle consisting entirely of green cells and pointing upward. Formally, this means that: The cell <b>(R, C)</b> is green, and for each <b>i</b> from 0 to <b>h-1</b> inclusive, the cells in row <b>R+i</b> from column <b>C-i</b> to column <b>C+i</b> are all green.\n</p>\n<p>For example:</p>\n<p>\n  <code>\n    ..<b>#</b>..<br/>\n    .<b>###</b>#<br/>\n    <b>#####</b><br/>\n  </code>\n  is a good triangle with height 3. The <b>#</b> cells are green and the <b>.</b> cells are white. Note that there is a green cell that is not part of the good triangle, even though it touches the good triangle.\n</p>\n<p>\n  <code>\n    ..<b>#</b>..<br/>\n    .<b>###</b>.<br/>\n    <b>####</b>.<br/>\n  </code>\n  is <b>NOT</b> a good triangle, because the 5th cell in the 3rd row is white. However, there are good triangles with height 2 present.\n</p>\n<p>\n  <code>\n    ...<b>#</b>.<br/>\n    .<b>###</b>.<br/>\n    <b>#####</b>.<br/>\n  </code>\n  is <b>NOT</b> a good triangle. However, there are good triangles with height 2 present.\n</p>\n<p>A <b>K</b>-Christmas tree is defined as follows:</p>\n<ul>\n  <li>It contains exactly <b>K</b> good triangles in vertical arrangement.</li>\n  <li>The top cell of the <b>i+1</b>-th triangle must share its top edge with the bottom edge of any one of the cells at the base of the <b>i</b>-th triangle. This means that, if the base of the <b>i</b>-th triangle is at row <b>r</b>, from column <b>c1</b> to column <b>c2</b>, then the top of the <b>i+1</b>-th triangle must be on row <b>r+1</b>, in a column somewhere between <b>c1</b> and <b>c2</b>, inclusive.\n</ul>\n\n<p>For example, if <b>K</b> = 2:</p>\n\n<p>\n  <code>\n    ...<b>#</b>...<br/>\n    ..<b>###</b>..<br/>\n    .<b>#####</b>.<br/>\n    <b>#######</b><br/>\n    ..<b>#</b>....<br/>\n    .<b>###</b>...<br/>\n    <b>#####</b>..<br/>\n  </code>\n  is a valid 2-Christmas tree. Note that the height of the 2 good triangles can be different.\n</p>\n<p>\n  <code>\n    ..<b>#</b>..<br/>\n    .<b>###</b>.<br/>\n    .<b>#</b>...<br/>\n  </code>\n  is also a valid 2-Christmas tree. Note that a good triangle can be of height 1 and have only one green cell.\n</p>\n<p>\n  <code>\n    ...<b>#</b>...<br/>\n    ..<b>###</b>..<br/>\n    .<b>#####</b>.<br/>\n    .......<br/>\n    ..<b>#</b>....<br/>\n    .<b>###</b>...<br/>\n    <b>#####</b>..<br/>\n  </code>\n  is <b>NOT</b> a valid Christmas tree, because the 2nd triangle must starts from the 4-th row.\n</p>\n<p>\n  <code>\n    ...<b>#</b>.<br/>\n    ..<b>###</b><br/>\n    .<b>#</b>...<br/>\n    <b>###</b>..<br/>\n  </code>\n  is <b>NOT</b> a valid Christmas tree, because the top of the 2nd triangle must be in a column between 3 and 5, inclusive.\n</p>\n\n<p>You need to find the K-Christmas tree with the largest number of green cells.</p>\n\n<h3>Input</h3>\n<p>\n  The first line of the input gives the number of test cases, <b>T</b>. <b>T</b> test cases follow. Each test case consists of three lines:\n</p>\n<ul>\n  <li>The first line contains 3 space-separated integers <b>N</b>, <b>M</b> and <b>K</b>, where <b>N</b> is the number of rows of the grid, <b>M</b> is the number of columns of the grid and <b>K</b> is the number of good triangle in the desired Christmas tree.</li>\n  <li>The next <b>N</b> lines each contain exactly <b>M</b> characters. Each character will be either <b>.</b> or <b>#</b>, representing a white or green cell, respectively.</li>\n</ul>\n\n<h3>Output</h3>\n<p>\nFor each test case, output one line containing <code>Case #x: y</code>, where <code>x</code> is the test case number (starting from 1) and <code>y</code> is the number of green cells in the largest K-Christmas tree. If there is no K-Christmas tree, output 0.\n</p>\n\n<h3>Limits</h3>\n<p>\n  1 &le; <b>T</b> &le; 100.<br/>\n  Memory limit: 1GB.<br/>\n  1 &le; <b>M</b> &le; 100.<br/>\n  1 &le; <b>N</b> &le; 100.<br/>\n\nEach cell in the grid is either <code>.</code> or <code>#</code>.\n</p>\n\n<h4>Small dataset (Test set 1 - Visible)</h4>\n<p>\n  Time limit: 30 seconds.<br/>\n  <b>K</b> = 1.\n</p>\n\n<h4>Large dataset (Test set 2 - Hidden)</h4>\n<p>\n  Time limit: 80 seconds.<br/>\n  1 &le; <b>K</b> &le; 100.\n</p>\n\n\n  <h3>Sample</h3>\n  <div class=\"problem-io-wrapper-new\">\n    <div class=\"sampleio-wrapper\">\n      <div class=\"sample-input\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Input</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U2tLR84DThIzXy5OltQ7DXmDHzqQVyaT6qASP7MAc4TGhmLN7G1It0CoruyN39GvMTYoB6tD857GEafBjXmbr_vzG8gYQ78ryaGVtduQw/christmas_tree_sample_ts1_input.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_input_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_input_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_input_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_input_0\">4\n3 5 1\n..#..\n.###.\n#####\n3 5 1\n.....\n.....\n.....\n4 5 1\n#####\n#####\n#####\n#####\n4 5 2\n#####\n#####\n#####\n#####\n</pre>\n        </div>\n      </div>\n      <div class=\"sample-output\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Output</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U2TIVI890TYRutP6TuJlqX-lZ_1Yp4l97FBf6O3fRHWdGTHt5VKWVqrI-sixMPrhPfOfyrNdGRz_bgmZLNFIqoAb_jEtsrk7Y6K0iRLMAU/christmas_tree_sample_ts1_output.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_output_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_output_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_output_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_output_0\">Case #1: 9\nCase #2: 0\nCase #3: 9\nCase #4: 10\n</pre>\n        </div>\n      </div>\n    </div>\n  </div>\n\n\n<p>\nIn sample case #1, the largest 1-Christmas tree has 9 green cells:\n</p>\n<p>\n  <code>\n    ..<b>#</b>..<br/>\n    .<b>###</b>.<br/>\n    <b>#####</b><br/>\n  </code>\n</p>\n<p>\nIn sample case #2, there is no 1-Christmas tree.\n</p>\n<p>\nIn sample case #3, one largest 1-Christmas tree with 9 green cells is:\n</p>\n<p>\n  <code>\n    ##<b>#</b>##<br/>\n    #<b>###</b>#<br/>\n    <b>#####</b><br/>\n    #####<br/>\n  </code>\n</p>\n<p>\nIn sample case #4, one largest 2-Christmas tree with 10 green cells is:\n</p>\n<p>\n  <code>\n    ##<b>#</b>##<br/>\n    #<b>###</b>#<br/>\n    <b>#####</b><br/>\n    ##<b>#</b>##<br/>\n  </code>\n</p>\n","task_type":1,"task_type__str":"CODE_JAM","tests":[{"type":1,"type__str":"VISIBLE","value":11},{"type":2,"type__str":"HIDDEN","value":32}],"title":"Christmas Tree","trial_input_type":1,"trial_input_type__str":"TEXT_FILE"}],"ticket":{"challenge_id":"0000000000201d27","type":1,"type__str":"SPECTATOR"},"title":"Round B 2017"},"languages":[{"id":1,"id__str":"BASH","name":"Bash"},{"id":2,"id__str":"C","name":"C (GCC)"},{"id":11,"id__str":"CSHARP","name":"C# (Mono)"},{"id":3,"id__str":"CPP","name":"C++17 (G++)"},{"id":19,"id__str":"CLOJURE","name":"Clojure"},{"id":24,"id__str":"D","name":"D (GDC)"},{"id":32,"id__str":"DART","name":"Dart"},{"id":28,"id__str":"FSHARP","name":"F# (Mono)"},{"id":6,"id__str":"GO","name":"Go 1.11.6"},{"id":20,"id__str":"GROOVY","name":"Groovy"},{"id":12,"id__str":"HASKELL","name":"Haskell (GHC)"},{"helper_text":"Please name your main class \"Solution\" (uppercase S) and do not declare a package.","id":4,"id__str":"JAVA","name":"Java 11 (OpenJDK)"},{"id":10,"id__str":"JAVASCRIPT","name":"JavaScript (Node.js)"},{"id":29,"id__str":"JULIA","name":"Julia"},{"id":22,"id__str":"KOTLIN","name":"Kotlin"},{"id":23,"id__str":"LISP","name":"Lisp (SBCL)"},{"id":30,"id__str":"LUA","name":"Lua"},{"id":18,"id__str":"OCAML","name":"OCaml"},{"id":31,"id__str":"OBJECTIVEC","name":"Objective-C (GNU)"},{"id":15,"id__str":"OCTAVE","name":"Octave"},{"id":9,"id__str":"PHP","name":"PHP"},{"id":21,"id__str":"PASCAL","name":"Pascal (FPC)"},{"id":14,"id__str":"PERL","name":"Perl"},{"id":34,"id__str":"PYPY3","name":"PyPy 3"},{"id":7,"id__str":"PYTHON3","name":"Python 3.7"},{"id":25,"id__str":"R","name":"R"},{"id":8,"id__str":"RUBY","name":"Ruby"},{"id":17,"id__str":"RUST","name":"Rust"},{"helper_text":"Please name your main class \"Solution\" (uppercase S).","id":13,"id__str":"SCALA","name":"Scala"},{"id":16,"id__str":"SWIFT","name":"Swift"},{"id":33,"id__str":"TYPESCRIPT","name":"TypeScript (Node.js)"},{"id":27,"id__str":"VISUALBASIC","name":"Visual Basic (Mono)"}]}
