{"challenge":{"announcements":[],"are_results_final":true,"end_ms":1408348800000,"hide_scoreboard":false,"hide_scoreboard_config":{},"id":"0000000000434d9c","is_practice_available":true,"my_user_type":1,"my_user_type__str":"SPECTATOR","recap":"","registration_gives_participant":false,"result_status":30,"result_status__str":"FINALIZED","start_ms":1408338000000,"tasks":[{"analysis":"\n  <div class=\"test-data-download-wrapper\">\n    <div class=\"test-data-download-header\">\n      <div class=\"test-data-download-header-text\">Test Data</div>\n      <div class=\"test-data-download-header-download-button\">\n        <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U3ksLf5XLjzLA963-J6teGSyQfTzly0HjwkHuixWG6GxoOX-oBF0RVVFfIAXcRpxg9xIvV5oGlf/test_data.zip?dl=1\" target=\"_blank\">\n          <i class=\"material-icons grey\">save_alt</i>\n        </a>\n      </div>\n    </div>\n    <div class=\"test-data-download-content\">\n      <div class=\"test-data-download-warning\">\n        <span class=\"material-icons\" style=\"color: grey; vertical-align: middle;\">info</span>\n        <span style=\"vertical-align: middle;\">We recommend that you practice debugging solutions without looking at the test data.</span>\n      </div>\n    </div>\n  </div>\n\n","id":"0000000000434a76","statement":"<h3>Problem</h3>\n<p>\nSix years ago, a robot, Bob, with infant's intelligence has been invented by an evil scientist, Alice.\n</p>\n<p>\nNow the robot is six years old and studies in primary school. Addition is the first operation he learned in math. Due to his strong reasoning ability, he could now conclude a+b=12 from a=2 and b=10.\n</p>\n<p>\nAlice wanted to test Bob's addition skills. Some equations were given to Bob in form of a=2, b=10, c=4, and Bob has to find out the answers of questions like a+b, a+c, etc.\n</p>\n<p>\nAlice checked Bob's answers one by one in the test papers, and no mistake has been found so far, but Alice lost the given equations after a cup of coffee poured on them. However she has some of Bob's correct answers, e.g. a+b=12, a+c=6, c+d=5. She wants to continue with the checkable equations, e.g. b+d=11 could be concluded by a+b=12, a+c=6, c+d=5, and thus the question b+d is checkable.\n</p>\n<p>\nTo prevent the artificial intelligence technology from being under the control of Alice, you disguised yourself as her assistant. Now Alice wants you to figure out which of the rest of questions are checkable and their answers.\n</p>\n\n<h3>Input</h3>\n<p>\nThe first line of the input gives the number of test cases, <b>T</b>.  <b>T</b> test cases follow.\n\n<p>\nThe first line of each test case contains a single integer <b>N</b>: the number of correctly answered questions. Each of the next <b>N</b> lines contain one correctly answered question in the form \"<b>x</b>+<b>y</b>=<b>z</b>\", where <b>x</b> and <b>y</b> are names of variables and <b>z</b> is a decimal integer.\n</p>\n<p>\nThe next line contains a single integer <b>Q</b>: the number of remaining questions. Each of the next <b>Q</b> lines contain one question in the form \"<b>x</b>+<b>y</b>\", where <b>x</b> and <b>y</b> are names of variables.\n</p>\n\n<h3>Output</h3>\n<p>\nFor each test case, the first line of output contains \"Case #<b>x</b>:\", where <b>x</b> is the test case number (starting from 1). For each question in the input that was checkable, output a single line with the answer in the form \"<b>x</b>+<b>y</b>=<b>z</b>\", where <b>x</b> and <b>y</b> are names of variables and <b>z</b> is a decimal integer. Questions should be listed in the same order as they were given in the input. Please do <b>NOT</b> ignore duplicated questions, since Alice would fire you if you pointed any mistake of hers.\n</p>\n\n<h3>Limits</h3>\n<p>\nTime limit: 30 seconds per test set.<br/>\nMemory limit: 1GB.<br/>\n<p>\nNames of variables are strings of lowercase English letters. Each name contains at most 10 characters.<br/>\n-200000 &le; <b>z</b> &le; 200000<br/>\nThere is no contradiction in the answered questions and if the answer is checkable, the result is an integer.\n</p>\n\n<h4>Small dataset (Test set 1 - Visible)</h4>\n<p>\n1 &le; <b>T</b> &le; 10<br/>\n1 &le; <b>N</b> &le; 10<br/>\n1 &le; <b>Q</b> &le; 10\n</p>\n\n<h4>Large dataset (Test set 2 - Hidden)</h4>\n<p>\n1 &le; <b>T</b> &le; 3<br/>\n1 &le; <b>N</b> &le; 5000<br/>\n1 &le; <b>Q</b> &le; 5000\n</p>\n\n  <h3>Sample</h3>\n  <div class=\"problem-io-wrapper-new\">\n    <div class=\"sampleio-wrapper\">\n      <div class=\"sample-input\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Input</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U1R-7WvsXXqkzPgjQx4HqecBlraJe6vrPxWW6ezpFaKg3pIKeTPKhcfEKYjPPEeQKspUXWToArJuLnjnLCMPsIe9bc9sp2GaQ/addition_sample_ts1_input.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_input_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_input_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_input_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_input_0\">2\n2\napple+banana=10\ncoconut+coconut=12\n5\napple+banana\napple+banana\napple+apple\nbanana+apple\npeach+apple\n3\na+b=3\nb+c=3\nc+d=3\n4\na+c\na+d\nb+c\nb+d\n</pre>\n        </div>\n      </div>\n      <div class=\"sample-output\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Output</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U3pxQlUPxkexv95GF7wMSvt-Yi3EB8wu9zMgxq18VhU0t5Cpi31FGFjKXsYjWictoxEWbQ71CzFsiNk7UKhQVtPNbL_92Nrd38/addition_sample_ts1_output.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_output_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_output_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_output_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_output_0\">Case #1:\napple+banana=10\napple+banana=10\nbanana+apple=10\nCase #2:\na+d=3\nb+c=3</pre>\n        </div>\n      </div>\n    </div>\n  </div>\n\n","task_type":1,"task_type__str":"CODE_JAM","tests":[{"type":1,"type__str":"VISIBLE","value":11},{"type":2,"type__str":"HIDDEN","value":19}],"title":"Addition","trial_input_type":1,"trial_input_type__str":"TEXT_FILE"},{"analysis":"\n  <div class=\"test-data-download-wrapper\">\n    <div class=\"test-data-download-header\">\n      <div class=\"test-data-download-header-text\">Test Data</div>\n      <div class=\"test-data-download-header-download-button\">\n        <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U0H7uTlHRHlkJAObiyg9QaGYEND5stR4W9PaoIh-5orEuFv-GkYH-wRhuRevKZyWWajFeykOFdP/test_data.zip?dl=1\" target=\"_blank\">\n          <i class=\"material-icons grey\">save_alt</i>\n        </a>\n      </div>\n    </div>\n    <div class=\"test-data-download-content\">\n      <div class=\"test-data-download-warning\">\n        <span class=\"material-icons\" style=\"color: grey; vertical-align: middle;\">info</span>\n        <span style=\"vertical-align: middle;\">We recommend that you practice debugging solutions without looking at the test data.</span>\n      </div>\n    </div>\n  </div>\n\n","id":"0000000000434ba2","statement":"<h3>Problem</h3>\n<p>\nEnzo is doing renovation for his new house. The most difficult part is to buy exactly the right number of tiles. He wants <b>N</b> tiles of different sizes. Of course they have to be cut from the tiles he bought.  All the required tiles are square. The lengths of side of the tiles are <b>2<sup>S<sub>1</sub></sup></b>, <b>2<sup>S<sub>2</sub></sup></b>, ..., <b>2<sup>S<sub>N</sub></sup></b>. He can only buy a lot of tiles sized <b>M</b>*<b>M</b>, and he decides to only cut tiles parallel to their sides for convenience. How many tiles does he need to buy?\n</p>\n\n<h3>Input</h3>\n<p>\nThe first line of the input gives the number of test cases: <b>T</b>.  <b>T</b> lines follow.  Each line start with the number <b>N</b> and <b>M</b>, indicating the number of required tiles and the size of the big tiles Enzo can buy. <b>N</b> numbers follow: <b>S<sub>1</sub></b>, <b>S<sub>2</sub></b>, ... <b>S<sub>N</sub></b>, showing the sizes of the required tiles.\n</p>\n\n<h3>Output</h3>\n<p>\nFor each test case, output one line containing \"Case #x: y\", where x is the test case number (starting from 1) and y is the number of the big tiles Enzo need to buy.\n</p>\n\n<h3>Limits</h3>\n<p>\nTime limit: 30 seconds per test set.<br/>\nMemory limit: 1GB.<br/>\n1 &le; <b>2<sup>S<sub>k</sub></sup></b> &le; <b>M</b>  &le; 2<sup>31</sup>-1.\n</p>\n\n<h4>Small dataset (Test set 1 - Visible)</h4>\n<p>\n1 &le; <b>T</b> &le; 100.<br/>\n1 &le; <b>N</b> &le; 20.<br/>\n</p>\n\n<h4>Large dataset (Test set 2 - Hidden)</h4>\n<p>\n1 &le; <b>T</b> &le; 1000.<br/>\n1 &le; <b>N</b> &le; 500.<br/>\n</p>\n\n\n  <h3>Sample</h3>\n  <div class=\"problem-io-wrapper-new\">\n    <div class=\"sampleio-wrapper\">\n      <div class=\"sample-input\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Input</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U0LbKmHUKhZqqwGa3LSfFR1Nsz91uKtghDtaD30anec2CrT80oOm5-Brnga2N_2Gq8ULZF0eitpHgOzFYqmylMJuaH16001x6A/cut_tiles_sample_ts1_input.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_input_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_input_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_input_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_input_0\">4\n1 6 2\n2 6 2 2\n3 6 2 1 1\n7 277 3 8 2 6 1 3 6\n</pre>\n        </div>\n      </div>\n      <div class=\"sample-output\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Output</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U396VY7eSFpYy4IV02gOZF9_6qoUBGN8HQ4qK6ZUL8TE8CDwslr--MeWyn8-VpoYPtP-_23E3JxkCAOYKhKiwxT4b8WQWVMctUC/cut_tiles_sample_ts1_output.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_output_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_output_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_output_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_output_0\">Case #1: 1\nCase #2: 2\nCase #3: 1\nCase #4: 2\n</pre>\n        </div>\n      </div>\n    </div>\n  </div>\n\n","task_type":1,"task_type__str":"CODE_JAM","tests":[{"type":1,"type__str":"VISIBLE","value":13},{"type":2,"type__str":"HIDDEN","value":16}],"title":"Cut Tiles","trial_input_type":1,"trial_input_type__str":"TEXT_FILE"},{"analysis":"\n  <div class=\"test-data-download-wrapper\">\n    <div class=\"test-data-download-header\">\n      <div class=\"test-data-download-header-text\">Test Data</div>\n      <div class=\"test-data-download-header-download-button\">\n        <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U2BUOILYCssv8zzYj3ffJduPiS_SfK3G494Vuygol6puIz_SJyaKYyKOO3ocVFq5i5BszY_EfH4/test_data.zip?dl=1\" target=\"_blank\">\n          <i class=\"material-icons grey\">save_alt</i>\n        </a>\n      </div>\n    </div>\n    <div class=\"test-data-download-content\">\n      <div class=\"test-data-download-warning\">\n        <span class=\"material-icons\" style=\"color: grey; vertical-align: middle;\">info</span>\n        <span style=\"vertical-align: middle;\">We recommend that you practice debugging solutions without looking at the test data.</span>\n      </div>\n    </div>\n  </div>\n\n","id":"0000000000434c09","statement":"<h3>Problem</h3>\n<p>\nTom is a boy whose dream is to become a scientist, he invented a lot in his spare time. He came up with a great idea several days ago: to make a stopwatch by himself! So he bought a seven-segment display immediately.\n</p>\n\n<p>\nThe seven elements of the display are all light-emitting diodes (LEDs) and can be lit in different combinations to represent the arabic numerals like:\n</p>\n\n<img src=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U3UeIUVF4KqeVnq5slYo5V0NEU0RAtNGqLkzfjd9HVepd6wSjRPSEAidpUAQ85O9fTFbD2AZQiY/digits_30.png\">\n\n<p>\nHowever, just when he finished the programs and tried to test the stopwatch, some of the LEDs  turned out to be broken! Some of the segments can never be lit while others worked fine. So the display kept on producing some ambiguous states all the time...\n</p>\n\n<p>\nTom has recorded a continuous sequence of states which were produced by the display and is curious about whether it is possible to understand what this display was doing. He thinks the first step is to determine the state which the display will show <b>next</b>, could you help him?\n</p>\n\n<p>\nPlease note that the display works well despite those broken segments, which means that the display will keep on counting down <b>cyclically</b> starting from a certain number (can be any one of 0-9 since we don't know where this record starts from). 'Cyclically' here means that each time when the display reaches 0, it will keep on counting down starting from 9 again.\n</p>\n\n<p>\nFor convenience, we refer the seven segments of the display by the letters A to G as the picture below:\n</p>\n\n<img src=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U3Ddx61inP1H-rYNDsua08crZCtpId-c9wRb3pTsjSTHLBUdhMXc5R-HslW7XkF56-XLDhfo0o/marks_40.png\">\n\n<p>\nFor example, if the record of states is like:\n</p>\n\n<img src=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U2xBcu7bl4hqHBPLcHcPrHE7W9jlBiYSeXJtCjDtNQ9IQQDPZ5j7z5-CzB1AIEuleHUdpaY7v5OIYgEFg/example_in_30.png\">\n\n<p>\nIt's not that hard to figure out that ONLY segment B is broken and the sequence of states the display is trying to produce is simply \"9 -&gt; 8 -&gt; 7 -&gt; 6 -&gt; 5\". Then the next number should be 4, but considering of the brokenness of segment B, the next state should be:\n</p>\n\n<img src=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U1DnrDh3o3DaYTkNuC7JxAi9AJejOLxJ1eFYpYnpDE9sC7uiDtB43N8XqkzcZXR4vSklS3xVBf8-2Ss5Bk/example_out_30.png\">\n\n<h3>Input</h3>\n<p>\nThe first line of the input gives the number of test cases, <b>T</b>.  Each test case is a line containing an integer <b>N</b> which is the number of states Tom recorded and a list of the <b>N</b> states separated by spaces. Each state is encoded into a 7-character string represent the display of segment A-G, from the left to the right. Characters in the string can either be '1' or '0', denoting the corresponding segment is on or off, respectively.\n</p>\n\n<h3>Output</h3>\n<p>\nFor each test case, output one line containing \"Case #x: y\", where x is the test case number (starting from 1). If the input unambiguously determines the next state of the display, y should be that next state (in the same format as the input). Otherwise, y should be \"ERROR!\".\n</p>\n\n<h3>Limits</h3>\n<p>\nTime limit: 30 seconds per test set.<br/>\nMemory limit: 1GB.<br/>\n1 &le; <b>T</b> &le; 2000.\n</p>\n\n<h4>Small dataset (Test set 1 - Visible)</h4>\n<p>\n1 &le; <b>N</b> &le; 5.<br/>\n</p>\n\n<h4>Large dataset (Test set 2 - Hidden)</h4>\n<p>\n1 &le; <b>N</b> &le; 100.<br/>\n</p>\n\n\n  <h3>Sample</h3>\n  <div class=\"problem-io-wrapper-new\">\n    <div class=\"sampleio-wrapper\">\n      <div class=\"sample-input\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Input</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U1PgMDX6jhZnAAw8uWZToWx9Am_6SrjM3jXYN08PZ9jLIcXyUvnCduy8c_wLQur4F4qjEFgBS0yulAuBzHQ4TCXT6wfpvdgfzldcsz8GP9Htg1cPRE/seven-segment_display_sample_ts1_input.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_input_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_input_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_input_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_input_0\">4\n1 1111111\n2 0000000 0001010\n3 0100000 0000111 0000011\n5 1011011 1011111 1010000 1011111 1011011</pre>\n        </div>\n      </div>\n      <div class=\"sample-output\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Output</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U3IDc4OvskVc8Z6Sm5cAWr0GwEJqaWabiLSzBJyUtBQ0cOiPeEMEmSxBljv39t2q5XGKNH5sqEKw1oYxxNH0Pj69TOQb8Ryu0EFGuhXQtynC_XAXHXR/seven-segment_display_sample_ts1_output.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_output_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_output_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_output_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_output_0\">Case #1: 1110000\nCase #2: ERROR!\nCase #3: 0100011\nCase #4: 0010011</pre>\n        </div>\n      </div>\n    </div>\n  </div>\n\n","task_type":1,"task_type__str":"CODE_JAM","tests":[{"type":1,"type__str":"VISIBLE","value":8},{"type":2,"type__str":"HIDDEN","value":14}],"title":"Seven-segment Display","trial_input_type":1,"trial_input_type__str":"TEXT_FILE"},{"analysis":"It's a simple simulation problem. Just need to handle the corner case well, such as a newly created tile can be merged again.\n\n\n  <div class=\"test-data-download-wrapper\">\n    <div class=\"test-data-download-header\">\n      <div class=\"test-data-download-header-text\">Test Data</div>\n      <div class=\"test-data-download-header-download-button\">\n        <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U3ebxTZy4LLwtY6x8sOBLGCziJ1kHioH0dG4uedyHnCffL1iDFqSlpVcyyD02QvQZOafo4C1MnR/test_data.zip?dl=1\" target=\"_blank\">\n          <i class=\"material-icons grey\">save_alt</i>\n        </a>\n      </div>\n    </div>\n    <div class=\"test-data-download-content\">\n      <div class=\"test-data-download-warning\">\n        <span class=\"material-icons\" style=\"color: grey; vertical-align: middle;\">info</span>\n        <span style=\"vertical-align: middle;\">We recommend that you practice debugging solutions without looking at the test data.</span>\n      </div>\n    </div>\n  </div>\n\n","id":"0000000000434cd0","statement":"<h3>Problem</h3>\n<p>\n2048 is a famous single-player game in which the objective is to slide tiles on a grid to combine them and create a tile with the number 2048.\n</p>\n<p>\n2048 is played on a simple 4 x 4 grid with tiles that slide smoothly when a player moves them. For each movement, the player can choose to move all tiles in 4 directions, left, right, up, and down, as far as possible at the same time. If two tiles of the same number collide while moving, they will merge into a tile with the total value of the two tiles that collided. <b>In one movement, one newly created tile can not be merged again and always is merged with the tile next to it along the moving direction first.</b> E.g. if the three \"2\" are in a row \"2 2 2\" and the player choose to move left, it will become \"4 2 0\", the most left 2 \"2\" are merged.\n</p>\n<p>\n<img src=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U2NUrMG3N8_Ji43CYr3Mio6JV3W7HyDHUvuvib02TMj-l5D-YGd9w1RzowI0XFpHFcvyg/2048.png\"><br/>\nThe above figure shows how 4 x 4 grid varies when player moves all tiles 'right'.\n</p>\n<p>\nAlice and Bob accidentally find this game and love the feel when two tiles are merged. After a few round, they start to be bored about the size of the board and decide to extend the size of board to <b>N</b> x <b>N</b>, which they called the game \"Super 2048\".\n</p>\n<p>\nThe big board then makes them dazzled (no zuo no die -_-| ). They ask you to write a program to help them figure out what the board will be looked like after all tiles move to one specific direction on a given board.\n</p>\n\n<h3>Input</h3>\n<p>\nThe first line of the input gives the number of test cases, <b>T</b>. <b>T</b> test cases follow.\nThe first line of each test case gives the side length of the board, <b>N</b>, and the direction the tiles will move to, <b>DIR</b>. <b>N</b> and <b>DIR</b> are separated by a single space. <b>DIR</b> will be one of four strings: \"left\", \"right\", \"up\", or \"down\".\n\n<p>\nThe next <b>N</b> lines each contain <b>N</b> space-separated integers describing the original state of the board. Each line represents a row of the board (from top to bottom); each integer represents the value of a tile (or 0 if there is no number at that position).\n\n<h3>Output</h3>\n<p>\nFor each test case, output one line containing \"Case #x:\", where x is the test case number (starting from 1). Then output <b>N</b> more lines, each containing <b>N</b> space-separated integers which describe the board after the move in the same format as the input.\n</p>\n\n<h3>Limits</h3>\n<p>\nTime limit: 30 seconds per test set.<br/>\nMemory limit: 1GB.<br/>\nEach number in the grid is either 0 or a power of two between 2 and 1024, inclusive.\n</p>\n\n<h4>Small dataset (Test set 1 - Visible)</h4>\n<p>\n1 &le; <b>T</b> &le; 20 <br/>\n1 &le; <b>N</b> &le; 4 <br/>\n</p>\n\n<h4>Large dataset (Test set 2 - Hidden)</h4>\n<p>\n1 &le; <b>T</b> &le; 100 <br/>\n1 &le; <b>N</b> &le; 20 <br/>\n</p>\n\n\n  <h3>Sample</h3>\n  <div class=\"problem-io-wrapper-new\">\n    <div class=\"sampleio-wrapper\">\n      <div class=\"sample-input\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Input</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U2VR9bxlTs9bamti6zueM7PtVWIL9tLehbVcYxSelFNaC3gMXq8PeO-9cYFK3sEs8HRhAk7U3FaYSuU3xSbEj4HShvZymFxblKW/super_2048_sample_ts1_input.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_input_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_input_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_input_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_input_0\">3\n4 right\n2 0 2 4\n2 0 4 2\n2 2 4 8\n2 2 4 4\n10 up\n2 0 0 0 0 0 0 0 0 0\n2 0 0 0 0 0 0 0 0 0\n2 0 0 0 0 0 0 0 0 0\n2 0 0 0 0 0 0 0 0 0\n2 0 0 0 0 0 0 0 0 0\n2 0 0 0 0 0 0 0 0 0\n2 0 0 0 0 0 0 0 0 0\n2 0 0 0 0 0 0 0 0 0\n2 0 0 0 0 0 0 0 0 0\n2 0 0 0 0 0 0 0 0 0\n3 right\n2 2 2\n4 4 4\n8 8 8\n</pre>\n        </div>\n      </div>\n      <div class=\"sample-output\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Output</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U0XdJAlNawJ5UzMa48zZRkA1yWojN5IKuH_V9KVF_APwl7PQeZp0BGSNrRoXvKKVhu6jF0ckLtD5P-3Ug7QRu78RWtqxCSMzx2G8g/super_2048_sample_ts1_output.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_output_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_output_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_output_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_output_0\">Case #1:\n0 0 4 4\n0 2 4 2\n0 4 4 8\n0 0 4 8\nCase #2:\n4 0 0 0 0 0 0 0 0 0\n4 0 0 0 0 0 0 0 0 0\n4 0 0 0 0 0 0 0 0 0\n4 0 0 0 0 0 0 0 0 0\n4 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\nCase #3:\n0 2 4\n0 4 8\n0 8 16</pre>\n        </div>\n      </div>\n    </div>\n  </div>\n\n","task_type":1,"task_type__str":"CODE_JAM","tests":[{"type":1,"type__str":"VISIBLE","value":6},{"type":2,"type__str":"HIDDEN","value":13}],"title":"Super 2048","trial_input_type":1,"trial_input_type__str":"TEXT_FILE"}],"ticket":{"challenge_id":"0000000000434d9c","type":1,"type__str":"SPECTATOR"},"title":"Round A 2014"},"languages":[{"id":1,"id__str":"BASH","name":"Bash"},{"id":2,"id__str":"C","name":"C (GCC)"},{"id":11,"id__str":"CSHARP","name":"C# (Mono)"},{"id":3,"id__str":"CPP","name":"C++17 (G++)"},{"id":19,"id__str":"CLOJURE","name":"Clojure"},{"id":24,"id__str":"D","name":"D (GDC)"},{"id":32,"id__str":"DART","name":"Dart"},{"id":28,"id__str":"FSHARP","name":"F# (Mono)"},{"id":6,"id__str":"GO","name":"Go 1.11.6"},{"id":20,"id__str":"GROOVY","name":"Groovy"},{"id":12,"id__str":"HASKELL","name":"Haskell (GHC)"},{"helper_text":"Please name your main class \"Solution\" (uppercase S) and do not declare a package.","id":4,"id__str":"JAVA","name":"Java 11 (OpenJDK)"},{"id":10,"id__str":"JAVASCRIPT","name":"JavaScript (Node.js)"},{"id":29,"id__str":"JULIA","name":"Julia"},{"id":22,"id__str":"KOTLIN","name":"Kotlin"},{"id":23,"id__str":"LISP","name":"Lisp (SBCL)"},{"id":30,"id__str":"LUA","name":"Lua"},{"id":18,"id__str":"OCAML","name":"OCaml"},{"id":31,"id__str":"OBJECTIVEC","name":"Objective-C (GNU)"},{"id":15,"id__str":"OCTAVE","name":"Octave"},{"id":9,"id__str":"PHP","name":"PHP"},{"id":21,"id__str":"PASCAL","name":"Pascal (FPC)"},{"id":14,"id__str":"PERL","name":"Perl"},{"id":34,"id__str":"PYPY3","name":"PyPy 3"},{"id":7,"id__str":"PYTHON3","name":"Python 3.7"},{"id":25,"id__str":"R","name":"R"},{"id":8,"id__str":"RUBY","name":"Ruby"},{"id":17,"id__str":"RUST","name":"Rust"},{"helper_text":"Please name your main class \"Solution\" (uppercase S).","id":13,"id__str":"SCALA","name":"Scala"},{"id":16,"id__str":"SWIFT","name":"Swift"},{"id":33,"id__str":"TYPESCRIPT","name":"TypeScript (Node.js)"},{"id":27,"id__str":"VISUALBASIC","name":"Visual Basic (Mono)"}]}
