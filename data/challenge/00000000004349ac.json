{"challenge":{"announcements":[],"are_results_final":true,"end_ms":1446969600000,"hide_scoreboard":false,"hide_scoreboard_config":{},"id":"00000000004349ac","is_practice_available":true,"my_user_type":1,"my_user_type__str":"SPECTATOR","recap":"","registration_gives_participant":false,"result_status":30,"result_status__str":"FINALIZED","start_ms":1446958800000,"tasks":[{"analysis":"\n  <div class=\"test-data-download-wrapper\">\n    <div class=\"test-data-download-header\">\n      <div class=\"test-data-download-header-text\">Test Data</div>\n      <div class=\"test-data-download-header-download-button\">\n        <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U2y_VShQ4EBsSnoBDb7URzCvFaRAbf8FiQgB7JfrI4iFvFK7FcMdYr8rsXCp_BBlv0j2OoCdi5S/test_data.zip?dl=1\" target=\"_blank\">\n          <i class=\"material-icons grey\">save_alt</i>\n        </a>\n      </div>\n    </div>\n    <div class=\"test-data-download-content\">\n      <div class=\"test-data-download-warning\">\n        <span class=\"material-icons\" style=\"color: grey; vertical-align: middle;\">info</span>\n        <span style=\"vertical-align: middle;\">We recommend that you practice debugging solutions without looking at the test data.</span>\n      </div>\n    </div>\n  </div>\n\n","id":"0000000000434880","statement":"<h3>Problem</h3>\n<p>\nAn IP (Internet Protocol) address is a number that is assigned to each device on the Internet. At the time being, most devices use version four of this protocol (IPv4). An IPv4 address is a 32-bit string. IPv4 addresses are normally represented in dot-decimal notation, which consists of four decimal numbers called octets, each ranging from 0 to 255 (inclusive), separated by dots, e.g., 172.16.254.1. Each octet represents a group of 8 bits (one byte) of the address. The first 8 bits of the string (when interpreted as an unsigned integer, with the most significant bit first) form the first octet, the next 8 bits form the second octet, and so on. \n</p>\n<p>An IP subnet addresses is used to represent a group of devices that belong to the same network. IP subnet addresses are expressed in the format of an IP address, followed by a slash and then a prefix length ranging from 0 to 32. A subnet address stands for all IP addresses that have the same first P bits of the given address, where P is the prefix length. For example 10.8.0.0/9 represents 2<sup>23</sup> addresses that all have <code>000010100</code> (the first nine bits of 10.8.0.0) as their first 9 bits, that is, 10.0.0.0 through 10.127.255.255. Note that 10.8.0.0/9 and, for example, 10.0.0.0/9 (or any other address within the subnet) would be equivalent ways to refer to the same subnet, because those addresses start with the same nine bits.\n</p>\n<p>\nA subnet is <i>normalized</i> if the bits of the address other than the prefix are all zeroes. For example, 10.8.1.0/24 and 10.8.1.2/24 represent the same subnet, but 10.8.1.0/24 is normalized. The normalization of 255.255.255.255/13 is 255.248.0.0/13.\n</p>\n<p>\nYou will be given a list of subnet addresses, and you must output the shortest ordered list of subnets such that all the addresses are normalized and an address belongs to some subnet in the input if and only if it belongs to some subnet in the output.\n</p>\n\n<h3>Input</h3>\n<p>\nThe first line of the input gives the number of test cases, <b>T</b>. <b>T</b> test cases follow. Each begins with one line with an integer <b>N</b>, the number of subnets, and is followed by <b>N</b> more lines, each of which has a subnet addresses. Each subnet address is of the form <code>A.B.C.D/P</code>, where A, B, C, and D are integers from 0 to 255, inclusive, and P is an integer from 0 to 32, inclusive. No integer (apart from 0) has leading zeroes.\n</p>\n\n<h3>Output</h3>\n<p>\nFor each test case, output one line containing \"Case #x:\", where x is the test case number (starting from 1). Then output a list of subnet addresses, one per line, meeting the conditions described above. These addresses must be normalized and must be ordered. An address X comes before another address Y if X's first integer is smaller than Y's first integer, or if X and Y have the same first integer but X's second integer is smaller than Y's second integer, and so on.\n</p>\n<p>\nNote that the requirements of the problem guarantee that there is a single unique answer for each test case.\n</p>\n\n<h3>Limits</h3>\nMemory limit: 1 GB.<br/>\n1 &le; <b>T</b> &le; 50.<br/>\n\n<h4>Small dataset (Test Set 1 - Visible)</h4>\n<p>\nTime limit: 30 seconds.<br/>\n1 &le; <b>N</b> &le; 10.<br/>\n</p>\n\n<h4>Large dataset (Test Set 2 - Hidden)</h4>\n<p>\nTime limit: 60 seconds.<br/>\n1 &le; <b>N</b> &le; 10000.<br/>\n</p>\n\n\n  <h3>Sample</h3>\n  <div class=\"problem-io-wrapper-new\">\n    <div class=\"sampleio-wrapper\">\n      <div class=\"sample-input\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Input</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U1tbeCHgVEZCzNQe1dGlNTQrV1gzC8O9D2mvRUlXygWmVjOgx0_MGLG9knKEqCd16DWj7ZnmXfJzaf7RIY_gNnly1tplZuU6iR4MekB9R6T-TmiqDyLUVo/ip_address_summarization_sample_ts1_input.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_input_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_input_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_input_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_input_0\">3\n2\n10.1.2.3/8\n10.2.3.4/17\n2\n10.2.3.4/9\n10.128.2.3/9\n10\n224.147.224.186/18\n58.45.85.53/14\n52.56.134.139/26\n52.227.82.227/22\n83.250.251.44/13\n83.250.12.64/16\n58.40.52.11/14\n52.22.138.56/23\n238.223.58.151/27\n58.32.52.11/13\n</pre>\n        </div>\n      </div>\n      <div class=\"sample-output\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Output</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U25fNxMEqnrHJwQ4W8E9LenxFNfruQkD8vN2mut8SlzjuCM666g94W3LUkbK8q2Iy8vsmZRkH7Xsv6fAFCD6SVcvyMGF50voWdm3kmDuonEMJKmBZpg-npE/ip_address_summarization_sample_ts1_output.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_output_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_output_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_output_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_output_0\">Case #1:\n10.0.0.0/8\nCase #2:\n10.0.0.0/8\nCase #3:\n52.22.138.0/23\n52.56.134.128/26\n52.227.80.0/22\n58.32.0.0/12\n83.248.0.0/13\n224.147.192.0/18\n238.223.58.128/27\n</pre>\n        </div>\n      </div>\n    </div>\n  </div>\n\n","task_type":1,"task_type__str":"CODE_JAM","tests":[{"type":1,"type__str":"VISIBLE","value":10},{"type":2,"type__str":"HIDDEN","value":19}],"title":"IP Address Summarization","trial_input_type":1,"trial_input_type__str":"TEXT_FILE"},{"analysis":"\n  <div class=\"test-data-download-wrapper\">\n    <div class=\"test-data-download-header\">\n      <div class=\"test-data-download-header-text\">Test Data</div>\n      <div class=\"test-data-download-header-download-button\">\n        <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U3qFuPdWTZF_o_S_Rkb6uoJBNiHcKWX9BY89eb4oXum-s6ICRZPdt91eesvsveXwgopDa7Ip3LW/test_data.zip?dl=1\" target=\"_blank\">\n          <i class=\"material-icons grey\">save_alt</i>\n        </a>\n      </div>\n    </div>\n    <div class=\"test-data-download-content\">\n      <div class=\"test-data-download-warning\">\n        <span class=\"material-icons\" style=\"color: grey; vertical-align: middle;\">info</span>\n        <span style=\"vertical-align: middle;\">We recommend that you practice debugging solutions without looking at the test data.</span>\n      </div>\n    </div>\n  </div>\n\n","id":"0000000000434949","statement":"<h3>Problem</h3>\n<p>\nAlice just bought a virtual pet rabbit. The rabbit hops around on a screen and can be \"fed\" by pressing a button. Alice is fond of the rabbit, but she is also busy, and doesn't want to spend too much time taking care of it. However, if the rabbit goes without \"food\" for too long, it \"dies\" and Alice loses the game. \n</p>\n<p>\nEvery day, Alice gets up at time <b>G</b>, goes to work at time <b>W</b>, returns home at time <b>H</b>, and goes to bed at time <b>B</b>. Alice cannot feed the rabbit while she is at work or asleep -- that is, in the intervals [<b>W</b>, <b>H</b>) and [<b>B</b>, <b>G</b>). Note that times <b>W</b> and <b>B</b> themselves are not valid feeding times, whereas times <b>H</b> and <b>G</b> are. In any other second, Alice can either push a button to instantly feed the rabbit, or not push the button. Between every two seconds, the rabbit determines the number of consecutive seconds in which it has not been fed, and \"dies\" if that duration is equal to <b>X</b>.\n</p>\n<p>\nIt is currently 00:00:00 on Day 0, and the rabbit has just been delivered to Alice's house by the mail service. (The mail carrier pushes the button at 00:00:00, even if Alice is asleep, and then leaves.) Alice wants to make sure the rabbit is still \"alive\" at 00:00:00 on day <b>D</b>. What is the minimal number of times that she needs to feed the rabbit, if she can keep the rabbit \"alive\" at all?\n</p>\n\n<h3>Input</h3>\n<p>\nThe first line of the input gives the number of test cases, <b>T</b>. <b>T</b> test cases follow; each consists of 6 lines. The first 5 lines represent the times <b>G</b>, <b>W</b>, <b>H</b>, <b>B</b>, and <b>X</b> in \"hh:mm:ss\" format. The last line consists of one integer <b>D</b>.\n</p>\n\n<h3>Output</h3>\n<p>\nFor each test case, output one line containing \"Case #x: y\", where x is the test case number (starting from 1) and y is the minimal number of times Alice needs to feed the rabbit. If it's impossible for the rabbit to be alive at 00:00:00 on day <b>D</b>, output -1.\n</p>\n\n<h3>Limits</h3>\n<p>\nTime limit: 30 seconds per test set.<br/>\nMemory limit: 1 GB.<br/>\n1 &le; <b>T</b> &le; 100.<br/>\nIt's guaranteed that Alice always goes to bed before midnight and gets up at or after midnight. <b>G</b>, <b>W</b>, <b>H</b>, and <b>B</b> are in strictly increasing order within the same day.<br/>\n00:00:00 &le; <b>G</b> &lt; <b>W</b> &lt; <b>H</b> &lt; <b>B</b> &le; 23:59:59.<br/>\n00:00:00 &lt; <b>X</b> &le; 23:59:59.<br/>\n</p>\n\n<h4>Small dataset (Test Set 1 - Visible)</h4>\n<p>\n1 &le; <b>D</b> &le; 1000.<br/>\n</p>\n\n<h4>Large dataset (Test Set 2 - Hidden)</h4>\n<p>\n1 &le; <b>D</b> &le; 10<sup>14</sup>.<br/>\n</p>\n\n\n  <h3>Sample</h3>\n  <div class=\"problem-io-wrapper-new\">\n    <div class=\"sampleio-wrapper\">\n      <div class=\"sample-input\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Input</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U3FVzALmexfSyWwWklBRFapTN6_AzLnxJV1Bjg5c1Y_vKWfxc1W9J-2UMxxuR76sfSh75wS36PmXXh7gdE3XTxWnALaR2RTkdQRQw_imA/virtual_rabbit_sample_ts1_input.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_input_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_input_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_input_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_input_0\">3\n08:00:00\n09:00:00\n18:00:00\n22:00:00\n12:00:00\n100\n08:00:00\n09:00:00\n18:00:00\n22:00:00\n01:00:00\n1\n00:00:00\n12:00:00\n12:00:01\n23:59:59\n00:00:02\n2</pre>\n        </div>\n      </div>\n      <div class=\"sample-output\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Output</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U0AquyX9_smu2g2PW5bgc5mf7H1j60YwX_onwbzB_wUj_gNYOUXLQGifcBPo5-tei7-A6oPFOnq1Rc7mNlE6vUlRf_QVVzijN7byFE9vyQ/virtual_rabbit_sample_ts1_output.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_output_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_output_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_output_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_output_0\">Case #1: 200\nCase #2: -1\nCase #3: 86401</pre>\n        </div>\n      </div>\n    </div>\n  </div>\n\n\n<p>\nIn sample case #1, Alice could feed the rabbit at 08:00:00 and 20:00:00 every day.\n</p>\n<p>\nIn sample case #2, the poor rabbit will be \"dead\" before Alice even wakes up on Day 0.\n</p>\n","task_type":1,"task_type__str":"CODE_JAM","tests":[{"type":1,"type__str":"VISIBLE","value":11},{"type":2,"type__str":"HIDDEN","value":20}],"title":"Virtual Rabbit","trial_input_type":1,"trial_input_type__str":"TEXT_FILE"},{"analysis":"\n  <div class=\"test-data-download-wrapper\">\n    <div class=\"test-data-download-header\">\n      <div class=\"test-data-download-header-text\">Test Data</div>\n      <div class=\"test-data-download-header-download-button\">\n        <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U0IvdxxFYb656kFTNROHmj79WFdJqhxGSWO04LHFPlQPNIqes28IhEZsepONVwF8UcJgUzsbM9J/test_data.zip?dl=1\" target=\"_blank\">\n          <i class=\"material-icons grey\">save_alt</i>\n        </a>\n      </div>\n    </div>\n    <div class=\"test-data-download-content\">\n      <div class=\"test-data-download-warning\">\n        <span class=\"material-icons\" style=\"color: grey; vertical-align: middle;\">info</span>\n        <span style=\"vertical-align: middle;\">We recommend that you practice debugging solutions without looking at the test data.</span>\n      </div>\n    </div>\n  </div>\n\n","id":"0000000000434c6c","statement":"<h3>Problem</h3>\n<p>\nWe have a grid with <b>R</b> rows and <b>C</b> columns in which every entry is either 0 or 1. We are going to perform <b>N</b> operations on the grid, each of which is one of the following:\n</p>\n<p>\n<ul><li>Operation M: Change a number in one cell of the grid to 0 or 1</li>\n<li>Operation Q: Determine the number of different <i>connected regions</i> of 1s. A connected region of 1s is a subset of cells that are all 1, in which any cell in the region can be reached from any other cell in the region by traveling between cells along edges (<b>not</b> corners).</li></ul>\n</p>\n\n<h3>Input</h3>\n<p>\nThe first line of the input gives the number of test cases, <b>T</b>. <b>T</b> test cases follow. Each test case starts with one line with two integers, <b>R</b> and <b>C</b>, which represent the number of rows and columns in the grid. Then, there are <b>R</b> lines of <b>C</b> characters each, in which every character is either <code>0</code> or <code>1</code>. These lines represent the initial state of the grid.\n</p>\nThe next line has one integer, <b>N</b>, the number of operations to perform on the grid. <b>N</b> more lines follow; each has one operation. All operation Ms will be of the form <code>M x y z</code>, meaning that the cell at row x and column y should be changed to the value z. All operation Qs will be of the form <code>Q</code>.\n\n</p>\n\n<h3>Output</h3>\n<p>\nFor each test case, output one line containing \"Case #x:\", where x is the test case number (starting from 1). Then, for every operation Q in the test case, in order, output one line containing the number of connected regions of 1s.\n</p>\n\n<h3>Limits</h3>\n<p>\nTime limit: 30 seconds per test set.<br/>\nMemory limit: 1 GB.<br/>\n1 &le; <b>T</b> &le; 10.<br/>\n1 &le; <b>R, C</b> &le; 100.<br/>\n0 &le; <b>x</b> &lt; <b>R</b>.<br/>\n0 &le; <b>y</b> &lt; <b>C</b>.<br/>\n0 &le; <b>z</b> &le; 1.<br/>\n\n</p>\n\n<h4>Small dataset (Test Set 1 - Visible)</h4>\n<p>\n1 &le; <b>N</b> &le; 10.<br/>\n</p>\n\n<h4>Large dataset (Test Set 2 - Hidden)</h4>\n<p>\n1 &le; <b>N</b> &le; 1000.<br/>\n</p>\n\n\n  <h3>Sample</h3>\n  <div class=\"problem-io-wrapper-new\">\n    <div class=\"sampleio-wrapper\">\n      <div class=\"sample-input\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Input</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U2EcK-kiIMO2RsiGx_rfLpyxpMQwJc8VB51dSPQytUWUVSB5THyKknc89E-ywqzWVO34KoHRaM3_a3E4uJDh92XmWR1uCu1AbeBH_U/dynamic_grid_sample_ts1_input.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_input_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_input_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_input_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_input_0\">1\n4 4\n0101\n0010\n0100\n1111\n7\nQ\nM 0 2 1\nQ\nM 2 2 0\nQ\nM 2 1 0\nQ\n</pre>\n        </div>\n      </div>\n      <div class=\"sample-output\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Output</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U379G-1gl9Jxi3MGAEdB-pua5RCLp-cGck4GlUIr4z_ZrWP0N8B8FzuhalTHTx4co4rY0rcm5kVAi3IJZEPQjfDN5St5oxyx5sHwmrE/dynamic_grid_sample_ts1_output.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_output_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_output_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_output_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_output_0\">Case #1:\n4\n2\n2\n2\n</pre>\n        </div>\n      </div>\n    </div>\n  </div>\n\n","task_type":1,"task_type__str":"CODE_JAM","tests":[{"type":1,"type__str":"VISIBLE","value":6},{"type":2,"type__str":"HIDDEN","value":8}],"title":"Dynamic Grid","trial_input_type":1,"trial_input_type__str":"TEXT_FILE"},{"analysis":"Binary searching the answer.  Iterate through all the balloons calculate the minimal energy for each balloon to be collected with in this time, sum them up to see if total energy is below Q.\n\n\n  <div class=\"test-data-download-wrapper\">\n    <div class=\"test-data-download-header\">\n      <div class=\"test-data-download-header-text\">Test Data</div>\n      <div class=\"test-data-download-header-download-button\">\n        <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U1gw9Zlj6fg9mFwKRyzzR6rDQxfRPRmJPCEOBT2iNA2g_swSSoKa-z3RJX_Wxgr-MG3sU829fWs/test_data.zip?dl=1\" target=\"_blank\">\n          <i class=\"material-icons grey\">save_alt</i>\n        </a>\n      </div>\n    </div>\n    <div class=\"test-data-download-content\">\n      <div class=\"test-data-download-warning\">\n        <span class=\"material-icons\" style=\"color: grey; vertical-align: middle;\">info</span>\n        <span style=\"vertical-align: middle;\">We recommend that you practice debugging solutions without looking at the test data.</span>\n      </div>\n    </div>\n  </div>\n\n","id":"0000000000434dfe","statement":"<h3>\n  Problem\n</h3>\n\n<p>\n  The G tech company has deployed many balloons. Sometimes, they need to be collected for maintenance at the company's tower, which is located at horizontal position 0. Each balloon is currently at horizontal position <b>P<sub>i</sub></b> and height <b>H<sub>i</sub></b>.\n</p>\n\n<p>\n  G engineers can move a balloon up and down by sending radio signals to tell it to drop ballast or let out air. But they can't move the balloon horizontally; they have to rely on existing winds to do that.\n</p>\n\n<p>\n  There are <b>M</b> different heights where the balloons could be. The winds at different heights may blow in different directions and at different velocities. Specifically, at height j, the wind has velocity <b>V<sub>j</sub></b>, with positive velocities meaning that the wind blows left to right, and negative velocities meaning that the wind blows right to left. A balloon at position P at a height with wind velocity V will be at position P+V after one time unit, P+2V after two time units, etc. If a balloon touches the tower, it is immediately collected.\n</p>\n\n<p>\n  It costs | H<sub>original</sub> - H<sub>new</sub> | points of energy to move one balloon between two different heights. (This transfer takes no time.) You have <b>Q</b> points of energy to spend, although you do not need to spend all of it. What is the least amount of time it will take to collect all the balloons, if you spend energy optimally?\n</p>\n\n<h3>\n  Input\n</h3>\n\n<p>\n  The first line of the input gives the number of test cases,&nbsp;<b>T</b>. <b>T</b> test cases follows. The first line of each case has three integers <b>N</b>, <b>M</b>, and <b>Q</b>, representing the number of balloons, the number of height levels, and the amount of energy available. <br/>\n  The second line has <b>M</b> integers; the jth value on this line (counting starting from 0) is the wind velocity at height j. <br/>\n  Then, <b>N</b> more lines follow. The ith of these lines consists of two integers, <b>P<sub>i</sub></b> and <b>H<sub>i</sub></b>, representing the position and height of the ith balloon.\n</p>\n\n<h3>\n  Output\n</h3>\n\n<p>\n  For each test case, output one line containing \"Case #x: y\", where x is the test case number (starting from 1) and y is the minimum number of time units needed to collect all of the balloons, returns IMPOSSIBLE if it's impossible to collect all the balloons using the energy given.\n</p>\n\n<h3>\n  Limits\n</h3>\n\n<p>\n  Time limit: 30 seconds per test set.<br/>\n  Memory limit: 1 GB.<br/>\n</p>\n\n<h4>\n  Small dataset (Test Set 1 - Visible)\n</h4>\n\n<p>\n  1 &le; <b>T</b> &le; 100.<br>\n  1 &le; <b>N</b> &le; 10.<br>\n  1 &le; <b>M</b> &le; 10.<br>\n  -10 &le; <b>V<sub>j</sub></b> &le; 10.<br>\n  1 &le; <b>Q</b> &le; 10.<br>\n  0 &le; <b>H<sub>i</sub></b> &lt;<b>M</b>.<br>\n  -10 &le; <b>P<sub>i</sub></b> &le; 10. <br>\n</p>\n\n<h4>\n  Large dataset (Test Set 2 - Hidden)\n</h4>\n\n<p>\n  1 &le; <b>T</b> &le; 25.<br>\n  1 &le; <b>N</b> &le; 100.<br>\n  1 &le; <b>M</b> &le; 1000.<br>\n  -100 &le; <b>V<sub>j</sub></b> &le; 100.<br>\n  1 &le; <b>Q</b> &le; 10000<br>\n  0 &le; <b>H<sub>i</sub></b> &lt;<b>M</b>.<br>\n  -10000 &le; <b>P<sub>i</sub></b> &le; 10000. <br>\n</p>\n\n\n  <h3>Sample</h3>\n  <div class=\"problem-io-wrapper-new\">\n    <div class=\"sampleio-wrapper\">\n      <div class=\"sample-input\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Input</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U3WlrXHup70-Y_sad9SMa9A_iCdkJaM7h4upOxNVuebgP3N1XbLhFeUzt3mExtyLM_XoV5KwvvtYPf2-B1xN3r3s6IkW7NF9g/gballoon_sample_ts1_input.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_input_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_input_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_input_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_input_0\">2\n2 4 1\n2 1 -2 -1\n3 3\n-2 1\n1 3 1\n1 -1 -2\n-2 2\n</pre>\n        </div>\n      </div>\n      <div class=\"sample-output\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Output</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U2EMXK8nltXOFxnIqi_Kl9tfSj3Uu6RRIZ1pUqFDHfoP8XtcYJCB0NQTSbWkH-5HL3_GhuqYNbJOg8nfNqAeY2b3oSLlhaYgOQ/gballoon_sample_ts1_output.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_output_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_output_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_output_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_output_0\">Case #1: 2\nCase #2: IMPOSSIBLE</pre>\n        </div>\n      </div>\n    </div>\n  </div>\n\n\n  <p>\n    Here is an example:\n  </p>\n\n  <img src=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U1zY3cmwiTOB9t-CM5_JwuRCGsapT0baWu_kNxrzSxVR7TW6EGG0UTwYIshgLGuTyrKSf8m/sample.png\">\n\n  <p>\n    In the sample case, there are two balloons in the sky, and you have 1 energy point to use. The best solution is to immediately spend 1 energy point to move the balloon at position 3, height 3 down to height 2. Once you've done that, it will take 2 time units for both balloons to reach the tower.\n  </p>\n","task_type":1,"task_type__str":"CODE_JAM","tests":[{"type":1,"type__str":"VISIBLE","value":9},{"type":2,"type__str":"HIDDEN","value":17}],"title":"gBalloon","trial_input_type":1,"trial_input_type__str":"TEXT_FILE"}],"ticket":{"challenge_id":"00000000004349ac","type":1,"type__str":"SPECTATOR"},"title":"Round D 2015"},"languages":[{"id":1,"id__str":"BASH","name":"Bash"},{"id":2,"id__str":"C","name":"C (GCC)"},{"id":11,"id__str":"CSHARP","name":"C# (Mono)"},{"id":3,"id__str":"CPP","name":"C++17 (G++)"},{"id":19,"id__str":"CLOJURE","name":"Clojure"},{"id":24,"id__str":"D","name":"D (GDC)"},{"id":32,"id__str":"DART","name":"Dart"},{"id":28,"id__str":"FSHARP","name":"F# (Mono)"},{"id":6,"id__str":"GO","name":"Go 1.11.6"},{"id":20,"id__str":"GROOVY","name":"Groovy"},{"id":12,"id__str":"HASKELL","name":"Haskell (GHC)"},{"helper_text":"Please name your main class \"Solution\" (uppercase S) and do not declare a package.","id":4,"id__str":"JAVA","name":"Java 11 (OpenJDK)"},{"id":10,"id__str":"JAVASCRIPT","name":"JavaScript (Node.js)"},{"id":29,"id__str":"JULIA","name":"Julia"},{"id":22,"id__str":"KOTLIN","name":"Kotlin"},{"id":23,"id__str":"LISP","name":"Lisp (SBCL)"},{"id":30,"id__str":"LUA","name":"Lua"},{"id":18,"id__str":"OCAML","name":"OCaml"},{"id":31,"id__str":"OBJECTIVEC","name":"Objective-C (GNU)"},{"id":15,"id__str":"OCTAVE","name":"Octave"},{"id":9,"id__str":"PHP","name":"PHP"},{"id":21,"id__str":"PASCAL","name":"Pascal (FPC)"},{"id":14,"id__str":"PERL","name":"Perl"},{"id":34,"id__str":"PYPY3","name":"PyPy 3"},{"id":7,"id__str":"PYTHON3","name":"Python 3.7"},{"id":25,"id__str":"R","name":"R"},{"id":8,"id__str":"RUBY","name":"Ruby"},{"id":17,"id__str":"RUST","name":"Rust"},{"helper_text":"Please name your main class \"Solution\" (uppercase S).","id":13,"id__str":"SCALA","name":"Scala"},{"id":16,"id__str":"SWIFT","name":"Swift"},{"id":33,"id__str":"TYPESCRIPT","name":"TypeScript (Node.js)"},{"id":27,"id__str":"VISUALBASIC","name":"Visual Basic (Mono)"}]}
