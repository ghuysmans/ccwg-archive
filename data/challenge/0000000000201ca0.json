{"challenge":{"announcements":[],"are_results_final":true,"end_ms":1478419200000,"hide_scoreboard":false,"hide_scoreboard_config":{},"id":"0000000000201ca0","is_practice_available":true,"my_user_type":1,"my_user_type__str":"SPECTATOR","recap":"","registration_gives_participant":false,"result_status":30,"result_status__str":"FINALIZED","start_ms":1478404800000,"tasks":[{"analysis":"\n  <div class=\"test-data-download-wrapper\">\n    <div class=\"test-data-download-header\">\n      <div class=\"test-data-download-header-text\">Test Data</div>\n      <div class=\"test-data-download-header-download-button\">\n        <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U0aBJX4V-pPvi2wgazNs_7kaUHzWfdue8UCAx0hsvbE_e4WZsQG7mNoqjcjVwHBRoEOXWDaR2mu/test_data.zip?dl=1\" target=\"_blank\">\n          <i class=\"material-icons grey\">save_alt</i>\n        </a>\n      </div>\n    </div>\n    <div class=\"test-data-download-content\">\n      <div class=\"test-data-download-warning\">\n        <span class=\"material-icons\" style=\"color: grey; vertical-align: middle;\">info</span>\n        <span style=\"vertical-align: middle;\">We recommend that you practice debugging solutions without looking at the test data.</span>\n      </div>\n    </div>\n  </div>\n\n","id":"0000000000201c08","statement":"<h3>Problem</h3>\n\n<p>\nShekhu has <b>N</b> balls. She wants to distribute them among one or more buckets in a way that satisfies all of these constraints:\n</p>\n<ol>\n<li>The numbers of balls in the buckets must be in non-decreasing order when read from left to right.</li>\n<li>The leftmost bucket must be non-empty and the number of balls in the leftmost bucket must be divisible by <b>D</b>.</li>\n<li>The difference (in number of balls) between <i>any</i> two buckets (not just any two adjacent buckets) must be less than or equal to 2.</li>\n</ol>\n<p>\nHow many different ways are there for Shekhu to do this? Two ways are considered different if the lists of numbers of balls in buckets, reading left to right, are different.\n</p>\n\n<h3>Input</h3>\n<p>\nThe first line of the input gives the number of test cases, <b>T</b>.<br/>\n<b>T</b> test cases follow. Each test case consists of one line with two integers <b>N</b> and <b>D</b>, as described above.\n</p>\n\n<h3>Output</h3>\n<p>\nFor each test case, output one line containing <code>Case #x: y</code>, where <code>x</code> is the test case number (starting from 1) and <code>y</code> is the answer, as described above.\n</p>\n\n<h3>Limits</h3>\n<p>\n1 &le; <b>T</b> &le; 100.<br/>\nTime limit: 30 seconds per test set.<br/>\nMemory limit: 1GB.<br/>\n1 &le; <b>D</b> &le; 100.<br/>\n</p>\n\n<h4>Small dataset (Test set 1 - Visible)</h4>\n<p>\n1 &le; <b>N</b> &le; 2000.<br/>\n</p>\n\n<h4>Large dataset (Test set 2 - Hidden)</h4>\n<p>\n1 &le; <b>N</b> &le; 10<sup>5</sup>.<br/>\n</p>\n\n\n  <h3>Sample</h3>\n  <div class=\"problem-io-wrapper-new\">\n    <div class=\"sampleio-wrapper\">\n      <div class=\"sample-input\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Input</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U1KniyHy0hD1mmTUGIrVlE1r5vcFabQ-WjSitXKfMQVI78SsTgjLSYkyCyMaMjd9xwXxqhYoR4VW5Oc22Pxg1Q-mZ5Y4nV6wmXQkNjr1lsodA/partioning_number_sample_ts1_input.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_input_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_input_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_input_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_input_0\">3\n7 1\n7 2\n2 4</pre>\n        </div>\n      </div>\n      <div class=\"sample-output\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Output</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U3Jv9PtbwnmO_Y8YjI3edjXGIJe66f_OPmPFoZeTAy6ZLFPV8gsgvEClb8RV4OS0gRCpKglHkO8yf8eRSyCvrnMPhFQTPndLYyEf4Z3bdp8LeQ/partioning_number_sample_ts1_output.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_output_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_output_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_output_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_output_0\">Case #1: 10\nCase #2: 1\nCase #3: 0</pre>\n        </div>\n      </div>\n    </div>\n  </div>\n\n\n<p>\nIn sample case #1, the possible distributions are:\n</p>\n<ul>\n<li>1 1 1 1 1 1 1</li>\n<li>1 1 1 1 1 2</li>\n<li>1 1 1 1 3</li>\n<li>1 1 1 2 2</li>\n<li>1 2 2 2</li>\n<li>1 1 2 3</li>\n<li>1 3 3</li>\n<li>2 2 3</li>\n<li>3 4</li>\n<li>7</li>\n</ul>\n<p>\nNote that 1 2 4 is not a valid distribution, since the difference between 1 and 4 is more than 2.\n</p>\n\n\n<p>\nIn sample case #2, the possible distributions are:\n</p>\n<ul>\n  <li>2 2 3</li>\n</ul>\n<p>\n3 4 is not possible, since the first term is not divisible by 2.\n</p>\n\n<p>\nIn sample case #3, no possible arrangement exists.\n</p>\n","task_type":1,"task_type__str":"CODE_JAM","tests":[{"type":1,"type__str":"VISIBLE","value":9},{"type":2,"type__str":"HIDDEN","value":17}],"title":"Partioning Number","trial_input_type":1,"trial_input_type__str":"TEXT_FILE"},{"analysis":"\n  <div class=\"test-data-download-wrapper\">\n    <div class=\"test-data-download-header\">\n      <div class=\"test-data-download-header-text\">Test Data</div>\n      <div class=\"test-data-download-header-download-button\">\n        <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U13Om8wrHogmpmOf10O5-5E4GpTiwCDwFLOo1nMtSuwNrO76Y4LcBb55HAkONIuhMwykg6NMM8Y/test_data.zip?dl=1\" target=\"_blank\">\n          <i class=\"material-icons grey\">save_alt</i>\n        </a>\n      </div>\n    </div>\n    <div class=\"test-data-download-content\">\n      <div class=\"test-data-download-warning\">\n        <span class=\"material-icons\" style=\"color: grey; vertical-align: middle;\">info</span>\n        <span style=\"vertical-align: middle;\">We recommend that you practice debugging solutions without looking at the test data.</span>\n      </div>\n    </div>\n  </div>\n\n","id":"0000000000201ca1","statement":"<h3>Problem</h3>\n<p>\nWe are in the process of creating a somehow esoteric sorting algorithm to sort an array A of all integers between 1 and <b>N</b>. The integers in A can start in an arbitrary order. Besides the input order, the algorithm depends on two integers <b>P</b>(which would be at most 3) and <b>K</b>. Here is how the algorithms works:\n</p><ol>\n<li> Partition A into <b>K</b> disjoint non-empty subarrays A<sub>1</sub>, A<sub>2</sub>, ..., A<sub><i>K</i></sub> such that such that concatenating them in order A<sub>1</sub>A<sub>2</sub> ... A<sub><i>K</i></sub> produces A. </li>\n<li> Sort each subarray individually. </li>\n<li> Choose up to <b>P</b> of the subarrays, and swap any two of them any number of times. </li>\n</ol>\n\n<p>\nFor example, consider A = [1 5 4 3 2] and <b>P</b> = 2. A possible partition into <b>K</b> = 4 disjoint subarrays is:<br/>\n<pre>\nA<sub><i>1</i></sub> = [1]\nA<sub><i>2</i></sub> = [5]\nA<sub><i>3</i></sub> = [4]\nA<sub><i>4</i></sub> = [3 2]\n\nAfter Sorting Each Subarray:<br/>\nA<sub><i>1</i></sub> = [1]\nA<sub><i>2</i></sub> = [5]\nA<sub><i>3</i></sub> = [4]\nA<sub><i>4</i></sub> = [2 3]\n\nAfter swapping A<sub><i>4</i></sub> and A<sub><i>2</i></sub>:<br/>\nA<sub><i>1</i></sub> = [1]\nA<sub><i>2</i></sub> = [2 3]\nA<sub><i>3</i></sub> = [4]\nA<sub><i>4</i></sub> = [5]\n</pre>\n</p>\n\n<p>\nWe want to show the algorithm is good for distributed environments by finding, for a fixed input and value of <b>P</b>, the maximum number of partitions <b>K</b> such that, choosing the partitions and swaps wisely, we can achieve a sorting of the original order. Can you help us to calculate that <b>K</b>?\n</p>\n\n\n<h3>Input</h3>\n<p>\nThe first line of the input gives the number of test cases, <b>T</b>.<br/>\n<b>T</b> test cases follow. Each test case consists of two lines. The first line contains two integers <b>N</b> and <b>P</b>, as described above.<br/>\nThe second line of the test case contains <b>N</b> integers <b>X<sub>1</sub></b>, <b>X<sub>2</sub></b>, ..., <b>X<sub>N</sub></b> represting array A.<br/>\n</p>\n\n\n<h3>Output</h3>\n<p>\nFor each test case, output one line containing <code>Case #x: y</code>, where <code>x</code> is the test case number (starting from 1) and <code>y</code> is the maximum possible value for the parameter <b>K</b>.\n</p>\n\n<h3>Limits</h3>\n<p>\n1 &le; <b>T</b> &le; 100.<br/>\nTime limit: 40 seconds per test set.<br/>\nMemory limit: 1GB.<br/>\n1 &le; <b>N</b> &le; 5000.<br/>\n1 &le; <b>X</b><sub>i</sub> &le; <b>N</b>, for all i.<br/>\n<b>X</b><sub>i</sub> &ne; <b>X</b><sub>j</sub> for all i &ne; j.<br>\n</p>\n\n<h4>Small dataset (Test set 1 - Visible)</h4>\n<p>\n<b>P</b> = 2.<br/>\n</p>\n\n<h4>Large dataset (Test set 2 - Hidden)</h4>\n<p>\n<b>P</b> = 3.<br/>\n</p>\n\n\n\n  <h3>Sample</h3>\n  <div class=\"problem-io-wrapper-new\">\n    <div class=\"sampleio-wrapper\">\n      <div class=\"sample-input\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Input</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U2oBoPbL4ey-jELKdhUgQk0zTsb-iIIabbFATs5g8wzanW9II-3B6Cnc8LCk05Bi0hvVXqanuppxseQ-kihzk6wKEmYeOk-Wctv6Esq/sorting_array_sample_ts1_input.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_input_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_input_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_input_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_input_0\">5\n5 2\n1 5 4 3 2\n5 2\n4 5 1 2 3\n6 2\n6 3 5 2 4 1\n5 3\n4 5 1 2 3\n6 3\n1 2 6 4 5 3\n</pre>\n        </div>\n      </div>\n      <div class=\"sample-output\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Output</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U2UEu__Ry16_fWPvPykbmtUoas81fTTTnSsKrB_jqM-gEHNtcbxXrWv0mTx6iGmojC-SEkGLvt0Y-ORqvCTVXqAKoBKxKlvYrM89SUS2A/sorting_array_sample_ts1_output.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_output_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_output_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_output_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_output_0\">Case #1: 4\nCase #2: 2\nCase #3: 3\nCase #4: 3\nCase #5: 6\n</pre>\n        </div>\n      </div>\n    </div>\n  </div>\n\n<p>\nCase #1:<br>\n  Same as walk through in the statement.\n</p>\n\n<p>\nCase #2:<br>\n  [4 5] [1 2 3]<br>\n  Swap the 2 blocks: [1 2 3] [4 5]<br>\n</p>\n\n<p>\nCase #3:<br>\n  [6] [3 5 2 4] [1]<br>\n  Sort [3 5 2 4], then swap [6] and [1], we get: [1] [2 3 4 5] [6]<br>\n</p>\n\n<p>\nCase #4:<br>\n  [4 5] [1] [2 3]<br>\n  Swap [4 5] and [1], then swap [2 3] and [4 5]: [1] [2 3] [4 5]<br>\n</p>\n\n<p>\nCase #5:<br>\n  [1] [2] [6] [4] [5] [3]<br>\n  Swap [6] and [3]: [1] [2] [3] [4] [5] [6]<br>\n</p>\n\n<p>\n<b>Note:</b> First 3 sample cases would not appear in the Large dataset and the last 2 sample cases would not appear in the Small dataset.<br>\n</p>\n","task_type":1,"task_type__str":"CODE_JAM","tests":[{"type":1,"type__str":"VISIBLE","value":13},{"type":2,"type__str":"HIDDEN","value":27}],"title":"Sorting Array","trial_input_type":1,"trial_input_type__str":"TEXT_FILE"},{"analysis":"\n  <div class=\"test-data-download-wrapper\">\n    <div class=\"test-data-download-header\">\n      <div class=\"test-data-download-header-text\">Test Data</div>\n      <div class=\"test-data-download-header-download-button\">\n        <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U3wFPJV9foWV8L0I7GU9BqSDzN3FaxHDhxCh2Sg8MzkuoFG_RWWZ8NtDk5JKmeBct1gPZxjuCre/test_data.zip?dl=1\" target=\"_blank\">\n          <i class=\"material-icons grey\">save_alt</i>\n        </a>\n      </div>\n    </div>\n    <div class=\"test-data-download-content\">\n      <div class=\"test-data-download-warning\">\n        <span class=\"material-icons\" style=\"color: grey; vertical-align: middle;\">info</span>\n        <span style=\"vertical-align: middle;\">We recommend that you practice debugging solutions without looking at the test data.</span>\n      </div>\n    </div>\n  </div>\n\n","id":"0000000000201d2f","statement":"<h3>Problem</h3>\n\n<p>\nDiwali is the festival of lights. To celebrate it, people decorate their houses with multi-color lights and burst crackers. Everyone loves Diwali, and so does Pari. Pari is very fond of lights, and has transfinite powers, so she buys an infinite number of red and blue light bulbs. As a programmer, she also loves patterns, so she arranges her lights by infinitely repeating a given finite pattern <b>S</b>.\n</p><p>\nFor example, if <b>S</b> is <code>BBRB</code>, the infinite sequence Pari builds would be <code>BBRBBBRBBBRB...</code>\n</p>\n<p>\nBlue is Pari's favorite color, so she wants to know the number of blue bulbs between the <b>I</b>th bulb and <b>J</b>th bulb, inclusive, in the infinite sequence she built (lights are numbered with consecutive integers starting from 1). In the sequence above, the indices would be numbered as follows:\n</p><pre>\nB  B  R  B  B  B  R  B  B  B  R  B...\n1  2  3  4  5  6  7  8  9  10 11 12\n</pre><p>\nSo, for example, there are 4 blue lights between the 4th and 8th positions, but only 2 between the 10th and 12th.\n</p><p>\nSince the sequence can be very long, she wrote a program to do the count for her. Can you do the same?\n</p>\n\n<h3>Input</h3>\n<p>\nThe first line of the input gives the number of test cases, <b>T</b>. <b>T</b> test cases follow.</br>First line of each test case consists of a string S, denoting the initial finite pattern.</br>\nSecond line of each test case consists of two space separated integers <b>I</b> and <b>J</b>, defined above.\n</p>\n\n<h3>Output</h3>\n<p>\nFor each test case, output one line containing <code>Case #x: y</code>, where <code>x</code> is the test case number (starting from 1) and <code>y</code> is number of blue bulbs between the <b>I</b>th bulb and <b>J</b>th bulb of Pari's infinite sequence, inclusive.\n</p>\n\n<h3>Limits</h3>\n<p>\n1 &le; <b>T</b> &le; 100.<br/>\nTime limit: 30 seconds per test set.<br/>\nMemory limit: 1GB.<br/>\n1 &le; length of <b>S</b> &le; 100.<br/>\nEach character of <b>S</b> is either uppercase <code>B</code> or uppercase <code>R</code>.\n</p>\n\n<h4>Small dataset (Test set 1 - Visible)</h4>\n<p>\n1 &le; <b>I</b> &le; <b>J</b> &le; 10<sup>6</sup>.<br/>\n</p>\n\n<h4>Large dataset (Test set 2 - Hidden)</h4>\n<p>\n1 &le; <b>I</b> &le; <b>J</b> &le; 10<sup>18</sup>.<br/>\n</p>\n\n\n  <h3>Sample</h3>\n  <div class=\"problem-io-wrapper-new\">\n    <div class=\"sampleio-wrapper\">\n      <div class=\"sample-input\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Input</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U0WSUN10qkCKiQHfpcNhJvDj4h7FpeKghd1Jym9gvWbGF9uO-0bYuSaf0TdnBQr1jSW0QJUHoxc6wyDRm-kVtDJRUHwFYPhxqhqqpHIvsNL/diwali_lightings_sample_ts1_input.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_input_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_input_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_input_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_input_0\">3\nBBRB\n4 8\nBBRB\n10 12\nBR\n1 1000000</pre>\n        </div>\n      </div>\n      <div class=\"sample-output\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Output</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U1-Du6OiXNUR9t18X2PtPZlnQzlBJiZ49s6tTczvj11rbp39MDmM16VRslUgl9Gt-lsWdiTZh3eRxtpQM8dKIlmDUwuik8aCy4dIwbT9iiyqQ/diwali_lightings_sample_ts1_output.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_output_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_output_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_output_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_output_0\">Case #1: 4\nCase #2: 2\nCase #3: 500000</pre>\n        </div>\n      </div>\n    </div>\n  </div>\n\n<p>\nCases #1 and #2 are explained above.\n</p>\n<p>\nIn Case #3, bulbs at odd indices are always blue, and bulbs at even indices are always red, so there are half a million blue bulbs between positions 1 and 10<sup>6</sup>.\n</p>\n\n","task_type":1,"task_type__str":"CODE_JAM","tests":[{"type":1,"type__str":"VISIBLE","value":5},{"type":2,"type__str":"HIDDEN","value":8}],"title":"Diwali lightings","trial_input_type":1,"trial_input_type__str":"TEXT_FILE"},{"analysis":"\n  <div class=\"test-data-download-wrapper\">\n    <div class=\"test-data-download-header\">\n      <div class=\"test-data-download-header-text\">Test Data</div>\n      <div class=\"test-data-download-header-download-button\">\n        <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U3v9EnGdS-VxA8-2PFwgTvGGLMzM08Uac-p9ebhuArOWbVyJjX6WvuCB5W8IsXDPjywR3Aqk_kd/test_data.zip?dl=1\" target=\"_blank\">\n          <i class=\"material-icons grey\">save_alt</i>\n        </a>\n      </div>\n    </div>\n    <div class=\"test-data-download-content\">\n      <div class=\"test-data-download-warning\">\n        <span class=\"material-icons\" style=\"color: grey; vertical-align: middle;\">info</span>\n        <span style=\"vertical-align: middle;\">We recommend that you practice debugging solutions without looking at the test data.</span>\n      </div>\n    </div>\n  </div>\n\n","id":"0000000000201dba","statement":"<h3>Problem</h3>\n<p>\nWe consider a number to be <i>beautiful</i> if it consists only of the digit 1 repeated one or more times. Not all numbers are beautiful, but we can make any base 10 positive integer beautiful by writing it in another base.\n</p><p>\nGiven an integer <b>N</b>, can you find a base <i>B</i> (with <i>B</i> &gt; 1) to write it in such that all of its digits become 1? If there are multiple bases that satisfy this property, choose the one that maximizes the number of 1 digits.\n</p>\n\n<h3>Input</h3>\n<p>\nThe first line of the input gives the number of test cases, <b>T</b>. <b>T</b> test cases follow. Each test case consists of one line with an integer <b>N</b>.\n</p>\n\n<h3>Output</h3>\n<p>\nFor each test case, output one line containing <code>Case #x: y</code>, where <code>x</code> is the test case number (starting from 1) and <code>y</code> is the base described in the problem statement.\n</p>\n\n<h3>Limits</h3>\n<p>\n1 &le; <b>T</b> &le; 100.<br/>\nTime limit: 30 seconds per test set.<br/>\nMemory limit: 1GB.<br/>\n</p>\n\n<h4>Small dataset (Test set 1 - Visible)</h4>\n<p>\n3 &le; <b>N</b> &le; 1000.<br/>\n</p>\n\n<h4>Large dataset (Test set 2 - Hidden)</h4>\n<p>\n3 &le; <b>N</b> &le; 10<sup>18</sup>.<br/>\n</p>\n\n\n  <h3>Sample</h3>\n  <div class=\"problem-io-wrapper-new\">\n    <div class=\"sampleio-wrapper\">\n      <div class=\"sample-input\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Input</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U2DtRG2WNxUioN51dr8dOVk5_OpnJqZucf4iR3oYr5mhQbnG984Dl6U3TlBYN2ltE4o1pNJQLfqoA2Mk6dffEcBDFw2wRkFl4xwXsoCiBRHJw/beautiful_numbers_sample_ts1_input.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_input_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_input_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_input_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_input_0\">2\n3\n13\n</pre>\n        </div>\n      </div>\n      <div class=\"sample-output\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Output</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U3afYh77LhykxGATtmPCB-5j5mxNTL-NT039Eel3dluUrHzyoar20KApR7Yy8hnDDm61weXvgYn8iaAqKz36S7OOoq4tUQw4s1qhYrSqOGADos/beautiful_numbers_sample_ts1_output.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_output_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_output_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_output_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_output_0\">Case #1: 2\nCase #2: 3\n</pre>\n        </div>\n      </div>\n    </div>\n  </div>\n\n\n<p>\nIn case #1, the optimal solution is to write 3 as 11 in base 2.\n</p><p>\nIn case #2, the optimal solution is to write 13 as 111 in base 3. Note that we could also write 13 as 11 in base 12 or as 1 in base 13, but neither of those representations has as many 1s.\n</p>\n","task_type":1,"task_type__str":"CODE_JAM","tests":[{"type":1,"type__str":"VISIBLE","value":6},{"type":2,"type__str":"HIDDEN","value":15}],"title":"Beautiful Numbers","trial_input_type":1,"trial_input_type__str":"TEXT_FILE"}],"ticket":{"challenge_id":"0000000000201ca0","type":1,"type__str":"SPECTATOR"},"title":"Round E 2016"},"languages":[{"id":1,"id__str":"BASH","name":"Bash"},{"id":2,"id__str":"C","name":"C (GCC)"},{"id":11,"id__str":"CSHARP","name":"C# (Mono)"},{"id":3,"id__str":"CPP","name":"C++17 (G++)"},{"id":19,"id__str":"CLOJURE","name":"Clojure"},{"id":24,"id__str":"D","name":"D (GDC)"},{"id":32,"id__str":"DART","name":"Dart"},{"id":28,"id__str":"FSHARP","name":"F# (Mono)"},{"id":6,"id__str":"GO","name":"Go 1.11.6"},{"id":20,"id__str":"GROOVY","name":"Groovy"},{"id":12,"id__str":"HASKELL","name":"Haskell (GHC)"},{"helper_text":"Please name your main class \"Solution\" (uppercase S) and do not declare a package.","id":4,"id__str":"JAVA","name":"Java 11 (OpenJDK)"},{"id":10,"id__str":"JAVASCRIPT","name":"JavaScript (Node.js)"},{"id":29,"id__str":"JULIA","name":"Julia"},{"id":22,"id__str":"KOTLIN","name":"Kotlin"},{"id":23,"id__str":"LISP","name":"Lisp (SBCL)"},{"id":30,"id__str":"LUA","name":"Lua"},{"id":18,"id__str":"OCAML","name":"OCaml"},{"id":31,"id__str":"OBJECTIVEC","name":"Objective-C (GNU)"},{"id":15,"id__str":"OCTAVE","name":"Octave"},{"id":9,"id__str":"PHP","name":"PHP"},{"id":21,"id__str":"PASCAL","name":"Pascal (FPC)"},{"id":14,"id__str":"PERL","name":"Perl"},{"id":34,"id__str":"PYPY3","name":"PyPy 3"},{"id":7,"id__str":"PYTHON3","name":"Python 3.7"},{"id":25,"id__str":"R","name":"R"},{"id":8,"id__str":"RUBY","name":"Ruby"},{"id":17,"id__str":"RUST","name":"Rust"},{"helper_text":"Please name your main class \"Solution\" (uppercase S).","id":13,"id__str":"SCALA","name":"Scala"},{"id":16,"id__str":"SWIFT","name":"Swift"},{"id":33,"id__str":"TYPESCRIPT","name":"TypeScript (Node.js)"},{"id":27,"id__str":"VISUALBASIC","name":"Visual Basic (Mono)"}]}
