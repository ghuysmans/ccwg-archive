{"challenge":{"announcements":[],"are_results_final":true,"end_ms":1488700800000,"hide_scoreboard":false,"hide_scoreboard_config":{},"id":"0000000000201c97","is_practice_available":true,"my_user_type":1,"my_user_type__str":"SPECTATOR","recap":"","registration_gives_participant":false,"result_status":30,"result_status__str":"FINALIZED","start_ms":1488690000000,"tasks":[{"analysis":"\n  <div class=\"test-data-download-wrapper\">\n    <div class=\"test-data-download-header\">\n      <div class=\"test-data-download-header-text\">Test Data</div>\n      <div class=\"test-data-download-header-download-button\">\n        <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U3RoKY9bFt3DQXroLiF1FSTxU2RXqYdG121p7AA32YtjV5JbZcj1BxcVH_R76sHWwmtmpPTDUVY/test_data.zip?dl=1\" target=\"_blank\">\n          <i class=\"material-icons grey\">save_alt</i>\n        </a>\n      </div>\n    </div>\n    <div class=\"test-data-download-content\">\n      <div class=\"test-data-download-warning\">\n        <span class=\"material-icons\" style=\"color: grey; vertical-align: middle;\">info</span>\n        <span style=\"vertical-align: middle;\">We recommend that you practice debugging solutions without looking at the test data.</span>\n      </div>\n    </div>\n  </div>\n\n","id":"0000000000201b79","statement":"<h3>Problem</h3>\n<p>\nAlice likes reading and buys a lot of books.  She stores her books in two boxes; each box is labeled with a pattern that matches the titles of all of the books stored in that box. A pattern consists of only uppercase/lowercase English alphabet letters and stars (<code>*</code>). A star can match between zero and four letters. For example, books with the titles <code>GoneGirl</code> and <code>GoneTomorrow</code> can be put in a box with the pattern <code>Gone**</code>, but books with the titles <code>TheGoneGirl</code>, <code>Gonetomorrow</code>, and <code>GoneWithTheWind</code> cannot.\n</p>\n<p>\nAlice is wondering whether there is any book that could be stored in either of the boxes. That is, she wonders if there is a title that matches both boxes' patterns.\n</p>\n\n<h3>Input</h3>\n<p>\nThe first line of the input gives the number of test cases, <b>T</b>. <b>T</b> test cases follow. Each consists of two lines; each line has one string in which each character is either an uppercase/lowercase English letter or <code>*</code>.\n</p>\n\n<h3>Output</h3>\n<p>\nFor each test case, output one line containing <code>Case #x: y</code>, where <code>x</code> is the test case number (starting from 1) and <code>y</code> is <code>TRUE</code> if there is a string that matches both patterns, or <code>FALSE</code> if not.\n</p>\n\n<h3>Limits</h3>\n<p>\n1 &le; <b>T</b> &le; 50.<br/>\nMemory limit: 1GB.<br/>\n</p>\n\n<h4>Small dataset (Test set 1 - Visible)</h4>\n<p>\nTime limit: 20 seconds.<br/>\n1 &le; the length of each pattern &le; 200.<br/>\nEach pattern contains at most 5 stars.<br/>\n</p>\n\n<h4>Large dataset (Test set 2 - Hidden)</h4>\n<p>\nTime limit: 40 seconds.<br/>\n1 &le; the length of each pattern &le; 2000.<br/>\n</p>\n\n\n  <h3>Sample</h3>\n  <div class=\"problem-io-wrapper-new\">\n    <div class=\"sampleio-wrapper\">\n      <div class=\"sample-input\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Input</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U3b5Tjb7oHZIEHKxoLtLlnvluV0gbeZGf6Suo6Xx44dKRu6HMxqJIP_BVHmLCyi-YetEk0MbK5gj_XauSYg61tjCQq6DVmEOtt0ldrbIkA/pattern_overlap_sample_ts1_input.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_input_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_input_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_input_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_input_0\">3\n****\nIt\nShakes*e\nS*speare\nShakes*e\n*peare\n</pre>\n        </div>\n      </div>\n      <div class=\"sample-output\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Output</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U137tw3TomSBb5WFMR61pQne4wYJtRZOP77kNNcEFTzUTSEHE4peRVMeQjjZ20GdRvbaUWVhOmBZTE6eXKkSm_5UJK-MC7-ADYn8ta4nPoQ/pattern_overlap_sample_ts1_output.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_output_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_output_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_output_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_output_0\">Case #1: TRUE\nCase #2: TRUE\nCase #3: FALSE\n\n</pre>\n        </div>\n      </div>\n    </div>\n  </div>\n\n\n<p>In sample case #1, the title <code>It</code> matches both patterns. Note that it is possible for a <code>*</code> to match zero characters.</p>\n<p>In sample case #2, the title <code>Shakespeare</code> matches both patterns.</p>\n<p>In sample case #3, there is no title that matches both patterns. <code>Shakespeare</code>, for example, does not work because the <code>*</code> at the start of the <code>*peare</code> pattern cannot match six letters.</p>\n","task_type":1,"task_type__str":"CODE_JAM","tests":[{"type":1,"type__str":"VISIBLE","value":13},{"type":2,"type__str":"HIDDEN","value":22}],"title":"Pattern Overlap","trial_input_type":1,"trial_input_type__str":"TEXT_FILE"},{"analysis":"\n  <div class=\"test-data-download-wrapper\">\n    <div class=\"test-data-download-header\">\n      <div class=\"test-data-download-header-text\">Test Data</div>\n      <div class=\"test-data-download-header-download-button\">\n        <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U1a7xeo4Aa6IE4bkvIwIDRDtfRVnUxzrz12UnwYeL07Z-AlmnXWOiPCn12lCni84X7Y5nFjE94d/test_data.zip?dl=1\" target=\"_blank\">\n          <i class=\"material-icons grey\">save_alt</i>\n        </a>\n      </div>\n    </div>\n    <div class=\"test-data-download-content\">\n      <div class=\"test-data-download-warning\">\n        <span class=\"material-icons\" style=\"color: grey; vertical-align: middle;\">info</span>\n        <span style=\"vertical-align: middle;\">We recommend that you practice debugging solutions without looking at the test data.</span>\n      </div>\n    </div>\n  </div>\n\n","id":"0000000000201bff","statement":"<h2>Problem</h2>\n\n<p>\n  \"Look at the stars, look how they shine for you.\"\n  - Coldplay, \"Yellow\"\n</p>\n<p>\n  In a galaxy far, far away, there are many stars. Each one is a sphere with a certain position\n  (in three-dimensional space) and radius. It is possible for stars to overlap each other.\n</p>\n<p>\n  The stars are so incredibly beautiful to you that you want to capture them forever! You would like\n  to build two cubes of the same integer edge length, and place them in space such that for each\n  star, there is at least one cube that <i>completely</i> contains it. (It's not enough for a star\n  to be completely contained by the union of the two cubes.) A star is completely contained by a\n  cube if no point on the star is outside the cube; a point exactly on a cube face is still\n  considered to be inside the cube.\n</p>\n<p>\n  The cubes can be placed anywhere in space, but they must be placed with their edges parallel to\n  the coordinate axes. It is acceptable for the cubes to overlap stars or each other.\n</p>\n<p>\n  What is the minimum integer edge length that allows you to achieve this goal?\n</p>\n\n<h3>Input</h3>\n\n<p>\n  The input starts with one line containing exactly one integer <b>T</b>, which is the number of\n  test cases. <b>T</b> test cases follow.\n</p>\n\n<p>\n  Each test case begins with a line containing an integer, <b>N</b>, representing the number of\n  stars.\n</p>\n<p>\n  This is followed by <b>N</b> lines. On the ith line, there are 4 space-separated integers,\n  <b>X<sub>i</sub></b>, <b>Y<sub>i</sub></b>, <b>Z<sub>i</sub></b> and <b>R<sub>i</sub></b>,\n  indicating the (X, Y, Z) coordinates of the center of the <b>i<sup>th</sup></b> star, and\n  the radius of the <b>i<sup>th</sup></b> star.\n</p>\n\n<h3>Output</h3>\n\n<p>\n  For each test case, output one line containing <code>Case #x: y</code>, where <code>x</code> is\n  the test case number (starting from 1) and <code>y</code> is the minimum cube edge length that\n  solves the problem, as described above.\n</p>\n\n<h3>Limits</h3>\n1 &le; <b>T</b> &le; 100.<br>\nTime limit: 20 seconds per test set.<br/>\nMemory limit: 1GB.<br/>\n-10<sup>8</sup> &le; <b>X<sub>i</sub></b> &le; 10<sup>8</sup>, for all i.<br/>\n-10<sup>8</sup> &le; <b>Y<sub>i</sub></b> &le; 10<sup>8</sup>, for all i.<br/>\n-10<sup>8</sup> &le; <b>Z<sub>i</sub></b> &le; 10<sup>8</sup>, for all i.<br/>\n1 &le; <b>R<sub>i</sub></b> &le; 10<sup>8</sup>, for all i.<br/>\n\n<h4>Small dataset (Test set 1 - Visible)</h4>\n2 &le; <b>N</b> &le; 16.<br>\n\n<h4>Large dataset (Test set 2 - Hidden)</h4>\n2 &le; <b>N</b> &le; 2000.<br>\n\n\n  <h3>Sample</h3>\n  <div class=\"problem-io-wrapper-new\">\n    <div class=\"sampleio-wrapper\">\n      <div class=\"sample-input\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Input</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U1dBNsLgFx6s5Drd2CSHFm8i_2IrfRZVcltHhjsWIq1HeVOHNf8mD9IOqX3MklFTkj984oeg9lD_MKGBaY5pEbqidJtUu8Bttk/two_cubes_sample_ts1_input.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_input_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_input_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_input_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_input_0\">3\n3\n1 1 1 1\n2 2 2 1\n4 4 4 1\n3\n1 1 1 2\n2 3 4 1\n5 6 7 1\n3\n1 1 1 1\n1 1 1 1\n9 9 9 1\n</pre>\n        </div>\n      </div>\n      <div class=\"sample-output\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Output</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U3_VCnm4XVVLH-hC5qlHn9oWR1N7t1ycvDNitO8WbXe2SGSODH5iyUXQZVZaQrC9PsvvPtEyd4yrYeQRpf_cki027Q9ec469XrF/two_cubes_sample_ts1_output.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_output_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_output_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_output_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_output_0\">Case #1: 3\nCase #2: 5\nCase #3: 2</pre>\n        </div>\n      </div>\n    </div>\n  </div>\n\n<p>\n  In the first test case, one solution is to place two cubes with an edge length of 3 such that\n  their corners with minimum (x, y, z) coordinates are at (0, 0, 0) and (3, 3, 3).<br>\n  In the second test case, one solution is to place two cubes with an edge length of 5 such that\n  their corners with minimum (x, y, z) coordinates are at (-1, -1, -1) and (1, 2, 3).\n</p>\n","task_type":1,"task_type__str":"CODE_JAM","tests":[{"type":1,"type__str":"VISIBLE","value":14},{"type":2,"type__str":"HIDDEN","value":26}],"title":"Two Cubes","trial_input_type":1,"trial_input_type__str":"TEXT_FILE"},{"analysis":"\n  <div class=\"test-data-download-wrapper\">\n    <div class=\"test-data-download-header\">\n      <div class=\"test-data-download-header-text\">Test Data</div>\n      <div class=\"test-data-download-header-download-button\">\n        <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U1H7xkJ1RHO5Cd09IKwxUbJHy3qtbRAqVRhUzoGyNKqzUuEnl5h_j6vECzcxb0hkX_SkKiOfrYe/test_data.zip?dl=1\" target=\"_blank\">\n          <i class=\"material-icons grey\">save_alt</i>\n        </a>\n      </div>\n    </div>\n    <div class=\"test-data-download-content\">\n      <div class=\"test-data-download-warning\">\n        <span class=\"material-icons\" style=\"color: grey; vertical-align: middle;\">info</span>\n        <span style=\"vertical-align: middle;\">We recommend that you practice debugging solutions without looking at the test data.</span>\n      </div>\n    </div>\n  </div>\n\n","id":"0000000000201d25","statement":"<h3>Problem</h3>\n<p>\nMr. Panda has recently fallen in love with a new game called Square Off, in which players compete to find as many different squares as possible on an evenly spaced rectangular grid of dots. To find a square, a player must identify four dots that form the vertices of a square. Each side of the square must have the same length, of course, but it does not matter what that length is, and the square does not necessarily need to be aligned with the axes of the grid. The player earns one point for every different square found in this way. Two squares are different if and only if their sets of four dots are different.<br/>\n<br/>\nMr. Panda has just been given a grid with <b>R</b> rows and <b>C</b> columns of dots. How many different squares can he find in this grid? Since the number might be very large, please output the answer modulo 10<sup>9</sup> + 7 (1000000007).<br/>\n<br/>\n</p>\n\n<h3>Input</h3>\n<p>\nThe first line of the input gives the number of test cases, <b>T</b>. <b>T</b> lines follow. Each line has two integers <b>R</b> and <b>C</b>: the number of dots in each row and column of the grid, respectively.<br/>\n</p>\n\n<h3>Output</h3>\n<p>\nFor each test case, output one line containing <code>Case #x: y</code>, where <code>x</code> is the test case number (starting from 1) and <code>y</code> is the number of different squares can be found in the grid.<br/>\n</p>\n\n<h3>Limits</h3>\n<p>\n1 &le; <b>T</b> &le; 100.<br/>\nTime limit: 20 seconds per test set.<br/>\nMemory limit: 1GB.<br/>\n</p>\n\n<h4>Small dataset (Test set 1 - Visible)</h4>\n<p>\n2 &le; <b>R</b> &le; 1000.<br/>\n2 &le; <b>C</b> &le; 1000.<br/>\n</p>\n\n<h4>Large dataset (Test set 2 - Hidden)</h4>\n<p>\n2 &le; <b>R</b> &le; 10<sup>9</sup>.<br/>\n2 &le; <b>C</b> &le; 10<sup>9</sup>.<br/>\n</p>\n\n\n  <h3>Sample</h3>\n  <div class=\"problem-io-wrapper-new\">\n    <div class=\"sampleio-wrapper\">\n      <div class=\"sample-input\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Input</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U3i6F8HMKhsyim-Jb3M4Tf_VTf_4yyFd8Ap-ABx4SZARN2k2MudrKo2F2WeLRDrW11tMcn7B4ZxX0AaKrUQSZEJakkD4sIyHP8cwbTSHyE/square_counting_sample_ts1_input.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_input_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_input_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_input_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_input_0\">4\n2 4\n3 4\n4 4\n1000 500\n</pre>\n        </div>\n      </div>\n      <div class=\"sample-output\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Output</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U2cuPpU3QF7wQPCoKHmcXDWBu1jjfZpaOdIkn6QvdKfgLvUOuoMpSjZBUynxMktonUOGT6JhJOmz0D7uj0OrnzofOx1VGDlxKTD2k9YHXVK/square_counting_sample_ts1_output.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_output_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_output_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_output_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_output_0\">Case #1: 3\nCase #2: 10\nCase #3: 20\nCase #4: 624937395\n</pre>\n        </div>\n      </div>\n    </div>\n  </div>\n\n\n<p>\nThe pictures below illustrate the grids from the three sample cases and a valid square in the third sample case.\n</p>\n<table>\n  <tr>\n    <td><img src=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U1HjNaDgO_okzsjGaVqIGPyv1vRoIk_NjRDwXt8VU0tuRt7vj4j9pzFEk_6T8JnRg06T_hMjg/sample1.png\"/></td>\n    <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\n    <td><img src=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U3Y8sbDM45OjJJUQG206yrCnlfBetnlgDMhOkusPyamvvjVzKKMIiYkC2ZoGH50-rCF7DNP6g/sample2.png\"/></td>\n    <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\n    <td><img src=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U0goeAcJtZEdThYJ82c38eYyXPBhxwzLwAI7bk5wn7PFhLQ9lUb0kHAWRjaXTQ_r_sFxGKkSQ/sample3.png\"/></td>\n  </tr>\n</table>\n","task_type":1,"task_type__str":"CODE_JAM","tests":[{"type":1,"type__str":"VISIBLE","value":8},{"type":2,"type__str":"HIDDEN","value":17}],"title":"Square Counting","trial_input_type":1,"trial_input_type__str":"TEXT_FILE"}],"ticket":{"challenge_id":"0000000000201c97","type":1,"type__str":"SPECTATOR"},"title":"Round A 2017"},"languages":[{"id":1,"id__str":"BASH","name":"Bash"},{"id":2,"id__str":"C","name":"C (GCC)"},{"id":11,"id__str":"CSHARP","name":"C# (Mono)"},{"id":3,"id__str":"CPP","name":"C++17 (G++)"},{"id":19,"id__str":"CLOJURE","name":"Clojure"},{"id":24,"id__str":"D","name":"D (GDC)"},{"id":32,"id__str":"DART","name":"Dart"},{"id":28,"id__str":"FSHARP","name":"F# (Mono)"},{"id":6,"id__str":"GO","name":"Go 1.11.6"},{"id":20,"id__str":"GROOVY","name":"Groovy"},{"id":12,"id__str":"HASKELL","name":"Haskell (GHC)"},{"helper_text":"Please name your main class \"Solution\" (uppercase S) and do not declare a package.","id":4,"id__str":"JAVA","name":"Java 11 (OpenJDK)"},{"id":10,"id__str":"JAVASCRIPT","name":"JavaScript (Node.js)"},{"id":29,"id__str":"JULIA","name":"Julia"},{"id":22,"id__str":"KOTLIN","name":"Kotlin"},{"id":23,"id__str":"LISP","name":"Lisp (SBCL)"},{"id":30,"id__str":"LUA","name":"Lua"},{"id":18,"id__str":"OCAML","name":"OCaml"},{"id":31,"id__str":"OBJECTIVEC","name":"Objective-C (GNU)"},{"id":15,"id__str":"OCTAVE","name":"Octave"},{"id":9,"id__str":"PHP","name":"PHP"},{"id":21,"id__str":"PASCAL","name":"Pascal (FPC)"},{"id":14,"id__str":"PERL","name":"Perl"},{"id":34,"id__str":"PYPY3","name":"PyPy 3"},{"id":7,"id__str":"PYTHON3","name":"Python 3.7"},{"id":25,"id__str":"R","name":"R"},{"id":8,"id__str":"RUBY","name":"Ruby"},{"id":17,"id__str":"RUST","name":"Rust"},{"helper_text":"Please name your main class \"Solution\" (uppercase S).","id":13,"id__str":"SCALA","name":"Scala"},{"id":16,"id__str":"SWIFT","name":"Swift"},{"id":33,"id__str":"TYPESCRIPT","name":"TypeScript (Node.js)"},{"id":27,"id__str":"VISUALBASIC","name":"Visual Basic (Mono)"}]}
