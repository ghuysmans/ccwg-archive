{"challenge":{"announcements":[],"are_results_final":true,"end_ms":1415520000000,"hide_scoreboard":false,"hide_scoreboard_config":{},"id":"0000000000434b3e","is_practice_available":true,"my_user_type":1,"my_user_type__str":"SPECTATOR","recap":"","registration_gives_participant":false,"result_status":30,"result_status__str":"FINALIZED","start_ms":1415509200000,"tasks":[{"analysis":"\n  <div class=\"test-data-download-wrapper\">\n    <div class=\"test-data-download-header\">\n      <div class=\"test-data-download-header-text\">Test Data</div>\n      <div class=\"test-data-download-header-download-button\">\n        <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U2Dv2AUtNavo19cA13tADYyEtw6_1Fj7ihxxkyWm7fDsMlT8oP0APCQJ6P1IrRzMz8Lp7dnvOFd/test_data.zip?dl=1\" target=\"_blank\">\n          <i class=\"material-icons grey\">save_alt</i>\n        </a>\n      </div>\n    </div>\n    <div class=\"test-data-download-content\">\n      <div class=\"test-data-download-warning\">\n        <span class=\"material-icons\" style=\"color: grey; vertical-align: middle;\">info</span>\n        <span style=\"vertical-align: middle;\">We recommend that you practice debugging solutions without looking at the test data.</span>\n      </div>\n    </div>\n  </div>\n\n","id":"00000000004347b6","statement":"<h3>Problem</h3>\n<p>\nThere exist some cities that are built along a straight road. The cities are numbered 1, 2, 3... from left to right.\n</p>\n<p>\nThere are <b>N</b> GBuses that operate along this road. For each GBus, we know the range of cities that it serves: the i-th gBus serves the cities with numbers between <b>A<sub>i</sub></b> and <b>B<sub>i</sub></b>, inclusive.\n</p>\n<p>\nWe are interested in a particular subset of <b>P</b> cities. For each of those cities, we need to find out how many GBuses serve that particular city.\n</p>\n\n<h3>Input</h3>\n<p>\nThe first line of the input gives the number of test cases, <b>T</b>. Then, <b>T</b> test cases follow; each case is separated from the next by one <u>blank</u> line. (Notice that this is unusual for Kickstart data sets.)\n</p><p>\nIn each test case:\n</p>\n<ul>\n<li>The first line contains one integer <b>N</b>: the number of GBuses.</li>\n<li>The second line contains 2<b>N</b> integers representing the ranges of cities that the buses serve, in the form <b>A<sub>1</sub> B<sub>1</sub> A<sub>2</sub> B<sub>2</sub> A<sub>3</sub> B<sub>3</sub></b> ... <b>A<sub>N</sub> B<sub>N</sub></b>. That is, the first GBus serves the cities numbered from <b>A<sub>1</sub></b> to <b>B<sub>1</sub></b> (inclusive), and so on.</li>\n<li>The third line contains one integer <b>P</b>: the number of cities we are interested in, as described above. (Note that this is not necessarily the same as the total number of cities in the problem, which is not given.)</li>\n<li>Finally, there are <b>P</b> more lines; the i-th of these contains the number <b>C<sub>i</sub></b> of a city we are interested in.</li>\n</ul>\n\n<h3>Output</h3>\n<p>\nFor each test case, output one line containing <code>Case #x: y</code>, where <code>x</code> is the number of the test case (starting from 1), and <code>y</code> is a list of <b>P</b> integers, in which the i-th integer is the number of GBuses that serve city <b>C<sub>i</sub></b>.\n</p>\n\n<h3>Limits</h3>\n<p>\nTime limit: 30 seconds per test set.<br/>\nMemory limit: 1 GB.<br/>\n1 &le; <b>T</b> &le; 10.<br/>\n</p>\n\n<h3>Small dataset (Test Set 1 - Visible)</h3>\n<p>\n1 &le; <b>N</b> &le; 50 <br/>\n1 &le; <b>A<sub>i</sub></b> &le; 500, for all i.<br/>\n1 &le; <b>B<sub>i</sub></b> &le; 500, for all i.<br/>\n1 &le; <b>C<sub>i</sub></b> &le; 500, for all i.<br/>\n1 &le; <b>P</b> &le; 50.<br/>\n</p>\n\n<h3>Large dataset (Test Set 2 - Hidden)</h3>\n<p>\n1 &le; <b>N</b> &le; 500.<br/>\n1 &le; <b>A<sub>i</sub></b> &le; 5000, for all i.<br/>\n1 &le; <b>B<sub>i</sub></b> &le; 5000, for all i.<br/>\n1 &le; <b>C<sub>i</sub></b> &le; 5000, for all i.<br/>\n1 &le; <b>P</b> &le; 500.<br/>\n</p>\n\n\n  <h3>Sample</h3>\n  <div class=\"problem-io-wrapper-new\">\n    <div class=\"sampleio-wrapper\">\n      <div class=\"sample-input\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Input</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U0-8G1cY8CnHK1MmN4P8rg3SnkVTYnln82gjFOtteKurw6m4gM_MIWWJAzpw8ITy2IbZ0IgjgRtSXwWK46SJ9btJ1zTd5j-xR1i/gbus_count_sample_ts1_input.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_input_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_input_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_input_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_input_0\">2\n4\n15 25 30 35 45 50 10 20\n2\n15\n25\n\n10\n10 15 5 12 40 55 1 10 25 35 45 50 20 28 27 35 15 40 4 5\n3\n5\n10\n27\n</pre>\n        </div>\n      </div>\n      <div class=\"sample-output\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Output</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U16pCC_1ADfyQ9osQ-dRXAOmdDWMVa2L1zYxUa96cO4DtIBXTxErvhvcp_yemtxzIuKtxZsP_O1VJzVZ19eB44-24z3LQLVIDbCWw/gbus_count_sample_ts1_output.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_output_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_output_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_output_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_output_0\">Case #1: 2 1\nCase #2: 3 3 4\n</pre>\n        </div>\n      </div>\n    </div>\n  </div>\n\n\n<p>\nIn Sample Case #1, there are four GBuses. The first serves cities 15 through 25, the second serves cities 30 through 35, the third serves cities 45 through 50, and the fourth serves cities 10 through 20. City 15 is served by the first and fourth buses, so the first number in our answer list is 2. City 25 is served by only the first bus, so the second number in our answer list is 1.\n</p>\n","task_type":1,"task_type__str":"CODE_JAM","tests":[{"type":1,"type__str":"VISIBLE","value":9},{"type":2,"type__str":"HIDDEN","value":15}],"title":"GBus count","trial_input_type":1,"trial_input_type__str":"TEXT_FILE"},{"analysis":"\n  <div class=\"test-data-download-wrapper\">\n    <div class=\"test-data-download-header\">\n      <div class=\"test-data-download-header-text\">Test Data</div>\n      <div class=\"test-data-download-header-download-button\">\n        <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U3866YiQk3n0j9vl-R0EpDAOn0iHZCzn92zpY9v4U-ioHtrOBW0qRsmkhLtXH3cyfkcuFTl1hF7/test_data.zip?dl=1\" target=\"_blank\">\n          <i class=\"material-icons grey\">save_alt</i>\n        </a>\n      </div>\n    </div>\n    <div class=\"test-data-download-content\">\n      <div class=\"test-data-download-warning\">\n        <span class=\"material-icons\" style=\"color: grey; vertical-align: middle;\">info</span>\n        <span style=\"vertical-align: middle;\">We recommend that you practice debugging solutions without looking at the test data.</span>\n      </div>\n    </div>\n  </div>\n\n","id":"00000000004348e4","statement":"<h3>Problem</h3>\n<p>\nOnce upon a day, Mary bought a one-way ticket from somewhere to somewhere with some flight transfers.<br/><br/>\nFor example: SFO-&gt;DFW DFW-&gt;JFK JFK-&gt;MIA MIA-&gt;ORD.<br/>\n<br/>\nObviously, transfer flights at a city twice or more doesn't make any sense. So Mary will not do that.<br/>\n<br/>\n\nUnfortunately, after she received the tickets, she messed up the tickets and she forgot the order of the ticket.<br/>\n<br/>\nHelp Mary rearrange the tickets to make the tickets in correct order.\n</p>\n\n<h3>Input</h3>\n<p>\nThe first line contains the number of test cases <b>T</b>, after which <b>T</b> cases follow.<br/>\nFor each case, it starts with an integer <b>N</b>. There are <b>N</b> flight tickets follow.<br/>\nEach of the next 2 lines contains the source and destination of a flight ticket.\n\n</p>\n\n<h3>Output</h3>\n<p>\nFor each test case, output one line containing \"Case #x: itinerary\", where <b>x</b> is the test case number (starting from 1) and <b>itinerary</b> is sorted list of flight tickets which represents the actual itinerary. Each flight segment in the itinerary should be outputted as pair of source-destination airport codes.\n</p>\n\n<h3>Limits</h3>\n<p>\nTime limit: 30 seconds per test set.<br/>\nMemory limit: 1 GB.<br/>\n1 &le; <b>T</b> &le; 100.<br/>\n\nFor each case, the input tickets are messed up from an entire itinerary bought by Mary. In other words, it's ensured can be recovered to a valid itinerary.\n</p>\n\n<h4>Small dataset (Test Set 1 - Visible)</h4>\n<p>\n1 &le; <b>N</b> &le; 100.<br/>\n</p>\n\n<h4>Large dataset (Test Set 2 - Hidden)</h4>\n<p>\n1 &le; <b>N</b> &le; 10<sup>4</sup>.<br/>\n</p>\n\n(The segment for second case in sample can be seen as below)\nMIA-ORD, DFW-JFK, SFO-DFW, JFK-MIA\n\n\n  <h3>Sample</h3>\n  <div class=\"problem-io-wrapper-new\">\n    <div class=\"sampleio-wrapper\">\n      <div class=\"sample-input\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Input</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U1THFLU6UFGMXBcCaQk3sqvwQIRixld1rVIj9Hn68cqKWlma_opWChzL5XYxa_VQ2s3G4na-0aw0r1kIh-6qCQzmJcA7zn8yxvS1DgdSGFH7x3gW3ZApBGzMg/sort_a_scrambled_itinerary_sample_ts1_input.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_input_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_input_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_input_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_input_0\">2\n1\nSFO\nDFW\n4\nMIA\nORD\nDFW\nJFK\nSFO\nDFW\nJFK\nMIA\n</pre>\n        </div>\n      </div>\n      <div class=\"sample-output\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Output</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U0OS0B0vbq52MkdYABPO3lAoK8kkr0WdnpA1Ult4uwEtppd0KHoHsp708hiFnTCd8_7ZT4E6tMLrtyfLx57l94Mr8t0boqiT055DpEy9IslYyYAt3n-HgLNq2k/sort_a_scrambled_itinerary_sample_ts1_output.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_output_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_output_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_output_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_output_0\">Case #1: SFO-DFW\nCase #2: SFO-DFW DFW-JFK JFK-MIA MIA-ORD\n</pre>\n        </div>\n      </div>\n    </div>\n  </div>\n\n","task_type":1,"task_type__str":"CODE_JAM","tests":[{"type":1,"type__str":"VISIBLE","value":11},{"type":2,"type__str":"HIDDEN","value":15}],"title":"Sort a scrambled itinerary","trial_input_type":1,"trial_input_type__str":"TEXT_FILE"},{"analysis":"\n  <div class=\"test-data-download-wrapper\">\n    <div class=\"test-data-download-header\">\n      <div class=\"test-data-download-header-text\">Test Data</div>\n      <div class=\"test-data-download-header-download-button\">\n        <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U0_k0M1p0XjfTd9Ik5tp_7JLUE5XVhMRFRfn4elt4U4mXGZVq5678kot0Z0tAjtpxqyxPfHajOL/test_data.zip?dl=1\" target=\"_blank\">\n          <i class=\"material-icons grey\">save_alt</i>\n        </a>\n      </div>\n    </div>\n    <div class=\"test-data-download-content\">\n      <div class=\"test-data-download-warning\">\n        <span class=\"material-icons\" style=\"color: grey; vertical-align: middle;\">info</span>\n        <span style=\"vertical-align: middle;\">We recommend that you practice debugging solutions without looking at the test data.</span>\n      </div>\n    </div>\n  </div>\n\n","id":"00000000004349aa","statement":"<h3>Problem</h3>\n<p>\nGiven an arranged chess board with pieces, figure out the total number of different ways in which any piece can be killed <b>in one move</b>. Note: in this problem, the pieces can be killed despite of the color.<br/>\n\n<img src=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U35VZugZ7UPgY1xQ9UKhYhDSHTYpelU8GZ2zF4M_uT_S7keNdVrQKi-IuYSJ4Dsa-P2rXI/chess.png\">\n<p>\nFor example, if there are 3 pieces King is at B2, Pawn at A1 and Queen at H8 then \nthe total number of pieces that an be killed is 3. H8-Q can kill B2-K, A1-P can kill B2-K, B2-K can kill A1-P\n\n<p>\nA position on the chess board is represented as A1, A2... A8,B1.. H8\n\n<p>\nPieces are represented as\n<ul>\n<li> (K) King can move in 8 direction by one place.\n<li> (Q) Queen can move in 8 direction by any number of places, but can't overtake another piece.\n<li> (R) Rook can only move vertically or horitonzally, but can't overtake another piece.\n<li> (B) Bishop can only move diagonally, but can't overtake another piece.\n<li> (N) Knights can move to a square that is two squares horizontally and one square vertically <b>OR</b> one squares horizontally and two square vertically.\n<li> (P) Pawn can only kill by moving diagonally upwards (towards higher number i.e. A -&gt; B, B-&gt;C and so on).\n</ul>\n\n<h3>Input</h3>\n<p>\nThe first line of the input gives the number of test cases, <b>T</b>.  <b>T</b> Test cases follow. Each test case consists of the number of pieces , <b> N</b>. <b>N</b> lines follow, each line mentions where a piece is present followed by <b>-</b> with the piece type\n</p>\n\n<h3>Output</h3>\n<p>\nFor each test case, output one line containing \"Case #x: y\", where x is the test case number (starting from 1) and y is the the total number of different ways in which any piece can be killed.\n</p>\n\n<h3>Limits</h3>\n<p>\nTime limit: 30 seconds per test set.<br/>\nMemory limit: 1 GB.<br/>\n1 &le; <b>T</b> &le; 100.<br/>\n</p>\n\n<h4>Small dataset (Test Set 1 - Visible)</h4>\n<p>\n1 &le; <b>N</b> &le; 10.<br/>\nPieces can include K, P<br/>\n</p>\n\n<h4>Large dataset (Test Set 2 - Hidden)</h4>\n<p>\n1 &le; <b>N</b> &le; 64.<br/>\n</p>\n\n  <h3>Sample</h3>\n  <div class=\"problem-io-wrapper-new\">\n    <div class=\"sampleio-wrapper\">\n      <div class=\"sample-input\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Input</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U0GUjbtoniY5XtQxwRS8IaQevO4zcIdZLSuBqwrrPr9h1vlnKWMexb-3PYVXBtsj78XwNqiachiDeFZtjU1GwGd5gv17YFqZj4/itz_chess_sample_ts1_input.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_input_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_input_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_input_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_input_0\">2\n2\nA1-K\nA8-Q\n\n3\nB2-K\nA1-P\nH8-Q\n</pre>\n        </div>\n      </div>\n      <div class=\"sample-output\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Output</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U2Ut0D8d3eC-l1l3EoPFLls5G0OJll3xxt6Q13a98LnHGzqGW72eKfyWllZdvjhY_dox_SCr-tmoGnYbv8BTFX3Rk1igIKhrxNW/itz_chess_sample_ts1_output.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_output_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_output_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_output_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_output_0\">Case #1: 1\nCase #2: 3\n</pre>\n        </div>\n      </div>\n    </div>\n  </div>\n\n","task_type":1,"task_type__str":"CODE_JAM","tests":[{"type":1,"type__str":"VISIBLE","value":12},{"type":2,"type__str":"HIDDEN","value":15}],"title":"Itz Chess","trial_input_type":1,"trial_input_type__str":"TEXT_FILE"},{"analysis":"\n  <div class=\"test-data-download-wrapper\">\n    <div class=\"test-data-download-header\">\n      <div class=\"test-data-download-header-text\">Test Data</div>\n      <div class=\"test-data-download-header-download-button\">\n        <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U2dZeu8gxKiFxyLdsWbjHIQAFesrpyTpAywBmnApeJPBuFdif81mucSKvrOlFfkES5H1TCGdKBE/test_data.zip?dl=1\" target=\"_blank\">\n          <i class=\"material-icons grey\">save_alt</i>\n        </a>\n      </div>\n    </div>\n    <div class=\"test-data-download-content\">\n      <div class=\"test-data-download-warning\">\n        <span class=\"material-icons\" style=\"color: grey; vertical-align: middle;\">info</span>\n        <span style=\"vertical-align: middle;\">We recommend that you practice debugging solutions without looking at the test data.</span>\n      </div>\n    </div>\n  </div>\n\n","id":"0000000000434adb","statement":"<h3>Problem</h3>\nVincenzo decides to make cube IV but only has the budget to make a square maze. Its a perfect maze, every room is in the form of a square and there are 4 doors (1 on each side of the room). There is a big number written in the room. A person can only move from one room to another if the number in the next room is larger than the number in his current room by 1. Now, Vincenzo assigns unique numbers to all the rooms (1, 2, 3, .... S<sup>2</sup>) and then places S<sup>2</sup> people in the maze, 1 in each room where S is the side length of the maze. The person who can move maximum number of times will win. Figure out who will emerge as the winner and the number of rooms he will be able to move.\n\n<h3>Input</h3>\n<p>\nThe first line of the input gives the number of test cases, <b>T</b>.  <b>T</b> test cases follow.  Each test case consists of <b>S</b> which is the side length of the square maze. Then S<sup>2</sup> numbers follow like a maze to give the numbers that have been assigned to the rooms.\n\n<p>\n<pre>\n1 2 9 \n5 3 8 \n4 6 7 \n</pre>\n\n<h3>Output</h3>\n<p>\nFor each test case, output one line containing \"Case #x: r d\", where x is the test case number (starting from 1), r is the room number of the person who will win and d is the number of rooms he could move. In case there are multiple such people, the person who is in the smallest room will win.\n\n<h3>Limits</h3>\n<p>\nTime limit: 30 seconds per test set.<br/>\nMemory limit: 1 GB.<br/>\n1 &le; <b>T</b> &le; 100.<br/>\n</p>\n\n<h4>Small dataset (Test Set 1 - Visible)</h4>\n<p>\n1 &le; <b>S</b> &le; 10<br/>\n</p>\n\n<h4>Large dataset (Test Set 2 - Hidden)</h4>\n<p>\n1 &le; <b>S</b> &le; 10<sup>3</sup>.<br/>\n</p>\n\n\n  <h3>Sample</h3>\n  <div class=\"problem-io-wrapper-new\">\n    <div class=\"sampleio-wrapper\">\n      <div class=\"sample-input\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Input</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U23f4n6o7T3qxh42kDP58EjrZW3i2P9DMuNqiFdTocGmESdsQg4bol8VklqEup9qXcpNN52gL5WFMaUwKtfQSjhMlSqtLHs/cube_iv_sample_ts1_input.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_input_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_input_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_input_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_input_0\">2\n2\n3 4\n1 2 \n\n\n3\n1 2 9 \n5 3 8 \n4 6 7 </pre>\n        </div>\n      </div>\n      <div class=\"sample-output\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Output</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U1QUszfU-IS6JnmoclAzmwSB-yWmixk3ObHOVXTx41Z1fOqGoTuNFkOZrxJwssbEC1N4_gQQH3qBI3YApYFAFOS2tygp-lYqg/cube_iv_sample_ts1_output.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_output_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_output_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_output_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_output_0\">Case #1: 1 2\nCase #2: 6 4</pre>\n        </div>\n      </div>\n    </div>\n  </div>\n\n","task_type":1,"task_type__str":"CODE_JAM","tests":[{"type":1,"type__str":"VISIBLE","value":8},{"type":2,"type__str":"HIDDEN","value":15}],"title":"Cube IV","trial_input_type":1,"trial_input_type__str":"TEXT_FILE"}],"ticket":{"challenge_id":"0000000000434b3e","type":1,"type__str":"SPECTATOR"},"title":"Round D 2014"},"languages":[{"id":1,"id__str":"BASH","name":"Bash"},{"id":2,"id__str":"C","name":"C (GCC)"},{"id":11,"id__str":"CSHARP","name":"C# (Mono)"},{"id":3,"id__str":"CPP","name":"C++17 (G++)"},{"id":19,"id__str":"CLOJURE","name":"Clojure"},{"id":24,"id__str":"D","name":"D (GDC)"},{"id":32,"id__str":"DART","name":"Dart"},{"id":28,"id__str":"FSHARP","name":"F# (Mono)"},{"id":6,"id__str":"GO","name":"Go 1.11.6"},{"id":20,"id__str":"GROOVY","name":"Groovy"},{"id":12,"id__str":"HASKELL","name":"Haskell (GHC)"},{"helper_text":"Please name your main class \"Solution\" (uppercase S) and do not declare a package.","id":4,"id__str":"JAVA","name":"Java 11 (OpenJDK)"},{"id":10,"id__str":"JAVASCRIPT","name":"JavaScript (Node.js)"},{"id":29,"id__str":"JULIA","name":"Julia"},{"id":22,"id__str":"KOTLIN","name":"Kotlin"},{"id":23,"id__str":"LISP","name":"Lisp (SBCL)"},{"id":30,"id__str":"LUA","name":"Lua"},{"id":18,"id__str":"OCAML","name":"OCaml"},{"id":31,"id__str":"OBJECTIVEC","name":"Objective-C (GNU)"},{"id":15,"id__str":"OCTAVE","name":"Octave"},{"id":9,"id__str":"PHP","name":"PHP"},{"id":21,"id__str":"PASCAL","name":"Pascal (FPC)"},{"id":14,"id__str":"PERL","name":"Perl"},{"id":34,"id__str":"PYPY3","name":"PyPy 3"},{"id":7,"id__str":"PYTHON3","name":"Python 3.7"},{"id":25,"id__str":"R","name":"R"},{"id":8,"id__str":"RUBY","name":"Ruby"},{"id":17,"id__str":"RUST","name":"Rust"},{"helper_text":"Please name your main class \"Solution\" (uppercase S).","id":13,"id__str":"SCALA","name":"Scala"},{"id":16,"id__str":"SWIFT","name":"Swift"},{"id":33,"id__str":"TYPESCRIPT","name":"TypeScript (Node.js)"},{"id":27,"id__str":"VISUALBASIC","name":"Visual Basic (Mono)"}]}
