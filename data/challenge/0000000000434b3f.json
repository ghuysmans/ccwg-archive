{"challenge":{"announcements":[],"are_results_final":true,"end_ms":1440316800000,"hide_scoreboard":false,"hide_scoreboard_config":{},"id":"0000000000434b3f","is_practice_available":true,"my_user_type":1,"my_user_type__str":"SPECTATOR","recap":"","registration_gives_participant":false,"result_status":30,"result_status__str":"FINALIZED","start_ms":1440306000000,"tasks":[{"analysis":"\n  <div class=\"test-data-download-wrapper\">\n    <div class=\"test-data-download-header\">\n      <div class=\"test-data-download-header-text\">Test Data</div>\n      <div class=\"test-data-download-header-download-button\">\n        <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U1ddvyeL6ZIm21Yzin3AV6TykJcs-r3D9GnNuk03fo6WEsP3QofmEy1PfBo9ikII2cKAF8g8hjV/test_data.zip?dl=1\" target=\"_blank\">\n          <i class=\"material-icons grey\">save_alt</i>\n        </a>\n      </div>\n    </div>\n    <div class=\"test-data-download-content\">\n      <div class=\"test-data-download-warning\">\n        <span class=\"material-icons\" style=\"color: grey; vertical-align: middle;\">info</span>\n        <span style=\"vertical-align: middle;\">We recommend that you practice debugging solutions without looking at the test data.</span>\n      </div>\n    </div>\n  </div>\n\n","id":"00000000004347b7","statement":"<h3>Problem</h3>\n<p>\nGooglers are very interested in cubes, but they are bored with normal three-dimensional cubes and also want to think about other kinds of cubes! A \"D-dimensional cube\" has D dimensions, all of equal length. (D may be any positive integer; for example, a 1-dimensional cube is a line segment, and a 2-dimensional cube is a square, and a 4-dimensional cube is a hypercube.) A \"D-dimensional cuboid\" has D dimensions, but they might not all have the same lengths.\n</p>\n<p>\nSuppose we have an <b>N</b>-dimensional cuboid. The <b>N</b> dimensions are numbered in order (0, 1, 2, ..., N - 1), and each dimension has a certain length. We want to solve many subproblems of this type:</p>\n<p>\n1. Take all consecutive dimensions between the <b>L<sub>i</b>-th dimension and <b>R<sub>i</b>-th dimension, inclusive.<br>\n<br>\n2. Use those dimensions to form a D-dimensional cuboid, where D = <b>R<sub>i</b> - <b>L<sub>i</b> + 1. (For example, if <b>L<sub>i</b> = 3 and <b>R<sub>i</b> = 6, we would form a 4-dimensional cuboid using the 3rd, 4th, 5th, and 6th dimensions of our <b>N</b>-dimensional cuboid.)<br>\n<br>\n3. Reshape it into a D-dimensional cube <b>that has exactly the same volume as that D-dimensional cuboid</b>, and find the edge length of that cube.<br>\n<br>\nEach test case will have <b>M</b> subproblems like this, all of which use the same original <b>N</b>-dimensional cuboid.\n\n<h3>Input</h3>\n<p>\nThe first line of the input gives the number of test cases, <b>T</b>. <b>T</b> test cases follow.\n</p>\n<p>\nEach test case begins with two integers <b>N</b> and <b>M</b>; <b>N</b> is the number of dimensions and <b>M</b> is the number of queries. Then there is one line with <b>N</b> positive integers <b>a<sub>i</b>, which are the lengths of the dimensions, in order. Then, <b>M</b> lines follow. In the ith line, there are two integers <b>L<sub>i</b> and <b>R<sub>i</b>, which give the range of dimensions to use for the ith subproblem.\n</p>\n\n<h3>Output</h3>\n<p>\nFor each test case, output one line containing \"Case #x:\", where x is the test case number (starting from 1). After that, output <b>M</b> lines, where the ith line has the edge length for the ith subproblem. An edge length will be considered correct if it is within an absolute error of 10<sup>-6</sup> of the correct answer. See the <a href=\"https://codingcompetitions.withgoogle.com/kickstart/faq\" target=\"_blank\">FAQ</a> for an explanation of what that means, and what formats of real numbers we accept.\n</p>\n\n<h3>Limits</h3>\n<p>\nTime limit: 30 seconds per test set.<br/>\nMemory limit: 1GB.<br/>\n1 &le; <b>T</b> &le; 100.<br/>\n1 &le; <b>a<sub>i</sub></b> &le; 10<sup>9</sup>. <br/>\n0 &le; <b>L<sub>i</sub></b> &le; <b>R<sub>i</sub></b> &lt; <b>N</b>.\n</p>\n\n<h4>Small dataset (Test Set 1 - Visible)</h4>\n<p>\n1 &le; <b>N</b> &le; 10.<br/>\n1 &le; <b>M</b> &le; 10.<br/>\n</p>\n\n<h4>Large dataset (Test Set 2 - Hidden)</h4>\n<p>\n1 &le; <b>N</b> &le; 1000.<br/>\n1 &le; <b>M</b> &le; 100.<br/>\n</p>\n\n  <h3>Sample</h3>\n  <div class=\"problem-io-wrapper-new\">\n    <div class=\"sampleio-wrapper\">\n      <div class=\"sample-input\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Input</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U1DvRcfWmVMpNScT2E4_RsDzj7c5rJiEfxkTTr0mm-lg79qAZmtKLZTmCUCiAhPx8vhe7s_SwdqlgxD2W1h0ZXKMkCT-g/gcube_sample_ts1_input.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_input_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_input_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_input_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_input_0\">2\n2 2\n1 4\n0 0\n0 1\n3 2\n1 2 3\n0 1\n1 2\n\n</pre>\n        </div>\n      </div>\n      <div class=\"sample-output\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Output</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U208bhPQEIZyCmqdsnS7_SIsQvlGB3-Br7oXGT1uqPdRL4zu5WA1y2Pf_SCHoQbWu1JOPPmv00xAi2GBhA8giWS5Nv0UkA/gcube_sample_ts1_output.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_output_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_output_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_output_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_output_0\">Case #1:\n1.000000000\n2.000000000\nCase #2:\n1.414213562\n2.449489743\n</pre>\n        </div>\n      </div>\n    </div>\n  </div>\n\n","task_type":1,"task_type__str":"CODE_JAM","tests":[{"type":1,"type__str":"VISIBLE","value":8},{"type":2,"type__str":"HIDDEN","value":16}],"title":"gCube","trial_input_type":1,"trial_input_type__str":"TEXT_FILE"},{"analysis":"\n  <div class=\"test-data-download-wrapper\">\n    <div class=\"test-data-download-header\">\n      <div class=\"test-data-download-header-text\">Test Data</div>\n      <div class=\"test-data-download-header-download-button\">\n        <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U1XOh_eGSJNm9YnSz8yjw9Q-BsKDCpQ0MI_OIItMIghFbNFzHox4ZaHRZ_35ObvcEPcDGrKsI9q/test_data.zip?dl=1\" target=\"_blank\">\n          <i class=\"material-icons grey\">save_alt</i>\n        </a>\n      </div>\n    </div>\n    <div class=\"test-data-download-content\">\n      <div class=\"test-data-download-warning\">\n        <span class=\"material-icons\" style=\"color: grey; vertical-align: middle;\">info</span>\n        <span style=\"vertical-align: middle;\">We recommend that you practice debugging solutions without looking at the test data.</span>\n      </div>\n    </div>\n  </div>\n\n","id":"00000000004348e5","statement":"<h3>Problem</h3>\n\n<p>\nCompany G has a main campus with <b>N</b> offices (numbered from 0 to <b>N</b> - 1) and <b>M</b> bidirectional roads (numbered from 0 to <b>M</b> - 1). The ith road connects a pair of offices (U<sub>i</sub>, V<sub>i</sub>), and it takes C<sub>i</sub> minutes to travel on it (in either direction).\n</p>\n\n<p>\nA path between two offices X and Y is a series of one or more roads that starts at X and ends at Y. The time taken to travel a path is the sum of the times needed to travel each of the roads that make up the path. (It's guaranteed that there is at least one path connecting any two offices.)\n</p>\n\n<p>\nCompany G specializes in efficient transport solutions, but the CEO has just realized that, embarrassingly enough, its own road network may be suboptimal! She wants to know which roads in the campus are <i>inefficient</i>. A road is inefficient if and only if it is not included in <b>any</b> shortest paths between <b>any</b> offices.\n</p>\n\n<p>\nGiven the graph of offices and roads, can you help the CEO find all of the inefficient roads?\n</p>\n\n\n<h3>Input</h3>\n<p>\nThe first line of the input gives the number of test cases, <b>T</b>. <b>T</b> test cases follow. Each case begins with one line with two integers <b>N</b> and <b>M</b>, indicating the number of offices and roads. This is followed by <b>M</b> lines containing three integers each: <b>U<sub>i</sub></b>, <b>V<sub>i</sub></b> and <b>C<sub>i</sub></b>, indicating the ith road is between office <b>U<sub>i</sub></b> and office <b>V<sub>i</sub></b>, and it takes <b>C<sub>i</sub></b> minutes to travel on it.\n</p>\n\n<h3>Output</h3>\n<p>\nFor each test case, output one line containing \"Case #x:\", where x is the test case number (starting from 1). Then output the road numbers of all of the inefficient roads, in increasing order, each on its own line. (Note that road 0 refers to the first road listed in a test case, road 1 refers to the second road, etc.)\n</p>\n\n\n<h3>Limits</h3>\n<p>\nTime limit: 30 seconds per test set.<br/>\nMemory limit: 1GB.<br/>\n0 &lt; <b>C<sub>i</sub></b> &le; 1000000.\n</p>\n\n<h4>Small dataset (Test Set 1 - Visible)</h4>\n<p>\n1 &le; <b>T</b> &le; 10.<br/>\n1 &le; <b>N = M</b> &le; 100.<br/>\n</p>\n\n<h4>Large dataset (Test Set 2 - Hidden)</h4>\n<p>\n1 &le; <b>T</b> &le; 3.<br/>\n1 &le; <b>N</b> &le; 100.<br/>\n1 &le; <b>M</b> &le; 10000.<br/>\n</p>\n\n\n  <h3>Sample</h3>\n  <div class=\"problem-io-wrapper-new\">\n    <div class=\"sampleio-wrapper\">\n      <div class=\"sample-input\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Input</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U16wvPOq2B99LHeM54YG5-U8TnHcePcdjBgdGoYE93oI2KI68iQRtC74ynlzP0zsmff6m9jNKKhOcLwzqXcYWlqbqtC9Xu5/gcampus_sample_ts1_input.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_input_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_input_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_input_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_input_0\">2\n3 3\n0 1 10\n1 2 3\n2 0 3\n3 3\n0 1 10\n1 2 3\n2 1 3</pre>\n        </div>\n      </div>\n      <div class=\"sample-output\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Output</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U2hzfnSZH8QuIFmmLoFiZu1aMl_sNDfu6N4nkQSEXoHwoIEfjuU5gM0tua5J0MuvIjZ-Z1DtVKN9HUqcochpCbehhVimwbQbg/gcampus_sample_ts1_output.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_output_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_output_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_output_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_output_0\">Case #1:\n0\nCase #2:</pre>\n        </div>\n      </div>\n    </div>\n  </div>\n\n","task_type":1,"task_type__str":"CODE_JAM","tests":[{"type":1,"type__str":"VISIBLE","value":10},{"type":2,"type__str":"HIDDEN","value":15}],"title":"gCampus","trial_input_type":1,"trial_input_type__str":"TEXT_FILE"},{"analysis":"\n  <div class=\"test-data-download-wrapper\">\n    <div class=\"test-data-download-header\">\n      <div class=\"test-data-download-header-text\">Test Data</div>\n      <div class=\"test-data-download-header-download-button\">\n        <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U1eovkA0jf4pOXVAw29GZL-gqYbTaSmK91laGoaHKvJvG6corxHEaKo1HS6QULkdRbTcDH0dxBF/test_data.zip?dl=1\" target=\"_blank\">\n          <i class=\"material-icons grey\">save_alt</i>\n        </a>\n      </div>\n    </div>\n    <div class=\"test-data-download-content\">\n      <div class=\"test-data-download-warning\">\n        <span class=\"material-icons\" style=\"color: grey; vertical-align: middle;\">info</span>\n        <span style=\"vertical-align: middle;\">We recommend that you practice debugging solutions without looking at the test data.</span>\n      </div>\n    </div>\n  </div>\n\n","id":"00000000004349ab","statement":"<h3>Problem</h3>\n<p>\nAlex is a huge fan of the <a href=\"http://en.wikipedia.org/wiki/Snake_%28video_game%29\" target=\"_blank\">Snake</a> game.\n</p>\n\n<img src=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U0vYkl__QAFUlX4WRtDjxFjMNE0q3U6S0lc8ug8HEg8hdum2gMNfIp210f4zQcC07sHnpU/snake.png\">\n<p>\n<b>Note:</b> This Google Doodle does not exactly match the rules of the Snake game we will describe below. It is only intended to give you a general idea of what the game looks like.\n</p>\n<p>\nAlex just learned how to program and wants to develop his own version of Snake, with the following rules:\n<ul>\n\n<li>\nThe game board has <b>R</b> rows and <b>C</b> columns. The top left cell of the board has coordinates (1, 1), and the bottom right cell has coordinates (<b>R</b>, <b>C</b>).\n</li>\n\n<li>\nAt the start of the game, in every cell with coordinates (r, c) such that r + c is odd, there is one piece of food. No other cells have food.\n</li>\n\n<li> \nThe snake's body is always an ordered, connected sequence of one or more cells on the board. The first cell of the sequence is called the \"head\" of the snake. The second cell (if any) shares an edge (not just a corner) with the first cell, and so on. The last cell in the sequence is called the \"tail\" of the snake.\n</li>\n\n<li>\nThe snake's head is always facing in one of four directions: left, up, right, or down.\n</li>\n\n<li> \nAt the start of the game, the snake is at cell (1, 1) and has a length of one (that is, the snake consists of only a head), and the head faces right. \n</li>\n\n<li>\nAt each integer time (1 second, 2 seconds, etc.), the head of the snake will move into the adjacent cell that its head is facing toward. The board is <b>cyclic</b>, i.e., trying to move off an edge will cause the head to appear on the opposite edge of the board. For example, if the snake is at (1, <b>C</b>) and its head is facing right, the head will next move to (1, 1). If the snake is at (1, <b>C</b>) and its head is facing up, the head will next move to (<b>R</b>, <b>C</b>).\n</li>\n\n<li> \nWhen the snake's head moves into a cell with no food, the snake does not grow. The snake's second cell (if any) moves to the place where the snake's head was, the snake's third cell (if any) moves to the place where the second cell was, and so on.\n</li>\n\n<li>\nWhen the snake's head moves into a cell with a piece of food, it eats the food (meaning that cell no longer has food), and grows its body. A new head is created in the cell where the food was. The cell that was the snake's head becomes the snake's second cell, the cell that was the snake's second cell (if any) becomes the snake's third cell, and so on.\n</li>\n\n<li>\nIf, after a move is complete, the snake's head is in the same place as one of another of its cells, the snake dies and the game ends immediately. (Note that if the snake's head moves toward a cell where its tail was, the game will not end, because the tail will move out of the way before the move is complete.)\n</li>\n\n<li> \nIn the game, the player can let the snake perform some turn actions. Each action A<sub>i</sub> will happen between the T<sub>i</sub>th and T<sub>i</sub>+1 th seconds. There are two possible actions: \"L\" and \"R\". An \"L\" action will turn the head 90 degrees to the left, so, for example, if the snake had been facing down before, it would face right after. An \"R\" action will turn the head 90 degrees to the right, so, for example, if the snake had been facing down before, it would face left after.\n</li>\n\n<li>\nThe game has a time limit: it will end after the move on the <b>10<sup>9</sup></b>th second is complete (if the game has even gone on that long!)\n</li>\n</ul>\n</p>\n\n<p>\nTo test the game, Alex has written a series of TURN actions. Your task is to simulate that series of actions, and tell Alex the final length of the snake when the game is over. Remember that the game can end either because the snake's head and another cell of its body are in the same place after a move is complete, or because time runs out. In the former case, you should count both the head and the overlapping cell of its body as two separate cells, for the purpose of determining length.\n</p>\n\n\n<h3>Input</h3>\n<p>\nThe first line of the input gives the number of test cases, <b>T</b>. <b>T</b> test cases follow. Each test cases starts with three integers <b>S</b>, <b>R</b>, and <b>C</b>, where <b>S</b> gives the number of turn actions and <b>R</b> and <b>C</b> represent the number of rows and columns of the board. <b>S</b> lines follow; the ith of these lines has an integer X<sub>i</sub>, then a character A<sub>i</sub> that is either <code>L</code> or <code>R</code>. Each of these lines corresponds to performing an action between X<sub>i</sub>th and X<sub>i</sub>+1 th seconds. It's guaranteed that the actions are given in time order and there will never be more than one action between the same two seconds. However, you should note that the game may end before the snake gets to execute all of these actions.\n</p>\n\n<h3>Output</h3>\n<p>\nFor each test case, output one line containing \"Case #x: y\", where x is the test case number (starting from 1) and y is the length of the snake when the game is over.\n</p>\n\n<h3>Limits</h3>\n\n<p>\nMemory limit: 1GB.<br/>\n1 &le; <b>T</b> &le; 10.<br/>\n</p>\n\n<h4>Small dataset (Test Set 1 - Visible)</h4>\n<p>\nTime limit: 30 seconds.<br/>\n1 &le; <b>R, C</b> &le; 100;<br/>\n1 &le; <b>S</b> &le; 100;<br/>\n1 &le; X<sub>i</sub> &le; 2000.<br/>\n</p>\n\n<h4>Large dataset (Test Set 2 - Visible)</h4>\n<p>\nTime limit: 60 seconds.<br/>\n1 &le; <b>R, C</b> &le; 100000;<br/>\n1 &le; <b>S</b> &le; 100000;<br/>\n1 &le; X<sub>i</sub> &le; 1000000.<br/>\n</p>\n\n\n  <h3>Sample</h3>\n  <div class=\"problem-io-wrapper-new\">\n    <div class=\"sampleio-wrapper\">\n      <div class=\"sample-input\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Input</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U1GJNcHKZOpxzRa1dk9CCWMk4wZhvaVtEkihWcB6zAYb6zPknRzQbo_387FuRpNga4EH4C_XYOHLbR0PSm6UvCOnbtNz3k/gsnake_sample_ts1_input.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_input_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_input_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_input_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_input_0\">2\n3 3 3\n1 R\n2 L\n3 R\n5 3 3\n2 R\n4 R\n6 R\n7 R\n8 R\n</pre>\n        </div>\n      </div>\n      <div class=\"sample-output\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Output</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U0juaQXj3uLeDFyPbZtd2jrI2kEdggFUhOT7nrkBks2h8DywFH6CR99XyuhvhUOFDWDcTSCuKDAtkbEt5kvCXOjw2PumFzP/gsnake_sample_ts1_output.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_output_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_output_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_output_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_output_0\">Case #1: 3\nCase #2: 5\n</pre>\n        </div>\n      </div>\n    </div>\n  </div>\n\n","task_type":1,"task_type__str":"CODE_JAM","tests":[{"type":1,"type__str":"VISIBLE","value":13},{"type":2,"type__str":"HIDDEN","value":19}],"title":"gSnake","trial_input_type":1,"trial_input_type__str":"TEXT_FILE"},{"analysis":"\n  <div class=\"test-data-download-wrapper\">\n    <div class=\"test-data-download-header\">\n      <div class=\"test-data-download-header-text\">Test Data</div>\n      <div class=\"test-data-download-header-download-button\">\n        <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U0OmL9ITDqcvIq3K0S3RrrGFZosfQwcSGMBF_aQeRbwSV1YdBmyQuketptNZPwuySCpfyenxNsp/test_data.zip?dl=1\" target=\"_blank\">\n          <i class=\"material-icons grey\">save_alt</i>\n        </a>\n      </div>\n    </div>\n    <div class=\"test-data-download-content\">\n      <div class=\"test-data-download-warning\">\n        <span class=\"material-icons\" style=\"color: grey; vertical-align: middle;\">info</span>\n        <span style=\"vertical-align: middle;\">We recommend that you practice debugging solutions without looking at the test data.</span>\n      </div>\n    </div>\n  </div>\n\n","id":"0000000000434adc","statement":"<h3>Problem</h3>\n<p>\nA \"0/1 string\" is a string in which every character is either <code>0</code> or <code>1</code>. There are two operations that can be performed on a 0/1 string:\n<ul>\n<li><b>switch</b>: Every <code>0</code> becomes <code>1</code> and every <code>1</code> becomes <code>0</code>. For example, \"100\" becomes \"011\".</li>\n<li><b>reverse</b>: The string is reversed. For example, \"100\" becomes \"001\".</li>\n</ul>\n</p>\n\n<p>\nConsider this infinite sequence of 0/1 strings:<br>\n<br>\nS<sub>0</sub> = \"\"<br>\n<br>\nS<sub>1</sub> = \"0\"<br>\n<br>\nS<sub>2</sub> = \"001\"<br>\n<br>\nS<sub>3</sub> = \"0010011\"<br>\n<br>\nS<sub>4</sub> = \"001001100011011\"<br>\n<br>\n...<br>\n<br>\nS<sub>N</sub> = S<sub>N-1</sub> + \"0\" + <b>switch</b>(<b>reverse</b>(S<sub>N-1</sub>)).\n</p>\n\n<p>\nYou need to figure out the Kth character of S<sub>googol</sub>, where googol = 10<sup>100</sup>.\n</p>\n\n<h3>Input</h3>\n<p>\nThe first line of the input gives the number of test cases, <b>T</b>.  Each of the next <b>T</b> lines contains a number <b>K</b>.\n</p>\n\n<h3>Output</h3>\n<p>\nFor each test case, output one line containing \"Case #x: y\", where x is the test case number (starting from 1) and y is the <b>K</b>th character of S<sub>googol</sub>.\n</p>\n\n<h3>Limits</h3>\n<p>\nTime limit: 30 seconds per test set.<br/>\nMemory limit: 1GB.<br/>\n1 &le; <b>T</b> &le; 100.<br/>\n</p>\n\n<h4>Small dataset (Test Set 1 - Visible)</h4>\n<p>\n1 &le; <b>K</b> &le; 10<sup>5</sup>.<br/>\n</p>\n\n<h4>Large dataset (Test Set 2 - Hidden)</h4>\n<p>\n1 &le; <b>K</b> &le; 10<sup>18</sup>.<br/>\n</p>\n\n\n  <h3>Sample</h3>\n  <div class=\"problem-io-wrapper-new\">\n    <div class=\"sampleio-wrapper\">\n      <div class=\"sample-input\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Input</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U3N7Ylk_V5SNrqgSTYHjPKhuw_kxa_K1a5V7x-GS57iVCGkUS9SG_Qg-GpnJioM6I5pCK4DGgnrH1lkCdZAmEYDlBdCZJusMAEFh8HG/googol_string_sample_ts1_input.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_input_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_input_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_input_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_input_0\">4\n1\n2\n3\n10\n</pre>\n        </div>\n      </div>\n      <div class=\"sample-output\">\n        <div class=\"sample-header\">\n          <div class=\"sample-header-text\">Sample Output</div>\n          <div class=\"sample-header-download-button\">\n            <a href=\"https://codejam.googleapis.com/dashboard/get_file/AQj_6U28_ut4pPEvkKKOuhe9v5kjmveDppQdak36O5mOlVpLfbvUXov_pOOjC17GrDNA_drtWzkx9CPSLG1w4tJY2FMncIpcSSststD7_9JW9A/googol_string_sample_ts1_output.txt?dl=1\" target=\"_blank\" aria-label=\"Download\">\n              <i class=\"material-icons grey\">save_alt</i>\n            </a>\n          </div>\n          <div class=\"sample-header-copy-button\" onclick=\"\n              const copyText = document.getElementById('sample_output_0').textContent;\n              const textArea = document.createElement('textarea');\n              textArea.textContent = copyText;\n              textArea.style.position = 'absolute';\n              textArea.style.left = '-100%';\n              document.body.append(textArea);\n              textArea.select();\n              document.execCommand('copy');\n              textArea.remove();\n              const copyPopup = document.getElementById('sample_output_copy_popup_0');\n              copyPopup.classList.add('sample-header-copy-popup-shown');\n              setTimeout(function(){ copyPopup.classList.remove('sample-header-copy-popup-shown'); }, 2000);\n          \" aria-label=\"Copy to clipboard\">\n            <i class=\"material-icons grey\">content_copy</i>\n            <span class=\"sample-header-copy-popup\" id=\"sample_output_copy_popup_0\">\n              Copied!\n            </span>\n          </div>\n        </div>\n        <div class=\"sample-content\">\n          <pre class=\"sample-content-text\" id=\"sample_output_0\">Case #1: 0\nCase #2: 0\nCase #3: 1\nCase #4: 0\n\n</pre>\n        </div>\n      </div>\n    </div>\n  </div>\n\n","task_type":1,"task_type__str":"CODE_JAM","tests":[{"type":1,"type__str":"VISIBLE","value":7},{"type":2,"type__str":"HIDDEN","value":12}],"title":"Googol String","trial_input_type":1,"trial_input_type__str":"TEXT_FILE"}],"ticket":{"challenge_id":"0000000000434b3f","type":1,"type__str":"SPECTATOR"},"title":"Round A 2015"},"languages":[{"id":1,"id__str":"BASH","name":"Bash"},{"id":2,"id__str":"C","name":"C (GCC)"},{"id":11,"id__str":"CSHARP","name":"C# (Mono)"},{"id":3,"id__str":"CPP","name":"C++17 (G++)"},{"id":19,"id__str":"CLOJURE","name":"Clojure"},{"id":24,"id__str":"D","name":"D (GDC)"},{"id":32,"id__str":"DART","name":"Dart"},{"id":28,"id__str":"FSHARP","name":"F# (Mono)"},{"id":6,"id__str":"GO","name":"Go 1.11.6"},{"id":20,"id__str":"GROOVY","name":"Groovy"},{"id":12,"id__str":"HASKELL","name":"Haskell (GHC)"},{"helper_text":"Please name your main class \"Solution\" (uppercase S) and do not declare a package.","id":4,"id__str":"JAVA","name":"Java 11 (OpenJDK)"},{"id":10,"id__str":"JAVASCRIPT","name":"JavaScript (Node.js)"},{"id":29,"id__str":"JULIA","name":"Julia"},{"id":22,"id__str":"KOTLIN","name":"Kotlin"},{"id":23,"id__str":"LISP","name":"Lisp (SBCL)"},{"id":30,"id__str":"LUA","name":"Lua"},{"id":18,"id__str":"OCAML","name":"OCaml"},{"id":31,"id__str":"OBJECTIVEC","name":"Objective-C (GNU)"},{"id":15,"id__str":"OCTAVE","name":"Octave"},{"id":9,"id__str":"PHP","name":"PHP"},{"id":21,"id__str":"PASCAL","name":"Pascal (FPC)"},{"id":14,"id__str":"PERL","name":"Perl"},{"id":34,"id__str":"PYPY3","name":"PyPy 3"},{"id":7,"id__str":"PYTHON3","name":"Python 3.7"},{"id":25,"id__str":"R","name":"R"},{"id":8,"id__str":"RUBY","name":"Ruby"},{"id":17,"id__str":"RUST","name":"Rust"},{"helper_text":"Please name your main class \"Solution\" (uppercase S).","id":13,"id__str":"SCALA","name":"Scala"},{"id":16,"id__str":"SWIFT","name":"Swift"},{"id":33,"id__str":"TYPESCRIPT","name":"TypeScript (Node.js)"},{"id":27,"id__str":"VISUALBASIC","name":"Visual Basic (Mono)"}]}
